-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.
--periodCount[15] is periodCount[15]
--register power-up is low

periodCount[15] = DFFEAS(A1L2, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[18] is periodCount[18]
--register power-up is low

periodCount[18] = DFFEAS(A1L6, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[17] is periodCount[17]
--register power-up is low

periodCount[17] = DFFEAS(A1L10, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[16] is periodCount[16]
--register power-up is low

periodCount[16] = DFFEAS(A1L14, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[14] is periodCount[14]
--register power-up is low

periodCount[14] = DFFEAS(A1L18, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[13] is periodCount[13]
--register power-up is low

periodCount[13] = DFFEAS(A1L22, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[12] is periodCount[12]
--register power-up is low

periodCount[12] = DFFEAS(A1L26, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[7] is periodCount[7]
--register power-up is low

periodCount[7] = DFFEAS(A1L30, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[6] is periodCount[6]
--register power-up is low

periodCount[6] = DFFEAS(A1L34, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[5] is periodCount[5]
--register power-up is low

periodCount[5] = DFFEAS(A1L38, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[4] is periodCount[4]
--register power-up is low

periodCount[4] = DFFEAS(A1L42, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[9] is periodCount[9]
--register power-up is low

periodCount[9] = DFFEAS(A1L46, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[11] is periodCount[11]
--register power-up is low

periodCount[11] = DFFEAS(A1L50, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[10] is periodCount[10]
--register power-up is low

periodCount[10] = DFFEAS(A1L54, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[8] is periodCount[8]
--register power-up is low

periodCount[8] = DFFEAS(A1L58, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[22] is periodCount[22]
--register power-up is low

periodCount[22] = DFFEAS(A1L62, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[25] is periodCount[25]
--register power-up is low

periodCount[25] = DFFEAS(A1L66, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[24] is periodCount[24]
--register power-up is low

periodCount[24] = DFFEAS(A1L70, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[23] is periodCount[23]
--register power-up is low

periodCount[23] = DFFEAS(A1L74, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[21] is periodCount[21]
--register power-up is low

periodCount[21] = DFFEAS(A1L78, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[20] is periodCount[20]
--register power-up is low

periodCount[20] = DFFEAS(A1L82, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[19] is periodCount[19]
--register power-up is low

periodCount[19] = DFFEAS(A1L86, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[28] is periodCount[28]
--register power-up is low

periodCount[28] = DFFEAS(A1L90, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[31] is periodCount[31]
--register power-up is low

periodCount[31] = DFFEAS(A1L94, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[30] is periodCount[30]
--register power-up is low

periodCount[30] = DFFEAS(A1L98, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[29] is periodCount[29]
--register power-up is low

periodCount[29] = DFFEAS(A1L102, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[27] is periodCount[27]
--register power-up is low

periodCount[27] = DFFEAS(A1L106, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[26] is periodCount[26]
--register power-up is low

periodCount[26] = DFFEAS(A1L110, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--A1L130 is Add1~1
A1L130_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[16] ) + ( A1L135 );
A1L130 = SUM(A1L130_adder_eqn);

--A1L131 is Add1~2
A1L131_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[16] ) + ( A1L135 );
A1L131 = CARRY(A1L131_adder_eqn);


--periodCount[3] is periodCount[3]
--register power-up is low

periodCount[3] = DFFEAS(A1L114, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[2] is periodCount[2]
--register power-up is low

periodCount[2] = DFFEAS(A1L118, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[1] is periodCount[1]
--register power-up is low

periodCount[1] = DFFEAS(A1L122, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--periodCount[0] is periodCount[0]
--register power-up is low

periodCount[0] = DFFEAS(A1L126, CLOCK_50, reset,  ,  ,  ,  , A1L282,  );


--A1L134 is Add1~5
A1L134_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[15] ) + ( A1L139 );
A1L134 = SUM(A1L134_adder_eqn);

--A1L135 is Add1~6
A1L135_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[15] ) + ( A1L139 );
A1L135 = CARRY(A1L135_adder_eqn);


--A1L138 is Add1~9
A1L138_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[14] ) + ( A1L167 );
A1L138 = SUM(A1L138_adder_eqn);

--A1L139 is Add1~10
A1L139_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[14] ) + ( A1L167 );
A1L139 = CARRY(A1L139_adder_eqn);


--A1L142 is Add1~13
A1L142_adder_eqn = ( !current_state.SWEEP_RIGHT ) + ( !current_angle[9] ) + ( A1L147 );
A1L142 = SUM(A1L142_adder_eqn);

--A1L143 is Add1~14
A1L143_adder_eqn = ( !current_state.SWEEP_RIGHT ) + ( !current_angle[9] ) + ( A1L147 );
A1L143 = CARRY(A1L143_adder_eqn);


--A1L146 is Add1~17
A1L146_adder_eqn = ( !current_state.SWEEP_RIGHT ) + ( !current_angle[8] ) + ( A1L151 );
A1L146 = SUM(A1L146_adder_eqn);

--A1L147 is Add1~18
A1L147_adder_eqn = ( !current_state.SWEEP_RIGHT ) + ( !current_angle[8] ) + ( A1L151 );
A1L147 = CARRY(A1L147_adder_eqn);


--A1L150 is Add1~21
A1L150_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[7] ) + ( A1L155 );
A1L150 = SUM(A1L150_adder_eqn);

--A1L151 is Add1~22
A1L151_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[7] ) + ( A1L155 );
A1L151 = CARRY(A1L151_adder_eqn);


--A1L154 is Add1~25
A1L154_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[6] ) + ( A1L159 );
A1L154 = SUM(A1L154_adder_eqn);

--A1L155 is Add1~26
A1L155_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( !current_angle[6] ) + ( A1L159 );
A1L155 = CARRY(A1L155_adder_eqn);


--A1L158 is Add1~29
A1L158_adder_eqn = ( current_angle[5] ) + ( VCC ) + ( !VCC );
A1L158 = SUM(A1L158_adder_eqn);

--A1L159 is Add1~30
A1L159_adder_eqn = ( current_angle[5] ) + ( VCC ) + ( !VCC );
A1L159 = CARRY(A1L159_adder_eqn);


--A1L162 is Add1~33
A1L162_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[10] ) + ( A1L143 );
A1L162 = SUM(A1L162_adder_eqn);

--A1L163 is Add1~34
A1L163_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[10] ) + ( A1L143 );
A1L163 = CARRY(A1L163_adder_eqn);


--A1L166 is Add1~37
A1L166_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[13] ) + ( A1L171 );
A1L166 = SUM(A1L166_adder_eqn);

--A1L167 is Add1~38
A1L167_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[13] ) + ( A1L171 );
A1L167 = CARRY(A1L167_adder_eqn);


--A1L170 is Add1~41
A1L170_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[12] ) + ( A1L175 );
A1L170 = SUM(A1L170_adder_eqn);

--A1L171 is Add1~42
A1L171_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[12] ) + ( A1L175 );
A1L171 = CARRY(A1L171_adder_eqn);


--A1L174 is Add1~45
A1L174_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[11] ) + ( A1L163 );
A1L174 = SUM(A1L174_adder_eqn);

--A1L175 is Add1~46
A1L175_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[11] ) + ( A1L163 );
A1L175 = CARRY(A1L175_adder_eqn);


--A1L178 is Add1~49
A1L178_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[26] ) + ( A1L219 );
A1L178 = SUM(A1L178_adder_eqn);

--A1L179 is Add1~50
A1L179_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[26] ) + ( A1L219 );
A1L179 = CARRY(A1L179_adder_eqn);


--A1L182 is Add1~53
A1L182_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[20] ) + ( A1L187 );
A1L182 = SUM(A1L182_adder_eqn);

--A1L183 is Add1~54
A1L183_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[20] ) + ( A1L187 );
A1L183 = CARRY(A1L183_adder_eqn);


--A1L186 is Add1~57
A1L186_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[19] ) + ( A1L191 );
A1L186 = SUM(A1L186_adder_eqn);

--A1L187 is Add1~58
A1L187_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[19] ) + ( A1L191 );
A1L187 = CARRY(A1L187_adder_eqn);


--A1L190 is Add1~61
A1L190_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[18] ) + ( A1L195 );
A1L190 = SUM(A1L190_adder_eqn);

--A1L191 is Add1~62
A1L191_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[18] ) + ( A1L195 );
A1L191 = CARRY(A1L191_adder_eqn);


--A1L194 is Add1~65
A1L194_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[17] ) + ( A1L131 );
A1L194 = SUM(A1L194_adder_eqn);

--A1L195 is Add1~66
A1L195_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[17] ) + ( A1L131 );
A1L195 = CARRY(A1L195_adder_eqn);


--A1L198 is Add1~69
A1L198_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[31] ) + ( A1L203 );
A1L198 = SUM(A1L198_adder_eqn);


--A1L202 is Add1~73
A1L202_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[30] ) + ( A1L207 );
A1L202 = SUM(A1L202_adder_eqn);

--A1L203 is Add1~74
A1L203_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[30] ) + ( A1L207 );
A1L203 = CARRY(A1L203_adder_eqn);


--A1L206 is Add1~77
A1L206_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[29] ) + ( A1L211 );
A1L206 = SUM(A1L206_adder_eqn);

--A1L207 is Add1~78
A1L207_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[29] ) + ( A1L211 );
A1L207 = CARRY(A1L207_adder_eqn);


--A1L210 is Add1~81
A1L210_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[28] ) + ( A1L215 );
A1L210 = SUM(A1L210_adder_eqn);

--A1L211 is Add1~82
A1L211_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[28] ) + ( A1L215 );
A1L211 = CARRY(A1L211_adder_eqn);


--A1L214 is Add1~85
A1L214_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[27] ) + ( A1L179 );
A1L214 = SUM(A1L214_adder_eqn);

--A1L215 is Add1~86
A1L215_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[27] ) + ( A1L179 );
A1L215 = CARRY(A1L215_adder_eqn);


--A1L218 is Add1~89
A1L218_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[25] ) + ( A1L223 );
A1L218 = SUM(A1L218_adder_eqn);

--A1L219 is Add1~90
A1L219_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[25] ) + ( A1L223 );
A1L219 = CARRY(A1L219_adder_eqn);


--A1L222 is Add1~93
A1L222_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[24] ) + ( A1L227 );
A1L222 = SUM(A1L222_adder_eqn);

--A1L223 is Add1~94
A1L223_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[24] ) + ( A1L227 );
A1L223 = CARRY(A1L223_adder_eqn);


--A1L226 is Add1~97
A1L226_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[23] ) + ( A1L231 );
A1L226 = SUM(A1L226_adder_eqn);

--A1L227 is Add1~98
A1L227_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[23] ) + ( A1L231 );
A1L227 = CARRY(A1L227_adder_eqn);


--A1L230 is Add1~101
A1L230_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[22] ) + ( A1L235 );
A1L230 = SUM(A1L230_adder_eqn);

--A1L231 is Add1~102
A1L231_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[22] ) + ( A1L235 );
A1L231 = CARRY(A1L231_adder_eqn);


--A1L234 is Add1~105
A1L234_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[21] ) + ( A1L183 );
A1L234 = SUM(A1L234_adder_eqn);

--A1L235 is Add1~106
A1L235_adder_eqn = ( current_state.SWEEP_RIGHT ) + ( current_angle[21] ) + ( A1L183 );
A1L235 = CARRY(A1L235_adder_eqn);


--A1L2 is Add0~1
A1L2_adder_eqn = ( periodCount[15] ) + ( GND ) + ( A1L19 );
A1L2 = SUM(A1L2_adder_eqn);

--A1L3 is Add0~2
A1L3_adder_eqn = ( periodCount[15] ) + ( GND ) + ( A1L19 );
A1L3 = CARRY(A1L3_adder_eqn);


--A1L6 is Add0~5
A1L6_adder_eqn = ( periodCount[18] ) + ( GND ) + ( A1L11 );
A1L6 = SUM(A1L6_adder_eqn);

--A1L7 is Add0~6
A1L7_adder_eqn = ( periodCount[18] ) + ( GND ) + ( A1L11 );
A1L7 = CARRY(A1L7_adder_eqn);


--A1L10 is Add0~9
A1L10_adder_eqn = ( periodCount[17] ) + ( GND ) + ( A1L15 );
A1L10 = SUM(A1L10_adder_eqn);

--A1L11 is Add0~10
A1L11_adder_eqn = ( periodCount[17] ) + ( GND ) + ( A1L15 );
A1L11 = CARRY(A1L11_adder_eqn);


--A1L14 is Add0~13
A1L14_adder_eqn = ( periodCount[16] ) + ( GND ) + ( A1L3 );
A1L14 = SUM(A1L14_adder_eqn);

--A1L15 is Add0~14
A1L15_adder_eqn = ( periodCount[16] ) + ( GND ) + ( A1L3 );
A1L15 = CARRY(A1L15_adder_eqn);


--A1L18 is Add0~17
A1L18_adder_eqn = ( periodCount[14] ) + ( GND ) + ( A1L23 );
A1L18 = SUM(A1L18_adder_eqn);

--A1L19 is Add0~18
A1L19_adder_eqn = ( periodCount[14] ) + ( GND ) + ( A1L23 );
A1L19 = CARRY(A1L19_adder_eqn);


--A1L22 is Add0~21
A1L22_adder_eqn = ( periodCount[13] ) + ( GND ) + ( A1L27 );
A1L22 = SUM(A1L22_adder_eqn);

--A1L23 is Add0~22
A1L23_adder_eqn = ( periodCount[13] ) + ( GND ) + ( A1L27 );
A1L23 = CARRY(A1L23_adder_eqn);


--A1L26 is Add0~25
A1L26_adder_eqn = ( periodCount[12] ) + ( GND ) + ( A1L51 );
A1L26 = SUM(A1L26_adder_eqn);

--A1L27 is Add0~26
A1L27_adder_eqn = ( periodCount[12] ) + ( GND ) + ( A1L51 );
A1L27 = CARRY(A1L27_adder_eqn);


--A1L30 is Add0~29
A1L30_adder_eqn = ( periodCount[7] ) + ( GND ) + ( A1L35 );
A1L30 = SUM(A1L30_adder_eqn);

--A1L31 is Add0~30
A1L31_adder_eqn = ( periodCount[7] ) + ( GND ) + ( A1L35 );
A1L31 = CARRY(A1L31_adder_eqn);


--A1L34 is Add0~33
A1L34_adder_eqn = ( periodCount[6] ) + ( GND ) + ( A1L39 );
A1L34 = SUM(A1L34_adder_eqn);

--A1L35 is Add0~34
A1L35_adder_eqn = ( periodCount[6] ) + ( GND ) + ( A1L39 );
A1L35 = CARRY(A1L35_adder_eqn);


--A1L38 is Add0~37
A1L38_adder_eqn = ( periodCount[5] ) + ( GND ) + ( A1L43 );
A1L38 = SUM(A1L38_adder_eqn);

--A1L39 is Add0~38
A1L39_adder_eqn = ( periodCount[5] ) + ( GND ) + ( A1L43 );
A1L39 = CARRY(A1L39_adder_eqn);


--A1L42 is Add0~41
A1L42_adder_eqn = ( periodCount[4] ) + ( GND ) + ( A1L115 );
A1L42 = SUM(A1L42_adder_eqn);

--A1L43 is Add0~42
A1L43_adder_eqn = ( periodCount[4] ) + ( GND ) + ( A1L115 );
A1L43 = CARRY(A1L43_adder_eqn);


--A1L46 is Add0~45
A1L46_adder_eqn = ( periodCount[9] ) + ( GND ) + ( A1L59 );
A1L46 = SUM(A1L46_adder_eqn);

--A1L47 is Add0~46
A1L47_adder_eqn = ( periodCount[9] ) + ( GND ) + ( A1L59 );
A1L47 = CARRY(A1L47_adder_eqn);


--A1L50 is Add0~49
A1L50_adder_eqn = ( periodCount[11] ) + ( GND ) + ( A1L55 );
A1L50 = SUM(A1L50_adder_eqn);

--A1L51 is Add0~50
A1L51_adder_eqn = ( periodCount[11] ) + ( GND ) + ( A1L55 );
A1L51 = CARRY(A1L51_adder_eqn);


--A1L54 is Add0~53
A1L54_adder_eqn = ( periodCount[10] ) + ( GND ) + ( A1L47 );
A1L54 = SUM(A1L54_adder_eqn);

--A1L55 is Add0~54
A1L55_adder_eqn = ( periodCount[10] ) + ( GND ) + ( A1L47 );
A1L55 = CARRY(A1L55_adder_eqn);


--A1L58 is Add0~57
A1L58_adder_eqn = ( periodCount[8] ) + ( GND ) + ( A1L31 );
A1L58 = SUM(A1L58_adder_eqn);

--A1L59 is Add0~58
A1L59_adder_eqn = ( periodCount[8] ) + ( GND ) + ( A1L31 );
A1L59 = CARRY(A1L59_adder_eqn);


--A1L62 is Add0~61
A1L62_adder_eqn = ( periodCount[22] ) + ( GND ) + ( A1L79 );
A1L62 = SUM(A1L62_adder_eqn);

--A1L63 is Add0~62
A1L63_adder_eqn = ( periodCount[22] ) + ( GND ) + ( A1L79 );
A1L63 = CARRY(A1L63_adder_eqn);


--A1L66 is Add0~65
A1L66_adder_eqn = ( periodCount[25] ) + ( GND ) + ( A1L71 );
A1L66 = SUM(A1L66_adder_eqn);

--A1L67 is Add0~66
A1L67_adder_eqn = ( periodCount[25] ) + ( GND ) + ( A1L71 );
A1L67 = CARRY(A1L67_adder_eqn);


--A1L70 is Add0~69
A1L70_adder_eqn = ( periodCount[24] ) + ( GND ) + ( A1L75 );
A1L70 = SUM(A1L70_adder_eqn);

--A1L71 is Add0~70
A1L71_adder_eqn = ( periodCount[24] ) + ( GND ) + ( A1L75 );
A1L71 = CARRY(A1L71_adder_eqn);


--A1L74 is Add0~73
A1L74_adder_eqn = ( periodCount[23] ) + ( GND ) + ( A1L63 );
A1L74 = SUM(A1L74_adder_eqn);

--A1L75 is Add0~74
A1L75_adder_eqn = ( periodCount[23] ) + ( GND ) + ( A1L63 );
A1L75 = CARRY(A1L75_adder_eqn);


--A1L78 is Add0~77
A1L78_adder_eqn = ( periodCount[21] ) + ( GND ) + ( A1L83 );
A1L78 = SUM(A1L78_adder_eqn);

--A1L79 is Add0~78
A1L79_adder_eqn = ( periodCount[21] ) + ( GND ) + ( A1L83 );
A1L79 = CARRY(A1L79_adder_eqn);


--A1L82 is Add0~81
A1L82_adder_eqn = ( periodCount[20] ) + ( GND ) + ( A1L87 );
A1L82 = SUM(A1L82_adder_eqn);

--A1L83 is Add0~82
A1L83_adder_eqn = ( periodCount[20] ) + ( GND ) + ( A1L87 );
A1L83 = CARRY(A1L83_adder_eqn);


--A1L86 is Add0~85
A1L86_adder_eqn = ( periodCount[19] ) + ( GND ) + ( A1L7 );
A1L86 = SUM(A1L86_adder_eqn);

--A1L87 is Add0~86
A1L87_adder_eqn = ( periodCount[19] ) + ( GND ) + ( A1L7 );
A1L87 = CARRY(A1L87_adder_eqn);


--A1L90 is Add0~89
A1L90_adder_eqn = ( periodCount[28] ) + ( GND ) + ( A1L107 );
A1L90 = SUM(A1L90_adder_eqn);

--A1L91 is Add0~90
A1L91_adder_eqn = ( periodCount[28] ) + ( GND ) + ( A1L107 );
A1L91 = CARRY(A1L91_adder_eqn);


--A1L94 is Add0~93
A1L94_adder_eqn = ( periodCount[31] ) + ( GND ) + ( A1L99 );
A1L94 = SUM(A1L94_adder_eqn);


--A1L98 is Add0~97
A1L98_adder_eqn = ( periodCount[30] ) + ( GND ) + ( A1L103 );
A1L98 = SUM(A1L98_adder_eqn);

--A1L99 is Add0~98
A1L99_adder_eqn = ( periodCount[30] ) + ( GND ) + ( A1L103 );
A1L99 = CARRY(A1L99_adder_eqn);


--A1L102 is Add0~101
A1L102_adder_eqn = ( periodCount[29] ) + ( GND ) + ( A1L91 );
A1L102 = SUM(A1L102_adder_eqn);

--A1L103 is Add0~102
A1L103_adder_eqn = ( periodCount[29] ) + ( GND ) + ( A1L91 );
A1L103 = CARRY(A1L103_adder_eqn);


--A1L106 is Add0~105
A1L106_adder_eqn = ( periodCount[27] ) + ( GND ) + ( A1L111 );
A1L106 = SUM(A1L106_adder_eqn);

--A1L107 is Add0~106
A1L107_adder_eqn = ( periodCount[27] ) + ( GND ) + ( A1L111 );
A1L107 = CARRY(A1L107_adder_eqn);


--A1L110 is Add0~109
A1L110_adder_eqn = ( periodCount[26] ) + ( GND ) + ( A1L67 );
A1L110 = SUM(A1L110_adder_eqn);

--A1L111 is Add0~110
A1L111_adder_eqn = ( periodCount[26] ) + ( GND ) + ( A1L67 );
A1L111 = CARRY(A1L111_adder_eqn);


--A1L114 is Add0~113
A1L114_adder_eqn = ( periodCount[3] ) + ( GND ) + ( A1L119 );
A1L114 = SUM(A1L114_adder_eqn);

--A1L115 is Add0~114
A1L115_adder_eqn = ( periodCount[3] ) + ( GND ) + ( A1L119 );
A1L115 = CARRY(A1L115_adder_eqn);


--A1L118 is Add0~117
A1L118_adder_eqn = ( periodCount[2] ) + ( GND ) + ( A1L123 );
A1L118 = SUM(A1L118_adder_eqn);

--A1L119 is Add0~118
A1L119_adder_eqn = ( periodCount[2] ) + ( GND ) + ( A1L123 );
A1L119 = CARRY(A1L119_adder_eqn);


--A1L122 is Add0~121
A1L122_adder_eqn = ( periodCount[1] ) + ( GND ) + ( A1L127 );
A1L122 = SUM(A1L122_adder_eqn);

--A1L123 is Add0~122
A1L123_adder_eqn = ( periodCount[1] ) + ( GND ) + ( A1L127 );
A1L123 = CARRY(A1L123_adder_eqn);


--A1L126 is Add0~125
A1L126_adder_eqn = ( periodCount[0] ) + ( VCC ) + ( !VCC );
A1L126 = SUM(A1L126_adder_eqn);

--A1L127 is Add0~126
A1L127_adder_eqn = ( periodCount[0] ) + ( VCC ) + ( !VCC );
A1L127 = CARRY(A1L127_adder_eqn);


--irq is irq
irq = OUTPUT(A1L285Q);


--out_wave_export is out_wave_export
out_wave_export = OUTPUT(A1L328Q);


--A1L285Q is irq~reg0
--register power-up is low

A1L285Q = DFFEAS(A1L284, CLOCK_50, reset,  ,  ,  ,  ,  ,  );


--A1L328Q is out_wave_export~reg0
--register power-up is low

A1L328Q = DFFEAS(A1L316, CLOCK_50, reset,  ,  ,  ,  ,  ,  );


--current_angle[16] is current_angle[16]
--register power-up is low

current_angle[16] = DFFEAS(A1L130, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_state.SWEEP_LEFT is current_state.SWEEP_LEFT
--register power-up is low

current_state.SWEEP_LEFT = DFFEAS(A1L364, CLOCK_50, reset,  ,  ,  ,  ,  ,  );


--current_angle[15] is current_angle[15]
--register power-up is low

current_angle[15] = DFFEAS(A1L254, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[14] is current_angle[14]
--register power-up is low

current_angle[14] = DFFEAS(A1L252, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[9] is current_angle[9]
--register power-up is low

current_angle[9] = DFFEAS(A1L246, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[8] is current_angle[8]
--register power-up is low

current_angle[8] = DFFEAS(A1L244, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[7] is current_angle[7]
--register power-up is low

current_angle[7] = DFFEAS(A1L150, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[6] is current_angle[6]
--register power-up is low

current_angle[6] = DFFEAS(A1L241, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[5] is current_angle[5]
--register power-up is low

current_angle[5] = DFFEAS(A1L158, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--A1L324 is LessThan2~0
A1L324 = ( current_angle[5] & ( (!current_angle[9] & (!current_angle[8] & ((!current_angle[6]) # (current_angle[7])))) ) ) # ( !current_angle[5] & ( (!current_angle[9] & (!current_angle[8] & current_angle[7])) ) );


--current_angle[10] is current_angle[10]
--register power-up is low

current_angle[10] = DFFEAS(A1L162, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[13] is current_angle[13]
--register power-up is low

current_angle[13] = DFFEAS(A1L166, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[12] is current_angle[12]
--register power-up is low

current_angle[12] = DFFEAS(A1L170, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[11] is current_angle[11]
--register power-up is low

current_angle[11] = DFFEAS(A1L174, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--A1L325 is LessThan2~1
A1L325 = (!current_angle[10] & (!current_angle[13] & (!current_angle[12] & !current_angle[11])));


--A1L326 is LessThan2~2
A1L326 = (!current_angle[15] & (!current_angle[14] & ((!A1L325) # (A1L324))));


--current_angle[26] is current_angle[26]
--register power-up is low

current_angle[26] = DFFEAS(A1L178, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[20] is current_angle[20]
--register power-up is low

current_angle[20] = DFFEAS(A1L182, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[19] is current_angle[19]
--register power-up is low

current_angle[19] = DFFEAS(A1L186, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[18] is current_angle[18]
--register power-up is low

current_angle[18] = DFFEAS(A1L190, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[17] is current_angle[17]
--register power-up is low

current_angle[17] = DFFEAS(A1L194, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--A1L317 is LessThan1~0
A1L317 = (!current_angle[19] & (!current_angle[18] & !current_angle[17]));


--current_angle[31] is current_angle[31]
--register power-up is low

current_angle[31] = DFFEAS(A1L198, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[30] is current_angle[30]
--register power-up is low

current_angle[30] = DFFEAS(A1L202, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[29] is current_angle[29]
--register power-up is low

current_angle[29] = DFFEAS(A1L206, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[28] is current_angle[28]
--register power-up is low

current_angle[28] = DFFEAS(A1L210, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[27] is current_angle[27]
--register power-up is low

current_angle[27] = DFFEAS(A1L214, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--A1L318 is LessThan1~1
A1L318 = ( !current_angle[27] & ( (!current_angle[31] & (!current_angle[30] & (!current_angle[29] & !current_angle[28]))) ) );


--current_angle[25] is current_angle[25]
--register power-up is low

current_angle[25] = DFFEAS(A1L218, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[24] is current_angle[24]
--register power-up is low

current_angle[24] = DFFEAS(A1L222, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[23] is current_angle[23]
--register power-up is low

current_angle[23] = DFFEAS(A1L226, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[22] is current_angle[22]
--register power-up is low

current_angle[22] = DFFEAS(A1L230, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--current_angle[21] is current_angle[21]
--register power-up is low

current_angle[21] = DFFEAS(A1L234, CLOCK_50, reset,  , A1L271,  ,  ,  ,  );


--A1L319 is LessThan1~2
A1L319 = ( !current_angle[21] & ( (!current_angle[25] & (!current_angle[24] & (!current_angle[23] & !current_angle[22]))) ) );


--A1L320 is LessThan1~3
A1L320 = ( A1L319 & ( (!current_angle[26] & (!current_angle[20] & (A1L317 & A1L318))) ) );


--current_state.INT_RIGHT is current_state.INT_RIGHT
--register power-up is low

current_state.INT_RIGHT = DFFEAS(A1L366, CLOCK_50, reset,  ,  ,  ,  ,  ,  );


--current_state.SWEEP_RIGHT is current_state.SWEEP_RIGHT
--register power-up is low

current_state.SWEEP_RIGHT = DFFEAS(A1L363, CLOCK_50, reset,  ,  ,  ,  ,  ,  );


--A1L284 is irq_process~1
A1L284 = ( current_state.INT_RIGHT & ( current_state.SWEEP_RIGHT ) ) # ( !current_state.INT_RIGHT & ( current_state.SWEEP_RIGHT & ( (current_state.SWEEP_LEFT & (((!A1L320) # (A1L326)) # (current_angle[16]))) ) ) ) # ( current_state.INT_RIGHT & ( !current_state.SWEEP_RIGHT ) ) # ( !current_state.INT_RIGHT & ( !current_state.SWEEP_RIGHT ) );


--CLOCK_50 is CLOCK_50
CLOCK_50 = INPUT();


--reset is reset
reset = INPUT();


--A1L286 is LessThan0~0
A1L286 = ( periodCount[17] & ( periodCount[16] & ( (current_angle[16] & (current_angle[17] & (!current_angle[18] $ (periodCount[18])))) ) ) ) # ( !periodCount[17] & ( periodCount[16] & ( (current_angle[16] & (!current_angle[17] & (!current_angle[18] $ (periodCount[18])))) ) ) ) # ( periodCount[17] & ( !periodCount[16] & ( (!current_angle[16] & (current_angle[17] & (!current_angle[18] $ (periodCount[18])))) ) ) ) # ( !periodCount[17] & ( !periodCount[16] & ( (!current_angle[16] & (!current_angle[17] & (!current_angle[18] $ (periodCount[18])))) ) ) );


--A1L287 is LessThan0~1
A1L287 = ( periodCount[14] & ( (!current_angle[14] & (A1L286 & (!current_angle[15] $ (!periodCount[15])))) ) ) # ( !periodCount[14] & ( (current_angle[14] & (A1L286 & (!current_angle[15] $ (!periodCount[15])))) ) );


--A1L288 is LessThan0~2
A1L288 = !current_angle[13] $ (!periodCount[13]);


--A1L289 is LessThan0~3
A1L289 = !current_angle[12] $ (!periodCount[12]);


--A1L290 is LessThan0~4
A1L290 = (!current_angle[5] & (!periodCount[5] & !periodCount[4])) # (current_angle[5] & ((!periodCount[5]) # (!periodCount[4])));


--A1L291 is LessThan0~5
A1L291 = ( A1L290 & ( (!current_angle[7] & (!periodCount[7] & ((!current_angle[6]) # (!periodCount[6])))) # (current_angle[7] & ((!current_angle[6]) # ((!periodCount[7]) # (!periodCount[6])))) ) ) # ( !A1L290 & ( (!current_angle[7] & (!current_angle[6] & (!periodCount[7] & !periodCount[6]))) # (current_angle[7] & ((!periodCount[7]) # ((!current_angle[6] & !periodCount[6])))) ) );


--A1L292 is LessThan0~6
A1L292 = (!current_angle[10] & (!periodCount[10] & (!current_angle[11] $ (periodCount[11])))) # (current_angle[10] & (periodCount[10] & (!current_angle[11] $ (periodCount[11]))));


--A1L293 is LessThan0~7
A1L293 = ( periodCount[8] & ( (!current_angle[8] & (A1L292 & (!current_angle[9] $ (!periodCount[9])))) ) ) # ( !periodCount[8] & ( (current_angle[8] & (A1L292 & (!current_angle[9] $ (!periodCount[9])))) ) );


--A1L294 is LessThan0~8
A1L294 = (!current_angle[11] & (current_angle[10] & (!periodCount[11] & !periodCount[10]))) # (current_angle[11] & ((!periodCount[11]) # ((current_angle[10] & !periodCount[10]))));


--A1L295 is LessThan0~9
A1L295 = ( periodCount[8] & ( !A1L294 & ( ((!A1L292) # (periodCount[9])) # (current_angle[9]) ) ) ) # ( !periodCount[8] & ( !A1L294 & ( (!A1L292) # ((!current_angle[9] & (current_angle[8] & periodCount[9])) # (current_angle[9] & ((periodCount[9]) # (current_angle[8])))) ) ) );


--A1L296 is LessThan0~10
A1L296 = ( A1L293 & ( A1L295 & ( (A1L287 & (!A1L288 & (!A1L289 & A1L291))) ) ) ) # ( A1L293 & ( !A1L295 & ( (A1L287 & (!A1L288 & !A1L289)) ) ) ) # ( !A1L293 & ( !A1L295 & ( (A1L287 & (!A1L288 & !A1L289)) ) ) );


--A1L297 is LessThan0~11
A1L297 = ( periodCount[17] & ( periodCount[16] & ( (current_angle[18] & !periodCount[18]) ) ) ) # ( !periodCount[17] & ( periodCount[16] & ( (!current_angle[18] & (current_angle[17] & !periodCount[18])) # (current_angle[18] & ((!periodCount[18]) # (current_angle[17]))) ) ) ) # ( periodCount[17] & ( !periodCount[16] & ( (!current_angle[18] & (current_angle[16] & (current_angle[17] & !periodCount[18]))) # (current_angle[18] & ((!periodCount[18]) # ((current_angle[16] & current_angle[17])))) ) ) ) # ( !periodCount[17] & ( !periodCount[16] & ( (!current_angle[18] & (!periodCount[18] & ((current_angle[17]) # (current_angle[16])))) # (current_angle[18] & (((!periodCount[18]) # (current_angle[17])) # (current_angle[16]))) ) ) );


--A1L298 is LessThan0~12
A1L298 = ( periodCount[14] & ( !A1L297 & ( ((!A1L286) # (periodCount[15])) # (current_angle[15]) ) ) ) # ( !periodCount[14] & ( !A1L297 & ( (!A1L286) # ((!current_angle[15] & (current_angle[14] & periodCount[15])) # (current_angle[15] & ((periodCount[15]) # (current_angle[14])))) ) ) );


--A1L299 is LessThan0~13
A1L299 = ( periodCount[12] & ( A1L298 & ( (!current_angle[13]) # ((!A1L287) # (periodCount[13])) ) ) ) # ( !periodCount[12] & ( A1L298 & ( (!A1L287) # ((!current_angle[13] & ((!current_angle[12]) # (periodCount[13]))) # (current_angle[13] & (!current_angle[12] & periodCount[13]))) ) ) );


--A1L300 is LessThan0~14
A1L300 = ( periodCount[24] & ( periodCount[23] & ( (current_angle[24] & (current_angle[23] & (!current_angle[25] $ (periodCount[25])))) ) ) ) # ( !periodCount[24] & ( periodCount[23] & ( (!current_angle[24] & (current_angle[23] & (!current_angle[25] $ (periodCount[25])))) ) ) ) # ( periodCount[24] & ( !periodCount[23] & ( (current_angle[24] & (!current_angle[23] & (!current_angle[25] $ (periodCount[25])))) ) ) ) # ( !periodCount[24] & ( !periodCount[23] & ( (!current_angle[24] & (!current_angle[23] & (!current_angle[25] $ (periodCount[25])))) ) ) );


--A1L301 is LessThan0~15
A1L301 = !current_angle[21] $ (!periodCount[21]);


--A1L302 is LessThan0~16
A1L302 = !current_angle[20] $ (!periodCount[20]);


--A1L303 is LessThan0~17
A1L303 = !current_angle[19] $ (!periodCount[19]);


--A1L304 is LessThan0~18
A1L304 = ( !A1L302 & ( !A1L303 & ( (A1L300 & (!A1L301 & (!current_angle[22] $ (periodCount[22])))) ) ) );


--A1L305 is LessThan0~19
A1L305 = (A1L300 & (!A1L301 & (!current_angle[22] $ (periodCount[22]))));


--A1L306 is LessThan0~20
A1L306 = ( periodCount[24] & ( periodCount[23] & ( (current_angle[25] & !periodCount[25]) ) ) ) # ( !periodCount[24] & ( periodCount[23] & ( (!current_angle[25] & (current_angle[24] & !periodCount[25])) # (current_angle[25] & ((!periodCount[25]) # (current_angle[24]))) ) ) ) # ( periodCount[24] & ( !periodCount[23] & ( (!current_angle[25] & (current_angle[24] & (current_angle[23] & !periodCount[25]))) # (current_angle[25] & ((!periodCount[25]) # ((current_angle[24] & current_angle[23])))) ) ) ) # ( !periodCount[24] & ( !periodCount[23] & ( (!current_angle[25] & (!periodCount[25] & ((current_angle[23]) # (current_angle[24])))) # (current_angle[25] & (((!periodCount[25]) # (current_angle[23])) # (current_angle[24]))) ) ) );


--A1L307 is LessThan0~21
A1L307 = ( periodCount[21] & ( !A1L306 & ( (!current_angle[22]) # ((!A1L300) # (periodCount[22])) ) ) ) # ( !periodCount[21] & ( !A1L306 & ( (!A1L300) # ((!current_angle[22] & ((!current_angle[21]) # (periodCount[22]))) # (current_angle[22] & (!current_angle[21] & periodCount[22]))) ) ) );


--A1L308 is LessThan0~22
A1L308 = ( periodCount[19] & ( A1L307 & ( (!current_angle[20]) # ((!A1L305) # (periodCount[20])) ) ) ) # ( !periodCount[19] & ( A1L307 & ( (!A1L305) # ((!current_angle[20] & ((!current_angle[19]) # (periodCount[20]))) # (current_angle[20] & (!current_angle[19] & periodCount[20]))) ) ) );


--A1L309 is LessThan0~23
A1L309 = ( periodCount[30] & ( periodCount[29] & ( (current_angle[30] & (current_angle[29] & (!current_angle[31] $ (periodCount[31])))) ) ) ) # ( !periodCount[30] & ( periodCount[29] & ( (!current_angle[30] & (current_angle[29] & (!current_angle[31] $ (periodCount[31])))) ) ) ) # ( periodCount[30] & ( !periodCount[29] & ( (current_angle[30] & (!current_angle[29] & (!current_angle[31] $ (periodCount[31])))) ) ) ) # ( !periodCount[30] & ( !periodCount[29] & ( (!current_angle[30] & (!current_angle[29] & (!current_angle[31] $ (periodCount[31])))) ) ) );


--A1L310 is LessThan0~24
A1L310 = !current_angle[26] $ (!periodCount[26]);


--A1L311 is LessThan0~25
A1L311 = ( periodCount[27] & ( !A1L310 & ( (current_angle[27] & (A1L309 & (!current_angle[28] $ (periodCount[28])))) ) ) ) # ( !periodCount[27] & ( !A1L310 & ( (!current_angle[27] & (A1L309 & (!current_angle[28] $ (periodCount[28])))) ) ) );


--A1L312 is LessThan0~26
A1L312 = (A1L309 & (!current_angle[28] $ (periodCount[28])));


--A1L313 is LessThan0~27
A1L313 = ( periodCount[30] & ( periodCount[29] & ( (current_angle[31] & !periodCount[31]) ) ) ) # ( !periodCount[30] & ( periodCount[29] & ( (!current_angle[31] & (current_angle[30] & !periodCount[31])) # (current_angle[31] & ((!periodCount[31]) # (current_angle[30]))) ) ) ) # ( periodCount[30] & ( !periodCount[29] & ( (!current_angle[31] & (current_angle[30] & (current_angle[29] & !periodCount[31]))) # (current_angle[31] & ((!periodCount[31]) # ((current_angle[30] & current_angle[29])))) ) ) ) # ( !periodCount[30] & ( !periodCount[29] & ( (!current_angle[31] & (!periodCount[31] & ((current_angle[29]) # (current_angle[30])))) # (current_angle[31] & (((!periodCount[31]) # (current_angle[29])) # (current_angle[30]))) ) ) );


--A1L314 is LessThan0~28
A1L314 = (!A1L313 & ((!current_angle[28]) # ((!A1L309) # (periodCount[28]))));


--A1L315 is LessThan0~29
A1L315 = ( periodCount[26] & ( A1L314 & ( (!current_angle[27]) # ((!A1L312) # (periodCount[27])) ) ) ) # ( !periodCount[26] & ( A1L314 & ( (!A1L312) # ((!current_angle[27] & ((!current_angle[26]) # (periodCount[27]))) # (current_angle[27] & (!current_angle[26] & periodCount[27]))) ) ) );


--A1L316 is LessThan0~30
A1L316 = ( A1L311 & ( A1L315 & ( (!A1L308) # ((A1L304 & ((!A1L299) # (A1L296)))) ) ) ) # ( A1L311 & ( !A1L315 ) ) # ( !A1L311 & ( !A1L315 ) );


--A1L276 is Equal0~0
A1L276 = (!periodCount[29] & !periodCount[28]);


--A1L277 is Equal0~1
A1L277 = ( !periodCount[23] & ( !periodCount[22] & ( (!periodCount[27] & (!periodCount[26] & (!periodCount[25] & !periodCount[24]))) ) ) );


--A1L278 is Equal0~2
A1L278 = ( periodCount[17] & ( periodCount[16] & ( (!periodCount[21] & (!periodCount[20] & (periodCount[19] & periodCount[18]))) ) ) );


--A1L279 is Equal0~3
A1L279 = ( !periodCount[11] & ( !periodCount[10] & ( (!periodCount[15] & (periodCount[14] & (!periodCount[13] & !periodCount[12]))) ) ) );


--A1L280 is Equal0~4
A1L280 = ( !periodCount[2] & ( !periodCount[1] & ( (!periodCount[31] & (!periodCount[30] & (!periodCount[4] & !periodCount[3]))) ) ) );


--A1L281 is Equal0~5
A1L281 = ( !periodCount[5] & ( !periodCount[0] & ( (periodCount[9] & (!periodCount[8] & (!periodCount[7] & periodCount[6]))) ) ) );


--A1L282 is Equal0~6
A1L282 = ( A1L280 & ( A1L281 & ( (A1L276 & (A1L277 & (A1L278 & A1L279))) ) ) );


--A1L271 is current_angle[31]~1
A1L271 = (A1L282 & ((!current_state.SWEEP_RIGHT) # (current_state.SWEEP_LEFT)));


--A1L364 is Selector1~0
A1L364 = ( current_state.INT_RIGHT ) # ( !current_state.INT_RIGHT & ( (current_state.SWEEP_LEFT & (((!A1L320) # (A1L326)) # (current_angle[16]))) ) );


--A1L321 is LessThan1~4
A1L321 = (current_angle[8] & ((!current_angle[7]) # ((current_angle[6] & !current_angle[5]))));


--A1L322 is LessThan1~5
A1L322 = (current_angle[14] & (!current_angle[13] & (!current_angle[12] & !current_angle[11])));


--A1L323 is LessThan1~6
A1L323 = (A1L322 & ((!current_angle[10]) # ((A1L321) # (current_angle[9]))));


--A1L366 is state.INT_RIGHT~0
A1L366 = ( A1L323 & ( (!A1L320 & !current_state.SWEEP_RIGHT) ) ) # ( !A1L323 & ( (!current_state.SWEEP_RIGHT & ((!A1L320) # ((current_angle[16] & !current_angle[15])))) ) );


--current_state.INT_LEFT is current_state.INT_LEFT
--register power-up is low

current_state.INT_LEFT = DFFEAS(A1L365, CLOCK_50, reset,  ,  ,  ,  ,  ,  );


--A1L363 is Selector0~0
A1L363 = ( A1L323 & ( !current_state.INT_LEFT & ( (!A1L320) # (current_state.SWEEP_RIGHT) ) ) ) # ( !A1L323 & ( !current_state.INT_LEFT & ( (!A1L320) # (((current_angle[16] & !current_angle[15])) # (current_state.SWEEP_RIGHT)) ) ) );


--A1L365 is state.INT_LEFT~0
A1L365 = (!current_angle[16] & (current_state.SWEEP_LEFT & (!A1L326 & A1L320)));


--A1L254 is current_angle[15]~2
A1L254 = !A1L134;


--A1L252 is current_angle[14]~3
A1L252 = !A1L138;


--A1L246 is current_angle[9]~4
A1L246 = !A1L142;


--A1L244 is current_angle[8]~5
A1L244 = !A1L146;


--A1L241 is current_angle[6]~6
A1L241 = !A1L154;


