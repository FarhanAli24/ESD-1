-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.
--V1_tdo_crc_val_shift_reg[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[0]
--register power-up is low

V1_tdo_crc_val_shift_reg[0] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[0], V1_tdo_crc_val_shift_reg[1], !V1L442, V1L515);


--BB6_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[0]
--register power-up is low

BB6_dffs[0] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[1], CB1_is_buffer_wrapped_once_sig, !V1_reset_all, V1_sdr);


--V1_tdo_crc_len_reg[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[0]
--register power-up is low

V1_tdo_crc_len_reg[0] = AMPP_FUNCTION(C1_raw_tck, V1L302, V1_tdo_crc_len_reg[1], V1L468, V1L469, V1L506);


--BB7_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[0]
--register power-up is low

BB7_dffs[0] = AMPP_FUNCTION(C1_raw_tck, X1_xq[0], BB7_dffs[1], !V1_reset_all, !W1_status_ram_shift_load);


--Z1_lfsr[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[0]
--register power-up is low

Z1_lfsr[0] = AMPP_FUNCTION(C1_raw_tck, Z1L16, V1_tdo_crc_val_calc_reset, !Z1L9);


--V1_tdo_crc_val_shift_reg[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[1]
--register power-up is low

V1_tdo_crc_val_shift_reg[1] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[1], V1_tdo_crc_val_shift_reg[2], !V1L442, V1L515);


--BB6_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[1]
--register power-up is low

BB6_dffs[1] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[2], CB1_last_buffer_write_address_sig[0], !V1_reset_all, V1_sdr);


--V1L302 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~1
V1L302 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[0]);

--V1L303 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~2
V1L303 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[0]);


--V1_tdo_crc_len_reg[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[1]
--register power-up is low

V1_tdo_crc_len_reg[1] = AMPP_FUNCTION(C1_raw_tck, V1L306, V1_tdo_crc_len_reg[2], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[28] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[28]
--register power-up is low

V1_tdo_crc_len_reg[28] = AMPP_FUNCTION(C1_raw_tck, V1L310, V1_tdo_crc_len_reg[29], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[27] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[27]
--register power-up is low

V1_tdo_crc_len_reg[27] = AMPP_FUNCTION(C1_raw_tck, V1L314, V1_tdo_crc_len_reg[28], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[8]
--register power-up is low

V1_tdo_crc_len_reg[8] = AMPP_FUNCTION(C1_raw_tck, V1L318, V1_tdo_crc_len_reg[9], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[23] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[23]
--register power-up is low

V1_tdo_crc_len_reg[23] = AMPP_FUNCTION(C1_raw_tck, V1L322, V1_tdo_crc_len_reg[24], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[31] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[31]
--register power-up is low

V1_tdo_crc_len_reg[31] = AMPP_FUNCTION(C1_raw_tck, V1L326, C1_tdi, V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[30] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[30]
--register power-up is low

V1_tdo_crc_len_reg[30] = AMPP_FUNCTION(C1_raw_tck, V1L330, V1_tdo_crc_len_reg[31], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[29] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[29]
--register power-up is low

V1_tdo_crc_len_reg[29] = AMPP_FUNCTION(C1_raw_tck, V1L334, V1_tdo_crc_len_reg[30], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[6]
--register power-up is low

V1_tdo_crc_len_reg[6] = AMPP_FUNCTION(C1_raw_tck, V1L338, V1_tdo_crc_len_reg[7], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[5]
--register power-up is low

V1_tdo_crc_len_reg[5] = AMPP_FUNCTION(C1_raw_tck, V1L342, V1_tdo_crc_len_reg[6], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[4]
--register power-up is low

V1_tdo_crc_len_reg[4] = AMPP_FUNCTION(C1_raw_tck, V1L346, V1_tdo_crc_len_reg[5], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[3]
--register power-up is low

V1_tdo_crc_len_reg[3] = AMPP_FUNCTION(C1_raw_tck, V1L350, V1_tdo_crc_len_reg[4], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[2]
--register power-up is low

V1_tdo_crc_len_reg[2] = AMPP_FUNCTION(C1_raw_tck, V1L354, V1_tdo_crc_len_reg[3], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[13]
--register power-up is low

V1_tdo_crc_len_reg[13] = AMPP_FUNCTION(C1_raw_tck, V1L358, V1_tdo_crc_len_reg[14], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[12]
--register power-up is low

V1_tdo_crc_len_reg[12] = AMPP_FUNCTION(C1_raw_tck, V1L362, V1_tdo_crc_len_reg[13], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[11]
--register power-up is low

V1_tdo_crc_len_reg[11] = AMPP_FUNCTION(C1_raw_tck, V1L366, V1_tdo_crc_len_reg[12], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[10]
--register power-up is low

V1_tdo_crc_len_reg[10] = AMPP_FUNCTION(C1_raw_tck, V1L370, V1_tdo_crc_len_reg[11], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[9]
--register power-up is low

V1_tdo_crc_len_reg[9] = AMPP_FUNCTION(C1_raw_tck, V1L374, V1_tdo_crc_len_reg[10], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[7]
--register power-up is low

V1_tdo_crc_len_reg[7] = AMPP_FUNCTION(C1_raw_tck, V1L378, V1_tdo_crc_len_reg[8], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[26] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[26]
--register power-up is low

V1_tdo_crc_len_reg[26] = AMPP_FUNCTION(C1_raw_tck, V1L382, V1_tdo_crc_len_reg[27], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[25] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[25]
--register power-up is low

V1_tdo_crc_len_reg[25] = AMPP_FUNCTION(C1_raw_tck, V1L386, V1_tdo_crc_len_reg[26], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[24] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[24]
--register power-up is low

V1_tdo_crc_len_reg[24] = AMPP_FUNCTION(C1_raw_tck, V1L390, V1_tdo_crc_len_reg[25], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[22] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[22]
--register power-up is low

V1_tdo_crc_len_reg[22] = AMPP_FUNCTION(C1_raw_tck, V1L394, V1_tdo_crc_len_reg[23], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[21] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[21]
--register power-up is low

V1_tdo_crc_len_reg[21] = AMPP_FUNCTION(C1_raw_tck, V1L398, V1_tdo_crc_len_reg[22], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[20]
--register power-up is low

V1_tdo_crc_len_reg[20] = AMPP_FUNCTION(C1_raw_tck, V1L402, V1_tdo_crc_len_reg[21], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[19]
--register power-up is low

V1_tdo_crc_len_reg[19] = AMPP_FUNCTION(C1_raw_tck, V1L406, V1_tdo_crc_len_reg[20], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[18]
--register power-up is low

V1_tdo_crc_len_reg[18] = AMPP_FUNCTION(C1_raw_tck, V1L410, V1_tdo_crc_len_reg[19], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[17]
--register power-up is low

V1_tdo_crc_len_reg[17] = AMPP_FUNCTION(C1_raw_tck, V1L414, V1_tdo_crc_len_reg[18], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[16]
--register power-up is low

V1_tdo_crc_len_reg[16] = AMPP_FUNCTION(C1_raw_tck, V1L418, V1_tdo_crc_len_reg[17], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[15]
--register power-up is low

V1_tdo_crc_len_reg[15] = AMPP_FUNCTION(C1_raw_tck, V1L422, V1_tdo_crc_len_reg[16], V1L468, V1L469, V1L506);


--V1_tdo_crc_len_reg[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[14]
--register power-up is low

V1_tdo_crc_len_reg[14] = AMPP_FUNCTION(C1_raw_tck, V1L426, V1_tdo_crc_len_reg[15], V1L468, V1L469, V1L506);


--X1_xq[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[0]
--register power-up is low

X1_xq[0] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][0], X1_cells[0][0], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[1]
--register power-up is low

BB7_dffs[1] = AMPP_FUNCTION(C1_raw_tck, X1_xq[1], BB7_dffs[2], !V1_reset_all, !W1_status_ram_shift_load);


--HB1_counter_reg_bit[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_reg_bit[4]
--register power-up is low

HB1_counter_reg_bit[4] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita4, C1L394, !W1_status_offload_shift_ena, HB1_cout_actual);


--HB1_counter_reg_bit[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_reg_bit[3]
--register power-up is low

HB1_counter_reg_bit[3] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita3, C1L394, !W1_status_offload_shift_ena, HB1_cout_actual);


--HB1_counter_reg_bit[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_reg_bit[2]
--register power-up is low

HB1_counter_reg_bit[2] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita2, C1L394, !W1_status_offload_shift_ena, HB1_cout_actual);


--HB1_counter_reg_bit[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_reg_bit[1]
--register power-up is low

HB1_counter_reg_bit[1] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita1, C1L394, !W1_status_offload_shift_ena, HB1_cout_actual);


--HB1_counter_reg_bit[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_reg_bit[0]
--register power-up is low

HB1_counter_reg_bit[0] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita0, C1L394, !W1_status_offload_shift_ena, HB1_cout_actual);


--Z1_lfsr[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[1]
--register power-up is low

Z1_lfsr[1] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[2], V1_tdo_crc_val_calc_reset, !Z1L9);


--V1_tdo_crc_val_shift_reg[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[2]
--register power-up is low

V1_tdo_crc_val_shift_reg[2] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[2], V1_tdo_crc_val_shift_reg[3], !V1L442, V1L515);


--CB1_counter[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[6]
--register power-up is low

CB1_counter[6] = AMPP_FUNCTION(C1_acq_clk, CB1L135, !V1_reset_all, CB1L134, V1_collect_data);


--CB1_counter[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[7]
--register power-up is low

CB1_counter[7] = AMPP_FUNCTION(C1_acq_clk, CB1L136, !V1_reset_all, CB1L134, V1_collect_data);


--CB1_counter[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[8]
--register power-up is low

CB1_counter[8] = AMPP_FUNCTION(C1_acq_clk, CB1L137, !V1_reset_all, CB1L134, V1_collect_data);


--CB1_counter[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[0]
--register power-up is low

CB1_counter[0] = AMPP_FUNCTION(C1_acq_clk, CB1L138, !V1_reset_all, CB1L134, V1_collect_data);


--CB1_counter[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[1]
--register power-up is low

CB1_counter[1] = AMPP_FUNCTION(C1_acq_clk, CB1L139, !V1_reset_all, CB1L134, V1_collect_data);


--CB1_counter[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[2]
--register power-up is low

CB1_counter[2] = AMPP_FUNCTION(C1_acq_clk, CB1L140, !V1_reset_all, CB1L134, V1_collect_data);


--CB1_counter[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[3]
--register power-up is low

CB1_counter[3] = AMPP_FUNCTION(C1_acq_clk, CB1L141, !V1_reset_all, CB1L134, V1_collect_data);


--CB1_counter[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[4]
--register power-up is low

CB1_counter[4] = AMPP_FUNCTION(C1_acq_clk, CB1L142, !V1_reset_all, CB1L134, V1_collect_data);


--CB1_counter[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[5]
--register power-up is low

CB1_counter[5] = AMPP_FUNCTION(C1_acq_clk, CB1L143, !V1_reset_all, CB1L134, V1_collect_data);


--BB6_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[2]
--register power-up is low

BB6_dffs[2] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[3], CB1_last_buffer_write_address_sig[1], !V1_reset_all, V1_sdr);


--CB1_last_buffer_write_address_sig[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[0]
--register power-up is low

CB1_last_buffer_write_address_sig[0] = AMPP_FUNCTION(C1_acq_clk, CB1L79, CB1L190, CB1L162);


--V1L306 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~5
V1L306 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[1], V1L303);

--V1L307 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~6
V1L307 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[1], V1L303);


--V1L310 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~9
V1L310 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[28], V1L315);

--V1L311 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~10
V1L311 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[28], V1L315);


--V1L314 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~13
V1L314 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[27], V1L383);

--V1L315 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~14
V1L315 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[27], V1L383);


--V1L318 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~17
V1L318 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[8], V1L379);

--V1L319 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~18
V1L319 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[8], V1L379);


--V1L322 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~21
V1L322 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[23], V1L395);

--V1L323 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~22
V1L323 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[23], V1L395);


--V1L326 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~25
V1L326 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[31], V1L331);


--V1L330 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~29
V1L330 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[30], V1L335);

--V1L331 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~30
V1L331 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[30], V1L335);


--V1L334 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~33
V1L334 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[29], V1L311);

--V1L335 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~34
V1L335 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[29], V1L311);


--V1L338 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~37
V1L338 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[6], V1L343);

--V1L339 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~38
V1L339 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[6], V1L343);


--V1L342 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~41
V1L342 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[5], V1L347);

--V1L343 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~42
V1L343 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[5], V1L347);


--V1L346 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~45
V1L346 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[4], V1L351);

--V1L347 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~46
V1L347 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[4], V1L351);


--V1L350 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~49
V1L350 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[3], V1L355);

--V1L351 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~50
V1L351 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[3], V1L355);


--V1L354 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~53
V1L354 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[2], V1L307);

--V1L355 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~54
V1L355 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[2], V1L307);


--V1L358 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~57
V1L358 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[13], V1L363);

--V1L359 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~58
V1L359 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[13], V1L363);


--V1L362 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~61
V1L362 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[12], V1L367);

--V1L363 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~62
V1L363 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[12], V1L367);


--V1L366 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~65
V1L366 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[11], V1L371);

--V1L367 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~66
V1L367 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[11], V1L371);


--V1L370 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~69
V1L370 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[10], V1L375);

--V1L371 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~70
V1L371 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[10], V1L375);


--V1L374 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~73
V1L374 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[9], V1L319);

--V1L375 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~74
V1L375 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[9], V1L319);


--V1L378 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~77
V1L378 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[7], V1L339);

--V1L379 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~78
V1L379 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[7], V1L339);


--V1L382 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~81
V1L382 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[26], V1L387);

--V1L383 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~82
V1L383 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[26], V1L387);


--V1L386 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~85
V1L386 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[25], V1L391);

--V1L387 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~86
V1L387 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[25], V1L391);


--V1L390 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~89
V1L390 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[24], V1L323);

--V1L391 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~90
V1L391 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[24], V1L323);


--V1L394 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~93
V1L394 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[22], V1L399);

--V1L395 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~94
V1L395 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[22], V1L399);


--V1L398 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~97
V1L398 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[21], V1L403);

--V1L399 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~98
V1L399 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[21], V1L403);


--V1L402 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~101
V1L402 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[20], V1L407);

--V1L403 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~102
V1L403 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[20], V1L407);


--V1L406 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~105
V1L406 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[19], V1L411);

--V1L407 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~106
V1L407 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[19], V1L411);


--V1L410 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~109
V1L410 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[18], V1L415);

--V1L411 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~110
V1L411 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[18], V1L415);


--V1L414 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~113
V1L414 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[17], V1L419);

--V1L415 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~114
V1L415 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[17], V1L419);


--V1L418 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~117
V1L418 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[16], V1L423);

--V1L419 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~118
V1L419 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[16], V1L423);


--V1L422 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~121
V1L422 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[15], V1L427);

--V1L423 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~122
V1L423 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[15], V1L427);


--V1L426 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~125
V1L426 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[14], V1L359);

--V1L427 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~126
V1L427 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[14], V1L359);


--X1_xq[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[1]
--register power-up is low

X1_xq[1] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][1], X1_cells[0][1], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[2]
--register power-up is low

BB7_dffs[2] = AMPP_FUNCTION(C1_raw_tck, X1_xq[2], BB7_dffs[3], !V1_reset_all, !W1_status_ram_shift_load);


--HB1_counter_comb_bita4 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_comb_bita4
HB1_counter_comb_bita4 = AMPP_FUNCTION(!HB1_counter_reg_bit[4], HB1L15);

--HB1L23 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_comb_bita4~COUT
HB1L23 = AMPP_FUNCTION(!HB1_counter_reg_bit[4], HB1L15);


--HB1L19 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_comb_bita4~1
HB1L19 = AMPP_FUNCTION(HB1L23);


--HB1_counter_comb_bita3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_comb_bita3
HB1_counter_comb_bita3 = AMPP_FUNCTION(!HB1_counter_reg_bit[3], HB1L11);

--HB1L15 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_comb_bita3~COUT
HB1L15 = AMPP_FUNCTION(!HB1_counter_reg_bit[3], HB1L11);


--HB1_counter_comb_bita2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_comb_bita2
HB1_counter_comb_bita2 = AMPP_FUNCTION(!HB1_counter_reg_bit[2], HB1L7);

--HB1L11 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_comb_bita2~COUT
HB1L11 = AMPP_FUNCTION(!HB1_counter_reg_bit[2], HB1L7);


--HB1_counter_comb_bita1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_comb_bita1
HB1_counter_comb_bita1 = AMPP_FUNCTION(!HB1_counter_reg_bit[1], HB1L3);

--HB1L7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_comb_bita1~COUT
HB1L7 = AMPP_FUNCTION(!HB1_counter_reg_bit[1], HB1L3);


--HB1_counter_comb_bita0 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_comb_bita0
HB1_counter_comb_bita0 = AMPP_FUNCTION(!HB1_counter_reg_bit[0]);

--HB1L3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|counter_comb_bita0~COUT
HB1L3 = AMPP_FUNCTION(!HB1_counter_reg_bit[0]);


--CB1L55 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~1
CB1L55 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[2], CB1L84);

--CB1L56 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~2
CB1L56 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[2], CB1L84);


--CB1L59 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~5
CB1L59 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[3], CB1L56);

--CB1L60 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~6
CB1L60 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[3], CB1L56);


--CB1L63 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~9
CB1L63 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[4], CB1L60);

--CB1L64 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~10
CB1L64 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[4], CB1L60);


--CB1L67 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~13
CB1L67 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[5], CB1L64);

--CB1L68 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~14
CB1L68 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[5], CB1L64);


--CB1L71 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~17
CB1L71 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[6], CB1L68);

--CB1L72 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~18
CB1L72 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[6], CB1L68);


--CB1L75 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~21
CB1L75 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[7], CB1L72);


--CB1L79 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~25
CB1L79 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[0]);

--CB1L80 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~26
CB1L80 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[0]);


--CB1L83 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~29
CB1L83 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[1], CB1L80);

--CB1L84 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~30
CB1L84 = AMPP_FUNCTION(!CB1_\buffer_manager:next_address[1], CB1L80);


--Z1_lfsr[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[2]
--register power-up is low

Z1_lfsr[2] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[3], V1_tdo_crc_val_calc_reset, !Z1L9);


--V1_tdo_crc_val_shift_reg[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[3]
--register power-up is low

V1_tdo_crc_val_shift_reg[3] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[3], V1_tdo_crc_val_shift_reg[4], !V1L442, V1L515);


--CB1L23 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~1
CB1L23 = AMPP_FUNCTION(!BB4_dffs[6], CB1L52);

--CB1L24 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~2
CB1L24 = AMPP_FUNCTION(!BB4_dffs[6], CB1L52);


--CB1L87 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~1
CB1L87 = AMPP_FUNCTION(!CB1_counter[6], CB1L120);

--CB1L88 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~2
CB1L88 = AMPP_FUNCTION(!CB1_counter[6], CB1L120);


--CB1L27 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~5
CB1L27 = AMPP_FUNCTION(!BB4_dffs[7], CB1L24);

--CB1L28 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~6
CB1L28 = AMPP_FUNCTION(!BB4_dffs[7], CB1L24);


--CB1L91 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~5
CB1L91 = AMPP_FUNCTION(!CB1_counter[7], CB1L88);

--CB1L92 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~6
CB1L92 = AMPP_FUNCTION(!CB1_counter[7], CB1L88);


--CB1L31 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~9
CB1L31 = AMPP_FUNCTION(CB1L28);


--CB1L95 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~9
CB1L95 = AMPP_FUNCTION(!CB1_counter[8], CB1L92);


--CB1L99 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~13
CB1L99 = AMPP_FUNCTION(!CB1_counter[0]);

--CB1L100 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~14
CB1L100 = AMPP_FUNCTION(!CB1_counter[0]);


--CB1L35 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~13
CB1L35 = AMPP_FUNCTION(!BB4_dffs[0], !BB4_dffs[1]);

--CB1L36 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~14
CB1L36 = AMPP_FUNCTION(!BB4_dffs[0], !BB4_dffs[1]);


--CB1L103 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~17
CB1L103 = AMPP_FUNCTION(!CB1_counter[1], CB1L100);

--CB1L104 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~18
CB1L104 = AMPP_FUNCTION(!CB1_counter[1], CB1L100);


--CB1L39 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~17
CB1L39 = AMPP_FUNCTION(!BB4_dffs[2], CB1L36);

--CB1L40 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~18
CB1L40 = AMPP_FUNCTION(!BB4_dffs[2], CB1L36);


--CB1L107 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~21
CB1L107 = AMPP_FUNCTION(!CB1_counter[2], CB1L104);

--CB1L108 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~22
CB1L108 = AMPP_FUNCTION(!CB1_counter[2], CB1L104);


--CB1L43 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~21
CB1L43 = AMPP_FUNCTION(!BB4_dffs[3], CB1L40);

--CB1L44 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~22
CB1L44 = AMPP_FUNCTION(!BB4_dffs[3], CB1L40);


--CB1L111 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~25
CB1L111 = AMPP_FUNCTION(!CB1_counter[3], CB1L108);

--CB1L112 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~26
CB1L112 = AMPP_FUNCTION(!CB1_counter[3], CB1L108);


--CB1L47 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~25
CB1L47 = AMPP_FUNCTION(!BB4_dffs[4], CB1L44);

--CB1L48 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~26
CB1L48 = AMPP_FUNCTION(!BB4_dffs[4], CB1L44);


--CB1L115 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~29
CB1L115 = AMPP_FUNCTION(!CB1_counter[4], CB1L112);

--CB1L116 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~30
CB1L116 = AMPP_FUNCTION(!CB1_counter[4], CB1L112);


--CB1L51 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~29
CB1L51 = AMPP_FUNCTION(!BB4_dffs[5], CB1L48);

--CB1L52 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~30
CB1L52 = AMPP_FUNCTION(!BB4_dffs[5], CB1L48);


--CB1L119 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~33
CB1L119 = AMPP_FUNCTION(!CB1_counter[5], CB1L116);

--CB1L120 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~34
CB1L120 = AMPP_FUNCTION(!CB1_counter[5], CB1L116);


--BB6_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[3]
--register power-up is low

BB6_dffs[3] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[4], CB1_last_buffer_write_address_sig[2], !V1_reset_all, V1_sdr);


--CB1_last_buffer_write_address_sig[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[1]
--register power-up is low

CB1_last_buffer_write_address_sig[1] = AMPP_FUNCTION(C1_acq_clk, CB1L83, CB1L190, CB1L162);


--KB1_counter_reg_bit[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_read_pointer_counter|cntr_kri:auto_generated|counter_reg_bit[0]
--register power-up is low

KB1_counter_reg_bit[0] = AMPP_FUNCTION(C1_raw_tck, KB1_counter_comb_bita0, C1L394, W1_status_buf_read_reset, KB1_cout_actual, W1L3);


--X1_xq[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[2]
--register power-up is low

X1_xq[2] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][2], X1_cells[0][2], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[3]
--register power-up is low

BB7_dffs[3] = AMPP_FUNCTION(C1_raw_tck, X1_xq[3], BB7_dffs[4], !V1_reset_all, !W1_status_ram_shift_load);


--CB1_\buffer_manager:next_address[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[2]
--register power-up is low

CB1_\buffer_manager:next_address[2] = AMPP_FUNCTION(C1_acq_clk, CB1L55, !V1_reset_all, CB1L190, V1_collect_data);


--CB1_\buffer_manager:next_address[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[3]
--register power-up is low

CB1_\buffer_manager:next_address[3] = AMPP_FUNCTION(C1_acq_clk, CB1L59, !V1_reset_all, CB1L190, V1_collect_data);


--CB1_\buffer_manager:next_address[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[4]
--register power-up is low

CB1_\buffer_manager:next_address[4] = AMPP_FUNCTION(C1_acq_clk, CB1L63, !V1_reset_all, CB1L190, V1_collect_data);


--CB1_\buffer_manager:next_address[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[5]
--register power-up is low

CB1_\buffer_manager:next_address[5] = AMPP_FUNCTION(C1_acq_clk, CB1L67, !V1_reset_all, CB1L190, V1_collect_data);


--CB1_\buffer_manager:next_address[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[6]
--register power-up is low

CB1_\buffer_manager:next_address[6] = AMPP_FUNCTION(C1_acq_clk, CB1L71, !V1_reset_all, CB1L190, V1_collect_data);


--CB1_\buffer_manager:next_address[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[7]
--register power-up is low

CB1_\buffer_manager:next_address[7] = AMPP_FUNCTION(C1_acq_clk, CB1L75, !V1_reset_all, CB1L190, V1_collect_data);


--CB1_\buffer_manager:next_address[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[0]
--register power-up is low

CB1_\buffer_manager:next_address[0] = AMPP_FUNCTION(C1_acq_clk, CB1L79, !V1_reset_all, CB1L190, V1_collect_data);


--CB1_\buffer_manager:next_address[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[1]
--register power-up is low

CB1_\buffer_manager:next_address[1] = AMPP_FUNCTION(C1_acq_clk, CB1L83, !V1_reset_all, CB1L190, V1_collect_data);


--Z1_lfsr[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[3]
--register power-up is low

Z1_lfsr[3] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[4], V1_tdo_crc_val_calc_reset, !Z1L9);


--V1_tdo_crc_val_shift_reg[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[4]
--register power-up is low

V1_tdo_crc_val_shift_reg[4] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[4], V1_tdo_crc_val_shift_reg[5], !V1L442, V1L515);


--BB6_dffs[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[4]
--register power-up is low

BB6_dffs[4] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[5], CB1_last_buffer_write_address_sig[3], !V1_reset_all, V1_sdr);


--CB1_last_buffer_write_address_sig[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[2]
--register power-up is low

CB1_last_buffer_write_address_sig[2] = AMPP_FUNCTION(C1_acq_clk, CB1L55, CB1L190, CB1L162);


--KB1_counter_comb_bita0 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_read_pointer_counter|cntr_kri:auto_generated|counter_comb_bita0
KB1_counter_comb_bita0 = AMPP_FUNCTION(!KB1_counter_reg_bit[0]);

--KB1L7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_read_pointer_counter|cntr_kri:auto_generated|counter_comb_bita0~COUT
KB1L7 = AMPP_FUNCTION(!KB1_counter_reg_bit[0]);


--KB1L3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_read_pointer_counter|cntr_kri:auto_generated|counter_comb_bita0~1
KB1L3 = AMPP_FUNCTION(KB1L7);


--X1_xq[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[3]
--register power-up is low

X1_xq[3] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][3], X1_cells[0][3], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[4]
--register power-up is low

BB7_dffs[4] = AMPP_FUNCTION(C1_raw_tck, X1_xq[4], BB7_dffs[5], !V1_reset_all, !W1_status_ram_shift_load);


--Z1_lfsr[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[4]
--register power-up is low

Z1_lfsr[4] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[5], V1_tdo_crc_val_calc_reset, !Z1L9);


--V1_tdo_crc_val_shift_reg[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[5]
--register power-up is low

V1_tdo_crc_val_shift_reg[5] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[5], V1_tdo_crc_val_shift_reg[6], !V1L442, V1L515);


--BB6_dffs[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[5]
--register power-up is low

BB6_dffs[5] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[6], CB1_last_buffer_write_address_sig[4], !V1_reset_all, V1_sdr);


--CB1_last_buffer_write_address_sig[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[3]
--register power-up is low

CB1_last_buffer_write_address_sig[3] = AMPP_FUNCTION(C1_acq_clk, CB1L59, CB1L190, CB1L162);


--CB1_\buffer_manager:last_trigger_address_var[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[0]
--register power-up is low

CB1_\buffer_manager:last_trigger_address_var[0] = AMPP_FUNCTION(C1_acq_clk, CB1L79, !V1_reset_all, CB1L190, CB1L153);


--X1_xq[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[4]
--register power-up is low

X1_xq[4] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][4], X1_cells[0][4], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[5]
--register power-up is low

BB7_dffs[5] = AMPP_FUNCTION(C1_raw_tck, X1_xq[5], BB7_dffs[6], !V1_reset_all, !W1_status_ram_shift_load);


--Z1_lfsr[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[5]
--register power-up is low

Z1_lfsr[5] = AMPP_FUNCTION(C1_raw_tck, Z1L17, V1_tdo_crc_val_calc_reset, !Z1L9);


--V1_tdo_crc_val_shift_reg[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[6]
--register power-up is low

V1_tdo_crc_val_shift_reg[6] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[6], V1_tdo_crc_val_shift_reg[7], !V1L442, V1L515);


--BB6_dffs[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[6]
--register power-up is low

BB6_dffs[6] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[7], CB1_last_buffer_write_address_sig[5], !V1_reset_all, V1_sdr);


--CB1_last_buffer_write_address_sig[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[4]
--register power-up is low

CB1_last_buffer_write_address_sig[4] = AMPP_FUNCTION(C1_acq_clk, CB1L63, CB1L190, CB1L162);


--CB1_\buffer_manager:last_trigger_address_var[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[1]
--register power-up is low

CB1_\buffer_manager:last_trigger_address_var[1] = AMPP_FUNCTION(C1_acq_clk, CB1L83, !V1_reset_all, CB1L190, CB1L153);


--X1_xq[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[5]
--register power-up is low

X1_xq[5] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][5], X1_cells[0][5], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[6]
--register power-up is low

BB7_dffs[6] = AMPP_FUNCTION(C1_raw_tck, X1_xq[6], BB7_dffs[7], !V1_reset_all, !W1_status_ram_shift_load);


--Z1_lfsr[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[6]
--register power-up is low

Z1_lfsr[6] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[7], V1_tdo_crc_val_calc_reset, !Z1L9);


--V1_tdo_crc_val_shift_reg[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[7]
--register power-up is low

V1_tdo_crc_val_shift_reg[7] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[7], V1_tdo_crc_val_shift_reg[8], !V1L442, V1L515);


--BB6_dffs[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[7]
--register power-up is low

BB6_dffs[7] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[8], CB1_last_buffer_write_address_sig[6], !V1_reset_all, V1_sdr);


--CB1_last_buffer_write_address_sig[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[5]
--register power-up is low

CB1_last_buffer_write_address_sig[5] = AMPP_FUNCTION(C1_acq_clk, CB1L67, CB1L190, CB1L162);


--CB1_\buffer_manager:last_trigger_address_var[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[2]
--register power-up is low

CB1_\buffer_manager:last_trigger_address_var[2] = AMPP_FUNCTION(C1_acq_clk, CB1L55, !V1_reset_all, CB1L190, CB1L153);


--X1_xq[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[6]
--register power-up is low

X1_xq[6] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][6], X1_cells[0][6], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[7]
--register power-up is low

BB7_dffs[7] = AMPP_FUNCTION(C1_raw_tck, X1_xq[7], BB7_dffs[8], !V1_reset_all, !W1_status_ram_shift_load);


--Z1_lfsr[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[7]
--register power-up is low

Z1_lfsr[7] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[8], V1_tdo_crc_val_calc_reset, !Z1L9);


--V1_tdo_crc_val_shift_reg[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[8]
--register power-up is low

V1_tdo_crc_val_shift_reg[8] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[8], V1_tdo_crc_val_shift_reg[9], !V1L442, V1L515);


--BB6_dffs[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[8]
--register power-up is low

BB6_dffs[8] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[9], CB1_last_buffer_write_address_sig[7], !V1_reset_all, V1_sdr);


--CB1_last_buffer_write_address_sig[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[6]
--register power-up is low

CB1_last_buffer_write_address_sig[6] = AMPP_FUNCTION(C1_acq_clk, CB1L71, CB1L190, CB1L162);


--CB1_\buffer_manager:last_trigger_address_var[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[3]
--register power-up is low

CB1_\buffer_manager:last_trigger_address_var[3] = AMPP_FUNCTION(C1_acq_clk, CB1L59, !V1_reset_all, CB1L190, CB1L153);


--X1_xq[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[7]
--register power-up is low

X1_xq[7] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][7], X1_cells[0][7], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[8]
--register power-up is low

BB7_dffs[8] = AMPP_FUNCTION(C1_raw_tck, X1_xq[8], BB7_dffs[9], !V1_reset_all, !W1_status_ram_shift_load);


--Z1_lfsr[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[8]
--register power-up is low

Z1_lfsr[8] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[9], V1_tdo_crc_val_calc_reset, !Z1L9);


--V1_tdo_crc_val_shift_reg[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[9]
--register power-up is low

V1_tdo_crc_val_shift_reg[9] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[9], V1_tdo_crc_val_shift_reg[10], !V1L442, V1L515);


--BB6_dffs[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[9]
--register power-up is low

BB6_dffs[9] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[10], CB1_\buffer_manager:last_trigger_address_var[0], !V1_reset_all, V1_sdr);


--CB1_last_buffer_write_address_sig[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[7]
--register power-up is low

CB1_last_buffer_write_address_sig[7] = AMPP_FUNCTION(C1_acq_clk, CB1L75, CB1L190, CB1L162);


--CB1_\buffer_manager:last_trigger_address_var[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[4]
--register power-up is low

CB1_\buffer_manager:last_trigger_address_var[4] = AMPP_FUNCTION(C1_acq_clk, CB1L63, !V1_reset_all, CB1L190, CB1L153);


--X1_xq[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[8]
--register power-up is low

X1_xq[8] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][8], X1_cells[0][8], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[9]
--register power-up is low

BB7_dffs[9] = AMPP_FUNCTION(C1_raw_tck, X1_xq[9], BB7_dffs[10], !V1_reset_all, !W1_status_ram_shift_load);


--Z1_lfsr[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[9]
--register power-up is low

Z1_lfsr[9] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[10], V1_tdo_crc_val_calc_reset, !Z1L9);


--V1_tdo_crc_val_shift_reg[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[10]
--register power-up is low

V1_tdo_crc_val_shift_reg[10] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[10], V1_tdo_crc_val_shift_reg[11], !V1L442, V1L515);


--BB6_dffs[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[10]
--register power-up is low

BB6_dffs[10] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[11], CB1_\buffer_manager:last_trigger_address_var[1], !V1_reset_all, V1_sdr);


--CB1_\buffer_manager:last_trigger_address_var[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[5]
--register power-up is low

CB1_\buffer_manager:last_trigger_address_var[5] = AMPP_FUNCTION(C1_acq_clk, CB1L67, !V1_reset_all, CB1L190, CB1L153);


--X1_xq[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[9]
--register power-up is low

X1_xq[9] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][9], X1_cells[0][9], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[10]
--register power-up is low

BB7_dffs[10] = AMPP_FUNCTION(C1_raw_tck, X1_xq[10], BB7_dffs[11], !V1_reset_all, !W1_status_ram_shift_load);


--Z1_lfsr[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[10]
--register power-up is low

Z1_lfsr[10] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[11], V1_tdo_crc_val_calc_reset, !Z1L9);


--V1_tdo_crc_val_shift_reg[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[11]
--register power-up is low

V1_tdo_crc_val_shift_reg[11] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[11], V1_tdo_crc_val_shift_reg[12], !V1L442, V1L515);


--BB6_dffs[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[11]
--register power-up is low

BB6_dffs[11] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[12], CB1_\buffer_manager:last_trigger_address_var[2], !V1_reset_all, V1_sdr);


--CB1_\buffer_manager:last_trigger_address_var[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[6]
--register power-up is low

CB1_\buffer_manager:last_trigger_address_var[6] = AMPP_FUNCTION(C1_acq_clk, CB1L71, !V1_reset_all, CB1L190, CB1L153);


--X1_xq[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[10]
--register power-up is low

X1_xq[10] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][10], X1_cells[0][10], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[11]
--register power-up is low

BB7_dffs[11] = AMPP_FUNCTION(C1_raw_tck, X1_xq[11], BB7_dffs[12], !V1_reset_all, !W1_status_ram_shift_load);


--Z1_lfsr[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[11]
--register power-up is low

Z1_lfsr[11] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[12], V1_tdo_crc_val_calc_reset, !Z1L9);


--V1_tdo_crc_val_shift_reg[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[12]
--register power-up is low

V1_tdo_crc_val_shift_reg[12] = AMPP_FUNCTION(C1_raw_tck, Z1_lfsr[12], V1_tdo_crc_val_shift_reg[13], !V1L442, V1L515);


--BB6_dffs[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[12]
--register power-up is low

BB6_dffs[12] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[13], CB1_\buffer_manager:last_trigger_address_var[3], !V1_reset_all, V1_sdr);


--CB1_\buffer_manager:last_trigger_address_var[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[7]
--register power-up is low

CB1_\buffer_manager:last_trigger_address_var[7] = AMPP_FUNCTION(C1_acq_clk, CB1L75, !V1_reset_all, CB1L190, CB1L153);


--X1_xq[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[11]
--register power-up is low

X1_xq[11] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][11], X1_cells[0][11], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[12]
--register power-up is low

BB7_dffs[12] = AMPP_FUNCTION(C1_raw_tck, X1_xq[12], BB7_dffs[13], !V1_reset_all, !W1_status_ram_shift_load);


--Z1_lfsr[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[12]
--register power-up is low

Z1_lfsr[12] = AMPP_FUNCTION(C1_raw_tck, Z1L18, V1_tdo_crc_val_calc_reset, !Z1L9);


--BB6_dffs[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[13]
--register power-up is low

BB6_dffs[13] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[14], CB1_\buffer_manager:last_trigger_address_var[4], !V1_reset_all, V1_sdr);


--X1_xq[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[12]
--register power-up is low

X1_xq[12] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][12], X1_cells[0][12], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[13]
--register power-up is low

BB7_dffs[13] = AMPP_FUNCTION(C1_raw_tck, X1_xq[13], BB7_dffs[14], !V1_reset_all, !W1_status_ram_shift_load);


--BB6_dffs[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[14]
--register power-up is low

BB6_dffs[14] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[15], CB1_\buffer_manager:last_trigger_address_var[5], !V1_reset_all, V1_sdr);


--X1_xq[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[13]
--register power-up is low

X1_xq[13] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][13], X1_cells[0][13], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[14]
--register power-up is low

BB7_dffs[14] = AMPP_FUNCTION(C1_raw_tck, X1_xq[14], BB7_dffs[15], !V1_reset_all, !W1_status_ram_shift_load);


--BB6_dffs[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[15]
--register power-up is low

BB6_dffs[15] = AMPP_FUNCTION(C1_raw_tck, BB6_dffs[16], CB1_\buffer_manager:last_trigger_address_var[6], !V1_reset_all, V1_sdr);


--X1_xq[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[14]
--register power-up is low

X1_xq[14] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][14], X1_cells[0][14], !X1_xraddr[0], C1_ir_in[7]);


--BB7_dffs[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[15]
--register power-up is low

BB7_dffs[15] = AMPP_FUNCTION(C1_raw_tck, X1_xq[15], BB7_dffs[16], !V1_reset_all, !W1_status_ram_shift_load);


--BB6_dffs[16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[16]
--register power-up is low

BB6_dffs[16] = AMPP_FUNCTION(C1_raw_tck, BB5_dffs[0], CB1_\buffer_manager:last_trigger_address_var[7], !V1_reset_all, V1_sdr);


--X1_xq[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[15]
--register power-up is low

X1_xq[15] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][15], X1_cells[0][15], !X1_xraddr[0], C1_ir_in[7]);


--BB5_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[0]
--register power-up is low

BB5_dffs[0] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a0, BB5_dffs[1], !V1_reset_all, !W1_ram_shift_load);


--X1_xq[16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[16]
--register power-up is low

X1_xq[16] = AMPP_FUNCTION(C1_raw_tck, X1_cells[1][16], X1_cells[0][16], !X1_xraddr[0], C1_ir_in[7]);


--RB1_ram_block1a0 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a0
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a0 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][0], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[1]
--register power-up is low

BB5_dffs[1] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a1, BB5_dffs[2], !V1_reset_all, !W1_ram_shift_load);


--EB1_counter_reg_bit[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_reg_bit[0]
--register power-up is low

EB1_counter_reg_bit[0] = AMPP_FUNCTION(C1_raw_tck, EB1_counter_comb_bita0, C1L394, !W1_offload_shift_ena, EB1_cout_actual);


--EB1_counter_reg_bit[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_reg_bit[6]
--register power-up is low

EB1_counter_reg_bit[6] = AMPP_FUNCTION(C1_raw_tck, EB1_counter_comb_bita6, C1L394, !W1_offload_shift_ena, EB1_cout_actual);


--EB1_counter_reg_bit[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_reg_bit[5]
--register power-up is low

EB1_counter_reg_bit[5] = AMPP_FUNCTION(C1_raw_tck, EB1_counter_comb_bita5, C1L394, !W1_offload_shift_ena, EB1_cout_actual);


--EB1_counter_reg_bit[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_reg_bit[4]
--register power-up is low

EB1_counter_reg_bit[4] = AMPP_FUNCTION(C1_raw_tck, EB1_counter_comb_bita4, C1L394, !W1_offload_shift_ena, EB1_cout_actual);


--EB1_counter_reg_bit[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_reg_bit[3]
--register power-up is low

EB1_counter_reg_bit[3] = AMPP_FUNCTION(C1_raw_tck, EB1_counter_comb_bita3, C1L394, !W1_offload_shift_ena, EB1_cout_actual);


--EB1_counter_reg_bit[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_reg_bit[2]
--register power-up is low

EB1_counter_reg_bit[2] = AMPP_FUNCTION(C1_raw_tck, EB1_counter_comb_bita2, C1L394, !W1_offload_shift_ena, EB1_cout_actual);


--EB1_counter_reg_bit[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_reg_bit[1]
--register power-up is low

EB1_counter_reg_bit[1] = AMPP_FUNCTION(C1_raw_tck, EB1_counter_comb_bita1, C1L394, !W1_offload_shift_ena, EB1_cout_actual);


--GB1_counter_reg_bit[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_reg_bit[0]
--register power-up is low

GB1_counter_reg_bit[0] = AMPP_FUNCTION(C1_raw_tck, GB1_counter_comb_bita0, W1_acq_buf_read_reset, W1_read_pointer_counter_clk_ena);


--GB1_counter_reg_bit[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_reg_bit[1]
--register power-up is low

GB1_counter_reg_bit[1] = AMPP_FUNCTION(C1_raw_tck, GB1_counter_comb_bita1, W1_acq_buf_read_reset, W1_read_pointer_counter_clk_ena);


--GB1_counter_reg_bit[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_reg_bit[2]
--register power-up is low

GB1_counter_reg_bit[2] = AMPP_FUNCTION(C1_raw_tck, GB1_counter_comb_bita2, W1_acq_buf_read_reset, W1_read_pointer_counter_clk_ena);


--GB1_counter_reg_bit[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_reg_bit[3]
--register power-up is low

GB1_counter_reg_bit[3] = AMPP_FUNCTION(C1_raw_tck, GB1_counter_comb_bita3, W1_acq_buf_read_reset, W1_read_pointer_counter_clk_ena);


--GB1_counter_reg_bit[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_reg_bit[4]
--register power-up is low

GB1_counter_reg_bit[4] = AMPP_FUNCTION(C1_raw_tck, GB1_counter_comb_bita4, W1_acq_buf_read_reset, W1_read_pointer_counter_clk_ena);


--GB1_counter_reg_bit[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_reg_bit[5]
--register power-up is low

GB1_counter_reg_bit[5] = AMPP_FUNCTION(C1_raw_tck, GB1_counter_comb_bita5, W1_acq_buf_read_reset, W1_read_pointer_counter_clk_ena);


--GB1_counter_reg_bit[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_reg_bit[6]
--register power-up is low

GB1_counter_reg_bit[6] = AMPP_FUNCTION(C1_raw_tck, GB1_counter_comb_bita6, W1_acq_buf_read_reset, W1_read_pointer_counter_clk_ena);


--GB1_counter_reg_bit[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_reg_bit[7]
--register power-up is low

GB1_counter_reg_bit[7] = AMPP_FUNCTION(C1_raw_tck, GB1_counter_comb_bita7, W1_acq_buf_read_reset, W1_read_pointer_counter_clk_ena);


--RB1_ram_block1a1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a1
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a1 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][1], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[2]
--register power-up is low

BB5_dffs[2] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a2, BB5_dffs[3], !V1_reset_all, !W1_ram_shift_load);


--EB1_counter_comb_bita0 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita0
EB1_counter_comb_bita0 = AMPP_FUNCTION(!EB1_counter_reg_bit[0]);

--EB1L3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita0~COUT
EB1L3 = AMPP_FUNCTION(!EB1_counter_reg_bit[0]);


--EB1L27 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita6~1
EB1L27 = AMPP_FUNCTION(EB1L31);


--EB1_counter_comb_bita6 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita6
EB1_counter_comb_bita6 = AMPP_FUNCTION(!EB1_counter_reg_bit[6], EB1L23);

--EB1L31 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita6~COUT
EB1L31 = AMPP_FUNCTION(!EB1_counter_reg_bit[6], EB1L23);


--EB1_counter_comb_bita5 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita5
EB1_counter_comb_bita5 = AMPP_FUNCTION(!EB1_counter_reg_bit[5], EB1L19);

--EB1L23 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita5~COUT
EB1L23 = AMPP_FUNCTION(!EB1_counter_reg_bit[5], EB1L19);


--EB1_counter_comb_bita4 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita4
EB1_counter_comb_bita4 = AMPP_FUNCTION(!EB1_counter_reg_bit[4], EB1L15);

--EB1L19 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita4~COUT
EB1L19 = AMPP_FUNCTION(!EB1_counter_reg_bit[4], EB1L15);


--EB1_counter_comb_bita3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita3
EB1_counter_comb_bita3 = AMPP_FUNCTION(!EB1_counter_reg_bit[3], EB1L11);

--EB1L15 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita3~COUT
EB1L15 = AMPP_FUNCTION(!EB1_counter_reg_bit[3], EB1L11);


--EB1_counter_comb_bita2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita2
EB1_counter_comb_bita2 = AMPP_FUNCTION(!EB1_counter_reg_bit[2], EB1L7);

--EB1L11 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita2~COUT
EB1L11 = AMPP_FUNCTION(!EB1_counter_reg_bit[2], EB1L7);


--EB1_counter_comb_bita1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita1
EB1_counter_comb_bita1 = AMPP_FUNCTION(!EB1_counter_reg_bit[1], EB1L3);

--EB1L7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|counter_comb_bita1~COUT
EB1L7 = AMPP_FUNCTION(!EB1_counter_reg_bit[1], EB1L3);


--GB1_counter_comb_bita0 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita0
GB1_counter_comb_bita0 = AMPP_FUNCTION(!GB1_counter_reg_bit[0]);

--GB1L3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita0~COUT
GB1L3 = AMPP_FUNCTION(!GB1_counter_reg_bit[0]);


--GB1_counter_comb_bita1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita1
GB1_counter_comb_bita1 = AMPP_FUNCTION(!GB1_counter_reg_bit[1], GB1L3);

--GB1L7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita1~COUT
GB1L7 = AMPP_FUNCTION(!GB1_counter_reg_bit[1], GB1L3);


--GB1_counter_comb_bita2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita2
GB1_counter_comb_bita2 = AMPP_FUNCTION(!GB1_counter_reg_bit[2], GB1L7);

--GB1L11 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita2~COUT
GB1L11 = AMPP_FUNCTION(!GB1_counter_reg_bit[2], GB1L7);


--GB1_counter_comb_bita3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita3
GB1_counter_comb_bita3 = AMPP_FUNCTION(!GB1_counter_reg_bit[3], GB1L11);

--GB1L15 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita3~COUT
GB1L15 = AMPP_FUNCTION(!GB1_counter_reg_bit[3], GB1L11);


--GB1_counter_comb_bita4 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita4
GB1_counter_comb_bita4 = AMPP_FUNCTION(!GB1_counter_reg_bit[4], GB1L15);

--GB1L19 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita4~COUT
GB1L19 = AMPP_FUNCTION(!GB1_counter_reg_bit[4], GB1L15);


--GB1_counter_comb_bita5 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita5
GB1_counter_comb_bita5 = AMPP_FUNCTION(!GB1_counter_reg_bit[5], GB1L19);

--GB1L23 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita5~COUT
GB1L23 = AMPP_FUNCTION(!GB1_counter_reg_bit[5], GB1L19);


--GB1_counter_comb_bita6 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita6
GB1_counter_comb_bita6 = AMPP_FUNCTION(!GB1_counter_reg_bit[6], GB1L23);

--GB1L27 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita6~COUT
GB1L27 = AMPP_FUNCTION(!GB1_counter_reg_bit[6], GB1L23);


--GB1_counter_comb_bita7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_7vi:auto_generated|counter_comb_bita7
GB1_counter_comb_bita7 = AMPP_FUNCTION(!GB1_counter_reg_bit[7], GB1L27);


--RB1_ram_block1a2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a2
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a2 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][2], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[3]
--register power-up is low

BB5_dffs[3] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a3, BB5_dffs[4], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a3
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a3 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][3], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[4]
--register power-up is low

BB5_dffs[4] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a4, BB5_dffs[5], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a4 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a4
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a4 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][4], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[5]
--register power-up is low

BB5_dffs[5] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a5, BB5_dffs[6], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a5 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a5
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a5 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][5], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[6]
--register power-up is low

BB5_dffs[6] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a6, BB5_dffs[7], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a6 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a6
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a6 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][6], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[7]
--register power-up is low

BB5_dffs[7] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a7, BB5_dffs[8], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a7
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a7 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][7], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[8]
--register power-up is low

BB5_dffs[8] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a8, BB5_dffs[9], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a8 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a8
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a8 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][8], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[9]
--register power-up is low

BB5_dffs[9] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a9, BB5_dffs[10], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a9 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a9
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a9 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][9], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[10]
--register power-up is low

BB5_dffs[10] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a10, BB5_dffs[11], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a10 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a10
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a10 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][10], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[11]
--register power-up is low

BB5_dffs[11] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a11, BB5_dffs[12], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a11 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a11
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a11 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][11], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[12]
--register power-up is low

BB5_dffs[12] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a12, BB5_dffs[13], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a12 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a12
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a12 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][12], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[13]
--register power-up is low

BB5_dffs[13] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a13, BB5_dffs[14], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a13 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a13
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a13 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][13], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[14]
--register power-up is low

BB5_dffs[14] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a14, BB5_dffs[15], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a14 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a14
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a14 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][14], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[15]
--register power-up is low

BB5_dffs[15] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a15, BB5_dffs[16], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a15 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a15
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a15 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][15], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[16]
--register power-up is low

BB5_dffs[16] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a16, BB5_dffs[17], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a16 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a16
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a16 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][16], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[17]
--register power-up is low

BB5_dffs[17] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a17, BB5_dffs[18], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a17 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a17
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a17 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][17], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[18]
--register power-up is low

BB5_dffs[18] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a18, BB5_dffs[19], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a18 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a18
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a18 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][18], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[19]
--register power-up is low

BB5_dffs[19] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a19, BB5_dffs[20], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a19 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a19
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a19 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][19], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[20]
--register power-up is low

BB5_dffs[20] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a20, BB5_dffs[21], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a20 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a20
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a20 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][20], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[21] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[21]
--register power-up is low

BB5_dffs[21] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a21, BB5_dffs[22], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a21 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a21
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a21 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][21], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[22] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[22]
--register power-up is low

BB5_dffs[22] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a22, BB5_dffs[23], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a22 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a22
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a22 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][22], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[23] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[23]
--register power-up is low

BB5_dffs[23] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a23, BB5_dffs[24], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a23 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a23
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a23 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][23], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[24] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[24]
--register power-up is low

BB5_dffs[24] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a24, BB5_dffs[25], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a24 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a24
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a24 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][24], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[25] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[25]
--register power-up is low

BB5_dffs[25] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a25, BB5_dffs[26], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a25 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a25
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a25 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][25], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[26] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[26]
--register power-up is low

BB5_dffs[26] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a26, BB5_dffs[27], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a26 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a26
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a26 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][26], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[27] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[27]
--register power-up is low

BB5_dffs[27] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a27, BB5_dffs[28], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a27 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a27
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a27 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][27], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[28] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[28]
--register power-up is low

BB5_dffs[28] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a28, BB5_dffs[29], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a28 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a28
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a28 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][28], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[29] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[29]
--register power-up is low

BB5_dffs[29] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a29, BB5_dffs[30], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a29 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a29
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a29 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][29], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[30] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[30]
--register power-up is low

BB5_dffs[30] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a30, BB5_dffs[31], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a30 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a30
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a30 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][30], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[31] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[31]
--register power-up is low

BB5_dffs[31] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a31, BB5_dffs[32], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a31 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a31
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a31 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][31], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[32] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[32]
--register power-up is low

BB5_dffs[32] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a32, BB5_dffs[33], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a32 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a32
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a32 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][32], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[33] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[33]
--register power-up is low

BB5_dffs[33] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a33, BB5_dffs[34], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a33 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a33
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a33 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][33], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[34] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[34]
--register power-up is low

BB5_dffs[34] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a34, BB5_dffs[35], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a34 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a34
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a34 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][34], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[35] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[35]
--register power-up is low

BB5_dffs[35] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a35, BB5_dffs[36], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a35 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a35
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a35 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][35], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[36] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[36]
--register power-up is low

BB5_dffs[36] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a36, BB5_dffs[37], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a36 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a36
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a36 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][36], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[37] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[37]
--register power-up is low

BB5_dffs[37] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a37, BB5_dffs[38], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a37 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a37
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a37 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][37], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[38] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[38]
--register power-up is low

BB5_dffs[38] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a38, BB5_dffs[39], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a38 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a38
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a38 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][38], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[39] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[39]
--register power-up is low

BB5_dffs[39] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a39, BB5_dffs[40], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a39 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a39
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a39 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][39], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[40] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[40]
--register power-up is low

BB5_dffs[40] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a40, BB5_dffs[41], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a40 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a40
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a40 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][40], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[41] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[41]
--register power-up is low

BB5_dffs[41] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a41, BB5_dffs[42], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a41 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a41
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a41 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][41], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[42] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[42]
--register power-up is low

BB5_dffs[42] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a42, BB5_dffs[43], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a42 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a42
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a42 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][42], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[43] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[43]
--register power-up is low

BB5_dffs[43] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a43, BB5_dffs[44], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a43 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a43
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a43 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][43], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[44] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[44]
--register power-up is low

BB5_dffs[44] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a44, BB5_dffs[45], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a44 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a44
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a44 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][44], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[45] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[45]
--register power-up is low

BB5_dffs[45] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a45, BB5_dffs[46], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a45 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a45
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a45 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][45], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[46] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[46]
--register power-up is low

BB5_dffs[46] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a46, BB5_dffs[47], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a46 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a46
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a46 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][46], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[47] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[47]
--register power-up is low

BB5_dffs[47] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a47, BB5_dffs[48], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a47 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a47
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a47 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][47], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[48] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[48]
--register power-up is low

BB5_dffs[48] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a48, BB5_dffs[49], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a48 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a48
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a48 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][48], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[49] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[49]
--register power-up is low

BB5_dffs[49] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a49, BB5_dffs[50], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a49 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a49
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a49 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][49], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[50] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[50]
--register power-up is low

BB5_dffs[50] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a50, BB5_dffs[51], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a50 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a50
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a50 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][50], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[51] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[51]
--register power-up is low

BB5_dffs[51] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a51, BB5_dffs[52], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a51 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a51
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a51 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][51], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[52] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[52]
--register power-up is low

BB5_dffs[52] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a52, BB5_dffs[53], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a52 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a52
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a52 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][52], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[53] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[53]
--register power-up is low

BB5_dffs[53] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a53, BB5_dffs[54], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a53 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a53
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a53 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][53], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[54] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[54]
--register power-up is low

BB5_dffs[54] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a54, BB5_dffs[55], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a54 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a54
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a54 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][54], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[55] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[55]
--register power-up is low

BB5_dffs[55] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a55, BB5_dffs[56], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a55 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a55
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a55 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][55], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[56] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[56]
--register power-up is low

BB5_dffs[56] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a56, BB5_dffs[57], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a56 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a56
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a56 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][56], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[57] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[57]
--register power-up is low

BB5_dffs[57] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a57, BB5_dffs[58], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a57 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a57
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a57 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][57], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[58] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[58]
--register power-up is low

BB5_dffs[58] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a58, BB5_dffs[59], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a58 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a58
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a58 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][58], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[59] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[59]
--register power-up is low

BB5_dffs[59] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a59, BB5_dffs[60], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a59 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a59
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a59 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][59], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[60] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[60]
--register power-up is low

BB5_dffs[60] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a60, BB5_dffs[61], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a60 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a60
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a60 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][60], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[61] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[61]
--register power-up is low

BB5_dffs[61] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a61, BB5_dffs[62], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a61 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a61
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a61 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][61], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[62] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[62]
--register power-up is low

BB5_dffs[62] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a62, BB5_dffs[63], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a62 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a62
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a62 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][62], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[63] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[63]
--register power-up is low

BB5_dffs[63] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a63, BB5_dffs[64], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a63 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a63
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a63 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][63], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[64] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[64]
--register power-up is low

BB5_dffs[64] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a64, BB5_dffs[65], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a64 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a64
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a64 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][64], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[65] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[65]
--register power-up is low

BB5_dffs[65] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a65, BB5_dffs[66], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a65 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a65
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a65 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][65], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[66] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[66]
--register power-up is low

BB5_dffs[66] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a66, BB5_dffs[67], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a66 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a66
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a66 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][66], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[67] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[67]
--register power-up is low

BB5_dffs[67] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a67, BB5_dffs[68], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a67 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a67
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a67 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][67], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[68] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[68]
--register power-up is low

BB5_dffs[68] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a68, BB5_dffs[69], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a68 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a68
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a68 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][68], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[69] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[69]
--register power-up is low

BB5_dffs[69] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a69, BB5_dffs[70], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a69 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a69
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a69 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][69], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[70] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[70]
--register power-up is low

BB5_dffs[70] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a70, BB5_dffs[71], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a70 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a70
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a70 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][70], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[71] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[71]
--register power-up is low

BB5_dffs[71] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a71, BB5_dffs[72], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a71 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a71
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a71 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][71], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--BB5_dffs[72] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[72]
--register power-up is low

BB5_dffs[72] = AMPP_FUNCTION(C1_raw_tck, RB1_ram_block1a72, BB5_dffs[73], !V1_reset_all, !W1_ram_shift_load);


--RB1_ram_block1a72 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a72
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a72 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][72], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--RB1_ram_block1a73 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2c84:auto_generated|ram_block1a73
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 256, Port A Width: 1, Port B Depth: 256, Port B Width: 1
--Port A Logical Depth: 256, Port A Logical Width: 74, Port B Logical Depth: 256, Port B Logical Width: 74
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
RB1_ram_block1a73 = AMPP_FUNCTION(V1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, V1_buffer_write_enable_delayed, C1_ir_in[4], V1_acq_data_in_pipe_reg[3][73], V1_buffer_write_address_delayed[0], V1_buffer_write_address_delayed[1], V1_buffer_write_address_delayed[2], V1_buffer_write_address_delayed[3], V1_buffer_write_address_delayed[4], V1_buffer_write_address_delayed[5], V1_buffer_write_address_delayed[6], V1_buffer_write_address_delayed[7], GB1_counter_reg_bit[0], GB1_counter_reg_bit[1], GB1_counter_reg_bit[2], GB1_counter_reg_bit[3], GB1_counter_reg_bit[4], GB1_counter_reg_bit[5], GB1_counter_reg_bit[6], GB1_counter_reg_bit[7]);


--C1_acq_storage_qualifier_in[0] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[0]
C1_acq_storage_qualifier_in[0] = INPUT();


--C1_acq_storage_qualifier_in[1] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[1]
C1_acq_storage_qualifier_in[1] = INPUT();


--C1_acq_storage_qualifier_in[2] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[2]
C1_acq_storage_qualifier_in[2] = INPUT();


--C1_acq_storage_qualifier_in[3] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[3]
C1_acq_storage_qualifier_in[3] = INPUT();


--C1_acq_storage_qualifier_in[4] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[4]
C1_acq_storage_qualifier_in[4] = INPUT();


--C1_acq_storage_qualifier_in[5] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[5]
C1_acq_storage_qualifier_in[5] = INPUT();


--C1_acq_storage_qualifier_in[6] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[6]
C1_acq_storage_qualifier_in[6] = INPUT();


--C1_acq_storage_qualifier_in[7] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[7]
C1_acq_storage_qualifier_in[7] = INPUT();


--C1_acq_storage_qualifier_in[8] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[8]
C1_acq_storage_qualifier_in[8] = INPUT();


--C1_acq_storage_qualifier_in[9] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[9]
C1_acq_storage_qualifier_in[9] = INPUT();


--C1_acq_storage_qualifier_in[10] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[10]
C1_acq_storage_qualifier_in[10] = INPUT();


--C1_acq_storage_qualifier_in[11] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[11]
C1_acq_storage_qualifier_in[11] = INPUT();


--C1_acq_storage_qualifier_in[12] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[12]
C1_acq_storage_qualifier_in[12] = INPUT();


--C1_acq_storage_qualifier_in[13] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[13]
C1_acq_storage_qualifier_in[13] = INPUT();


--C1_acq_storage_qualifier_in[14] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[14]
C1_acq_storage_qualifier_in[14] = INPUT();


--C1_acq_storage_qualifier_in[15] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[15]
C1_acq_storage_qualifier_in[15] = INPUT();


--C1_acq_storage_qualifier_in[16] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[16]
C1_acq_storage_qualifier_in[16] = INPUT();


--C1_acq_storage_qualifier_in[17] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[17]
C1_acq_storage_qualifier_in[17] = INPUT();


--C1_acq_storage_qualifier_in[18] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[18]
C1_acq_storage_qualifier_in[18] = INPUT();


--C1_acq_storage_qualifier_in[19] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[19]
C1_acq_storage_qualifier_in[19] = INPUT();


--C1_acq_storage_qualifier_in[20] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[20]
C1_acq_storage_qualifier_in[20] = INPUT();


--C1_acq_storage_qualifier_in[21] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[21]
C1_acq_storage_qualifier_in[21] = INPUT();


--C1_acq_storage_qualifier_in[22] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[22]
C1_acq_storage_qualifier_in[22] = INPUT();


--C1_acq_storage_qualifier_in[23] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[23]
C1_acq_storage_qualifier_in[23] = INPUT();


--C1_acq_storage_qualifier_in[24] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[24]
C1_acq_storage_qualifier_in[24] = INPUT();


--C1_acq_storage_qualifier_in[25] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[25]
C1_acq_storage_qualifier_in[25] = INPUT();


--C1_acq_storage_qualifier_in[26] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[26]
C1_acq_storage_qualifier_in[26] = INPUT();


--C1_acq_storage_qualifier_in[27] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[27]
C1_acq_storage_qualifier_in[27] = INPUT();


--C1_acq_storage_qualifier_in[28] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[28]
C1_acq_storage_qualifier_in[28] = INPUT();


--C1_acq_storage_qualifier_in[29] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[29]
C1_acq_storage_qualifier_in[29] = INPUT();


--C1_acq_storage_qualifier_in[30] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[30]
C1_acq_storage_qualifier_in[30] = INPUT();


--C1_acq_storage_qualifier_in[31] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[31]
C1_acq_storage_qualifier_in[31] = INPUT();


--C1_acq_storage_qualifier_in[32] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[32]
C1_acq_storage_qualifier_in[32] = INPUT();


--C1_acq_storage_qualifier_in[33] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[33]
C1_acq_storage_qualifier_in[33] = INPUT();


--C1_acq_storage_qualifier_in[34] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[34]
C1_acq_storage_qualifier_in[34] = INPUT();


--C1_acq_storage_qualifier_in[35] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[35]
C1_acq_storage_qualifier_in[35] = INPUT();


--C1_acq_storage_qualifier_in[36] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[36]
C1_acq_storage_qualifier_in[36] = INPUT();


--C1_acq_storage_qualifier_in[37] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[37]
C1_acq_storage_qualifier_in[37] = INPUT();


--C1_acq_storage_qualifier_in[38] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[38]
C1_acq_storage_qualifier_in[38] = INPUT();


--C1_acq_storage_qualifier_in[39] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[39]
C1_acq_storage_qualifier_in[39] = INPUT();


--C1_acq_storage_qualifier_in[40] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[40]
C1_acq_storage_qualifier_in[40] = INPUT();


--C1_acq_storage_qualifier_in[41] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[41]
C1_acq_storage_qualifier_in[41] = INPUT();


--C1_acq_storage_qualifier_in[42] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[42]
C1_acq_storage_qualifier_in[42] = INPUT();


--C1_acq_storage_qualifier_in[43] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[43]
C1_acq_storage_qualifier_in[43] = INPUT();


--C1_acq_storage_qualifier_in[44] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[44]
C1_acq_storage_qualifier_in[44] = INPUT();


--C1_acq_storage_qualifier_in[45] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[45]
C1_acq_storage_qualifier_in[45] = INPUT();


--C1_acq_storage_qualifier_in[46] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[46]
C1_acq_storage_qualifier_in[46] = INPUT();


--C1_acq_storage_qualifier_in[47] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[47]
C1_acq_storage_qualifier_in[47] = INPUT();


--C1_acq_storage_qualifier_in[48] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[48]
C1_acq_storage_qualifier_in[48] = INPUT();


--C1_acq_storage_qualifier_in[49] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[49]
C1_acq_storage_qualifier_in[49] = INPUT();


--C1_acq_storage_qualifier_in[50] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[50]
C1_acq_storage_qualifier_in[50] = INPUT();


--C1_acq_storage_qualifier_in[51] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[51]
C1_acq_storage_qualifier_in[51] = INPUT();


--C1_acq_storage_qualifier_in[52] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[52]
C1_acq_storage_qualifier_in[52] = INPUT();


--C1_acq_storage_qualifier_in[53] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[53]
C1_acq_storage_qualifier_in[53] = INPUT();


--C1_acq_storage_qualifier_in[54] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[54]
C1_acq_storage_qualifier_in[54] = INPUT();


--C1_acq_storage_qualifier_in[55] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[55]
C1_acq_storage_qualifier_in[55] = INPUT();


--C1_acq_storage_qualifier_in[56] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[56]
C1_acq_storage_qualifier_in[56] = INPUT();


--C1_acq_storage_qualifier_in[57] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[57]
C1_acq_storage_qualifier_in[57] = INPUT();


--C1_acq_storage_qualifier_in[58] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[58]
C1_acq_storage_qualifier_in[58] = INPUT();


--C1_acq_storage_qualifier_in[59] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[59]
C1_acq_storage_qualifier_in[59] = INPUT();


--C1_acq_storage_qualifier_in[60] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[60]
C1_acq_storage_qualifier_in[60] = INPUT();


--C1_acq_storage_qualifier_in[61] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[61]
C1_acq_storage_qualifier_in[61] = INPUT();


--C1_acq_storage_qualifier_in[62] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[62]
C1_acq_storage_qualifier_in[62] = INPUT();


--C1_acq_storage_qualifier_in[63] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[63]
C1_acq_storage_qualifier_in[63] = INPUT();


--C1_acq_storage_qualifier_in[64] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[64]
C1_acq_storage_qualifier_in[64] = INPUT();


--C1_acq_storage_qualifier_in[65] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[65]
C1_acq_storage_qualifier_in[65] = INPUT();


--C1_acq_storage_qualifier_in[66] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[66]
C1_acq_storage_qualifier_in[66] = INPUT();


--C1_acq_storage_qualifier_in[67] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[67]
C1_acq_storage_qualifier_in[67] = INPUT();


--C1_acq_storage_qualifier_in[68] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[68]
C1_acq_storage_qualifier_in[68] = INPUT();


--C1_acq_storage_qualifier_in[69] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[69]
C1_acq_storage_qualifier_in[69] = INPUT();


--C1_acq_storage_qualifier_in[70] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[70]
C1_acq_storage_qualifier_in[70] = INPUT();


--C1_acq_storage_qualifier_in[71] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[71]
C1_acq_storage_qualifier_in[71] = INPUT();


--C1_acq_storage_qualifier_in[72] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[72]
C1_acq_storage_qualifier_in[72] = INPUT();


--C1_acq_storage_qualifier_in[73] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[73]
C1_acq_storage_qualifier_in[73] = INPUT();


--C1_trigger_in is sld_signaltap:auto_signaltap_0|trigger_in
C1_trigger_in = INPUT();


--C1_storage_enable is sld_signaltap:auto_signaltap_0|storage_enable
C1_storage_enable = INPUT();


--C1_jtag_state_e1dr is sld_signaltap:auto_signaltap_0|jtag_state_e1dr
C1_jtag_state_e1dr = INPUT();


--C1_jtag_state_uir is sld_signaltap:auto_signaltap_0|jtag_state_uir
C1_jtag_state_uir = INPUT();


--C1_jtag_state_tlr is sld_signaltap:auto_signaltap_0|jtag_state_tlr
C1_jtag_state_tlr = INPUT();


--C1_jtag_state_rti is sld_signaltap:auto_signaltap_0|jtag_state_rti
C1_jtag_state_rti = INPUT();


--C1_jtag_state_sdrs is sld_signaltap:auto_signaltap_0|jtag_state_sdrs
C1_jtag_state_sdrs = INPUT();


--C1_jtag_state_pdr is sld_signaltap:auto_signaltap_0|jtag_state_pdr
C1_jtag_state_pdr = INPUT();


--C1_jtag_state_e2dr is sld_signaltap:auto_signaltap_0|jtag_state_e2dr
C1_jtag_state_e2dr = INPUT();


--C1_jtag_state_sirs is sld_signaltap:auto_signaltap_0|jtag_state_sirs
C1_jtag_state_sirs = INPUT();


--C1_jtag_state_cir is sld_signaltap:auto_signaltap_0|jtag_state_cir
C1_jtag_state_cir = INPUT();


--C1_jtag_state_sir is sld_signaltap:auto_signaltap_0|jtag_state_sir
C1_jtag_state_sir = INPUT();


--C1_jtag_state_e1ir is sld_signaltap:auto_signaltap_0|jtag_state_e1ir
C1_jtag_state_e1ir = INPUT();


--C1_jtag_state_pir is sld_signaltap:auto_signaltap_0|jtag_state_pir
C1_jtag_state_pir = INPUT();


--C1_jtag_state_e2ir is sld_signaltap:auto_signaltap_0|jtag_state_e2ir
C1_jtag_state_e2ir = INPUT();


--C1_tms is sld_signaltap:auto_signaltap_0|tms
C1_tms = INPUT();


--C1_clrn is sld_signaltap:auto_signaltap_0|clrn
C1_clrn = INPUT();


--C1_irq is sld_signaltap:auto_signaltap_0|irq
C1_irq = OUTPUT(C1L394);


--C1_vir_tdi is sld_signaltap:auto_signaltap_0|vir_tdi
C1_vir_tdi = INPUT();


--C1_vcc is sld_signaltap:auto_signaltap_0|vcc
C1_vcc = OUTPUT(C1L395);


--C1_gnd is sld_signaltap:auto_signaltap_0|gnd
C1_gnd = OUTPUT(C1L394);


--C1_ir_out[0] is sld_signaltap:auto_signaltap_0|ir_out[0]
C1_ir_out[0] = OUTPUT(C1_ir_in[0]);


--C1_ir_out[1] is sld_signaltap:auto_signaltap_0|ir_out[1]
C1_ir_out[1] = OUTPUT(C1_ir_in[1]);


--C1_ir_out[2] is sld_signaltap:auto_signaltap_0|ir_out[2]
C1_ir_out[2] = OUTPUT(C1_ir_in[2]);


--C1_ir_out[3] is sld_signaltap:auto_signaltap_0|ir_out[3]
C1_ir_out[3] = OUTPUT(C1_ir_in[3]);


--C1_ir_out[4] is sld_signaltap:auto_signaltap_0|ir_out[4]
C1_ir_out[4] = OUTPUT(C1_ir_in[4]);


--C1_ir_out[5] is sld_signaltap:auto_signaltap_0|ir_out[5]
C1_ir_out[5] = OUTPUT(C1_ir_in[5]);


--C1_ir_out[6] is sld_signaltap:auto_signaltap_0|ir_out[6]
C1_ir_out[6] = OUTPUT(C1_ir_in[6]);


--C1_ir_out[7] is sld_signaltap:auto_signaltap_0|ir_out[7]
C1_ir_out[7] = OUTPUT(C1_ir_in[7]);


--C1_ir_out[8] is sld_signaltap:auto_signaltap_0|ir_out[8]
C1_ir_out[8] = OUTPUT(C1_ir_in[8]);


--C1_ir_out[9] is sld_signaltap:auto_signaltap_0|ir_out[9]
C1_ir_out[9] = OUTPUT(C1_ir_in[9]);


--C1_tdo is sld_signaltap:auto_signaltap_0|tdo
C1_tdo = OUTPUT(V1L539);


--C1_acq_data_out[0] is sld_signaltap:auto_signaltap_0|acq_data_out[0]
C1_acq_data_out[0] = OUTPUT(C1_acq_data_in_reg[0]);


--C1_acq_data_out[1] is sld_signaltap:auto_signaltap_0|acq_data_out[1]
C1_acq_data_out[1] = OUTPUT(C1_acq_data_in_reg[1]);


--C1_acq_data_out[2] is sld_signaltap:auto_signaltap_0|acq_data_out[2]
C1_acq_data_out[2] = OUTPUT(C1_acq_data_in_reg[2]);


--C1_acq_data_out[3] is sld_signaltap:auto_signaltap_0|acq_data_out[3]
C1_acq_data_out[3] = OUTPUT(C1_acq_data_in_reg[3]);


--C1_acq_data_out[4] is sld_signaltap:auto_signaltap_0|acq_data_out[4]
C1_acq_data_out[4] = OUTPUT(C1_acq_data_in_reg[4]);


--C1_acq_data_out[5] is sld_signaltap:auto_signaltap_0|acq_data_out[5]
C1_acq_data_out[5] = OUTPUT(C1_acq_data_in_reg[5]);


--C1_acq_data_out[6] is sld_signaltap:auto_signaltap_0|acq_data_out[6]
C1_acq_data_out[6] = OUTPUT(C1_acq_data_in_reg[6]);


--C1_acq_data_out[7] is sld_signaltap:auto_signaltap_0|acq_data_out[7]
C1_acq_data_out[7] = OUTPUT(C1_acq_data_in_reg[7]);


--C1_acq_data_out[8] is sld_signaltap:auto_signaltap_0|acq_data_out[8]
C1_acq_data_out[8] = OUTPUT(C1_acq_data_in_reg[8]);


--C1_acq_data_out[9] is sld_signaltap:auto_signaltap_0|acq_data_out[9]
C1_acq_data_out[9] = OUTPUT(C1_acq_data_in_reg[9]);


--C1_acq_data_out[10] is sld_signaltap:auto_signaltap_0|acq_data_out[10]
C1_acq_data_out[10] = OUTPUT(C1_acq_data_in_reg[10]);


--C1_acq_data_out[11] is sld_signaltap:auto_signaltap_0|acq_data_out[11]
C1_acq_data_out[11] = OUTPUT(C1_acq_data_in_reg[11]);


--C1_acq_data_out[12] is sld_signaltap:auto_signaltap_0|acq_data_out[12]
C1_acq_data_out[12] = OUTPUT(C1_acq_data_in_reg[12]);


--C1_acq_data_out[13] is sld_signaltap:auto_signaltap_0|acq_data_out[13]
C1_acq_data_out[13] = OUTPUT(C1_acq_data_in_reg[13]);


--C1_acq_data_out[14] is sld_signaltap:auto_signaltap_0|acq_data_out[14]
C1_acq_data_out[14] = OUTPUT(C1_acq_data_in_reg[14]);


--C1_acq_data_out[15] is sld_signaltap:auto_signaltap_0|acq_data_out[15]
C1_acq_data_out[15] = OUTPUT(C1_acq_data_in_reg[15]);


--C1_acq_data_out[16] is sld_signaltap:auto_signaltap_0|acq_data_out[16]
C1_acq_data_out[16] = OUTPUT(C1_acq_data_in_reg[16]);


--C1_acq_data_out[17] is sld_signaltap:auto_signaltap_0|acq_data_out[17]
C1_acq_data_out[17] = OUTPUT(C1_acq_data_in_reg[17]);


--C1_acq_data_out[18] is sld_signaltap:auto_signaltap_0|acq_data_out[18]
C1_acq_data_out[18] = OUTPUT(C1_acq_data_in_reg[18]);


--C1_acq_data_out[19] is sld_signaltap:auto_signaltap_0|acq_data_out[19]
C1_acq_data_out[19] = OUTPUT(C1_acq_data_in_reg[19]);


--C1_acq_data_out[20] is sld_signaltap:auto_signaltap_0|acq_data_out[20]
C1_acq_data_out[20] = OUTPUT(C1_acq_data_in_reg[20]);


--C1_acq_data_out[21] is sld_signaltap:auto_signaltap_0|acq_data_out[21]
C1_acq_data_out[21] = OUTPUT(C1_acq_data_in_reg[21]);


--C1_acq_data_out[22] is sld_signaltap:auto_signaltap_0|acq_data_out[22]
C1_acq_data_out[22] = OUTPUT(C1_acq_data_in_reg[22]);


--C1_acq_data_out[23] is sld_signaltap:auto_signaltap_0|acq_data_out[23]
C1_acq_data_out[23] = OUTPUT(C1_acq_data_in_reg[23]);


--C1_acq_data_out[24] is sld_signaltap:auto_signaltap_0|acq_data_out[24]
C1_acq_data_out[24] = OUTPUT(C1_acq_data_in_reg[24]);


--C1_acq_data_out[25] is sld_signaltap:auto_signaltap_0|acq_data_out[25]
C1_acq_data_out[25] = OUTPUT(C1_acq_data_in_reg[25]);


--C1_acq_data_out[26] is sld_signaltap:auto_signaltap_0|acq_data_out[26]
C1_acq_data_out[26] = OUTPUT(C1_acq_data_in_reg[26]);


--C1_acq_data_out[27] is sld_signaltap:auto_signaltap_0|acq_data_out[27]
C1_acq_data_out[27] = OUTPUT(C1_acq_data_in_reg[27]);


--C1_acq_data_out[28] is sld_signaltap:auto_signaltap_0|acq_data_out[28]
C1_acq_data_out[28] = OUTPUT(C1_acq_data_in_reg[28]);


--C1_acq_data_out[29] is sld_signaltap:auto_signaltap_0|acq_data_out[29]
C1_acq_data_out[29] = OUTPUT(C1_acq_data_in_reg[29]);


--C1_acq_data_out[30] is sld_signaltap:auto_signaltap_0|acq_data_out[30]
C1_acq_data_out[30] = OUTPUT(C1_acq_data_in_reg[30]);


--C1_acq_data_out[31] is sld_signaltap:auto_signaltap_0|acq_data_out[31]
C1_acq_data_out[31] = OUTPUT(C1_acq_data_in_reg[31]);


--C1_acq_data_out[32] is sld_signaltap:auto_signaltap_0|acq_data_out[32]
C1_acq_data_out[32] = OUTPUT(C1_acq_data_in_reg[32]);


--C1_acq_data_out[33] is sld_signaltap:auto_signaltap_0|acq_data_out[33]
C1_acq_data_out[33] = OUTPUT(C1_acq_data_in_reg[33]);


--C1_acq_data_out[34] is sld_signaltap:auto_signaltap_0|acq_data_out[34]
C1_acq_data_out[34] = OUTPUT(C1_acq_data_in_reg[34]);


--C1_acq_data_out[35] is sld_signaltap:auto_signaltap_0|acq_data_out[35]
C1_acq_data_out[35] = OUTPUT(C1_acq_data_in_reg[35]);


--C1_acq_data_out[36] is sld_signaltap:auto_signaltap_0|acq_data_out[36]
C1_acq_data_out[36] = OUTPUT(C1_acq_data_in_reg[36]);


--C1_acq_data_out[37] is sld_signaltap:auto_signaltap_0|acq_data_out[37]
C1_acq_data_out[37] = OUTPUT(C1_acq_data_in_reg[37]);


--C1_acq_data_out[38] is sld_signaltap:auto_signaltap_0|acq_data_out[38]
C1_acq_data_out[38] = OUTPUT(C1_acq_data_in_reg[38]);


--C1_acq_data_out[39] is sld_signaltap:auto_signaltap_0|acq_data_out[39]
C1_acq_data_out[39] = OUTPUT(C1_acq_data_in_reg[39]);


--C1_acq_data_out[40] is sld_signaltap:auto_signaltap_0|acq_data_out[40]
C1_acq_data_out[40] = OUTPUT(C1_acq_data_in_reg[40]);


--C1_acq_data_out[41] is sld_signaltap:auto_signaltap_0|acq_data_out[41]
C1_acq_data_out[41] = OUTPUT(C1_acq_data_in_reg[41]);


--C1_acq_data_out[42] is sld_signaltap:auto_signaltap_0|acq_data_out[42]
C1_acq_data_out[42] = OUTPUT(C1_acq_data_in_reg[42]);


--C1_acq_data_out[43] is sld_signaltap:auto_signaltap_0|acq_data_out[43]
C1_acq_data_out[43] = OUTPUT(C1_acq_data_in_reg[43]);


--C1_acq_data_out[44] is sld_signaltap:auto_signaltap_0|acq_data_out[44]
C1_acq_data_out[44] = OUTPUT(C1_acq_data_in_reg[44]);


--C1_acq_data_out[45] is sld_signaltap:auto_signaltap_0|acq_data_out[45]
C1_acq_data_out[45] = OUTPUT(C1_acq_data_in_reg[45]);


--C1_acq_data_out[46] is sld_signaltap:auto_signaltap_0|acq_data_out[46]
C1_acq_data_out[46] = OUTPUT(C1_acq_data_in_reg[46]);


--C1_acq_data_out[47] is sld_signaltap:auto_signaltap_0|acq_data_out[47]
C1_acq_data_out[47] = OUTPUT(C1_acq_data_in_reg[47]);


--C1_acq_data_out[48] is sld_signaltap:auto_signaltap_0|acq_data_out[48]
C1_acq_data_out[48] = OUTPUT(C1_acq_data_in_reg[48]);


--C1_acq_data_out[49] is sld_signaltap:auto_signaltap_0|acq_data_out[49]
C1_acq_data_out[49] = OUTPUT(C1_acq_data_in_reg[49]);


--C1_acq_data_out[50] is sld_signaltap:auto_signaltap_0|acq_data_out[50]
C1_acq_data_out[50] = OUTPUT(C1_acq_data_in_reg[50]);


--C1_acq_data_out[51] is sld_signaltap:auto_signaltap_0|acq_data_out[51]
C1_acq_data_out[51] = OUTPUT(C1_acq_data_in_reg[51]);


--C1_acq_data_out[52] is sld_signaltap:auto_signaltap_0|acq_data_out[52]
C1_acq_data_out[52] = OUTPUT(C1_acq_data_in_reg[52]);


--C1_acq_data_out[53] is sld_signaltap:auto_signaltap_0|acq_data_out[53]
C1_acq_data_out[53] = OUTPUT(C1_acq_data_in_reg[53]);


--C1_acq_data_out[54] is sld_signaltap:auto_signaltap_0|acq_data_out[54]
C1_acq_data_out[54] = OUTPUT(C1_acq_data_in_reg[54]);


--C1_acq_data_out[55] is sld_signaltap:auto_signaltap_0|acq_data_out[55]
C1_acq_data_out[55] = OUTPUT(C1_acq_data_in_reg[55]);


--C1_acq_data_out[56] is sld_signaltap:auto_signaltap_0|acq_data_out[56]
C1_acq_data_out[56] = OUTPUT(C1_acq_data_in_reg[56]);


--C1_acq_data_out[57] is sld_signaltap:auto_signaltap_0|acq_data_out[57]
C1_acq_data_out[57] = OUTPUT(C1_acq_data_in_reg[57]);


--C1_acq_data_out[58] is sld_signaltap:auto_signaltap_0|acq_data_out[58]
C1_acq_data_out[58] = OUTPUT(C1_acq_data_in_reg[58]);


--C1_acq_data_out[59] is sld_signaltap:auto_signaltap_0|acq_data_out[59]
C1_acq_data_out[59] = OUTPUT(C1_acq_data_in_reg[59]);


--C1_acq_data_out[60] is sld_signaltap:auto_signaltap_0|acq_data_out[60]
C1_acq_data_out[60] = OUTPUT(C1_acq_data_in_reg[60]);


--C1_acq_data_out[61] is sld_signaltap:auto_signaltap_0|acq_data_out[61]
C1_acq_data_out[61] = OUTPUT(C1_acq_data_in_reg[61]);


--C1_acq_data_out[62] is sld_signaltap:auto_signaltap_0|acq_data_out[62]
C1_acq_data_out[62] = OUTPUT(C1_acq_data_in_reg[62]);


--C1_acq_data_out[63] is sld_signaltap:auto_signaltap_0|acq_data_out[63]
C1_acq_data_out[63] = OUTPUT(C1_acq_data_in_reg[63]);


--C1_acq_data_out[64] is sld_signaltap:auto_signaltap_0|acq_data_out[64]
C1_acq_data_out[64] = OUTPUT(C1_acq_data_in_reg[64]);


--C1_acq_data_out[65] is sld_signaltap:auto_signaltap_0|acq_data_out[65]
C1_acq_data_out[65] = OUTPUT(C1_acq_data_in_reg[65]);


--C1_acq_data_out[66] is sld_signaltap:auto_signaltap_0|acq_data_out[66]
C1_acq_data_out[66] = OUTPUT(C1_acq_data_in_reg[66]);


--C1_acq_data_out[67] is sld_signaltap:auto_signaltap_0|acq_data_out[67]
C1_acq_data_out[67] = OUTPUT(C1_acq_data_in_reg[67]);


--C1_acq_data_out[68] is sld_signaltap:auto_signaltap_0|acq_data_out[68]
C1_acq_data_out[68] = OUTPUT(C1_acq_data_in_reg[68]);


--C1_acq_data_out[69] is sld_signaltap:auto_signaltap_0|acq_data_out[69]
C1_acq_data_out[69] = OUTPUT(C1_acq_data_in_reg[69]);


--C1_acq_data_out[70] is sld_signaltap:auto_signaltap_0|acq_data_out[70]
C1_acq_data_out[70] = OUTPUT(C1_acq_data_in_reg[70]);


--C1_acq_data_out[71] is sld_signaltap:auto_signaltap_0|acq_data_out[71]
C1_acq_data_out[71] = OUTPUT(C1_acq_data_in_reg[71]);


--C1_acq_data_out[72] is sld_signaltap:auto_signaltap_0|acq_data_out[72]
C1_acq_data_out[72] = OUTPUT(C1_acq_data_in_reg[72]);


--C1_acq_data_out[73] is sld_signaltap:auto_signaltap_0|acq_data_out[73]
C1_acq_data_out[73] = OUTPUT(C1_acq_data_in_reg[73]);


--C1_acq_trigger_out[0] is sld_signaltap:auto_signaltap_0|acq_trigger_out[0]
C1_acq_trigger_out[0] = OUTPUT(C1_acq_trigger_in_reg[0]);


--C1_trigger_out is sld_signaltap:auto_signaltap_0|trigger_out
C1_trigger_out = OUTPUT(V1_trigger_out_ff);


--C1_ir_in[0] is sld_signaltap:auto_signaltap_0|ir_in[0]
C1_ir_in[0] = INPUT();


--C1_ir_in[1] is sld_signaltap:auto_signaltap_0|ir_in[1]
C1_ir_in[1] = INPUT();


--C1_ir_in[2] is sld_signaltap:auto_signaltap_0|ir_in[2]
C1_ir_in[2] = INPUT();


--C1_ir_in[3] is sld_signaltap:auto_signaltap_0|ir_in[3]
C1_ir_in[3] = INPUT();


--C1_ir_in[4] is sld_signaltap:auto_signaltap_0|ir_in[4]
C1_ir_in[4] = INPUT();


--C1_ir_in[5] is sld_signaltap:auto_signaltap_0|ir_in[5]
C1_ir_in[5] = INPUT();


--C1_ir_in[6] is sld_signaltap:auto_signaltap_0|ir_in[6]
C1_ir_in[6] = INPUT();


--C1_ir_in[7] is sld_signaltap:auto_signaltap_0|ir_in[7]
C1_ir_in[7] = INPUT();


--C1_ir_in[8] is sld_signaltap:auto_signaltap_0|ir_in[8]
C1_ir_in[8] = INPUT();


--C1_ir_in[9] is sld_signaltap:auto_signaltap_0|ir_in[9]
C1_ir_in[9] = INPUT();


--BB8_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[0]
--register power-up is low

BB8_dffs[0] = AMPP_FUNCTION(C1_raw_tck, BB8L1, V1L477);


--C1_jtag_state_cdr is sld_signaltap:auto_signaltap_0|jtag_state_cdr
C1_jtag_state_cdr = INPUT();


--C1_jtag_state_sdr is sld_signaltap:auto_signaltap_0|jtag_state_sdr
C1_jtag_state_sdr = INPUT();


--C1_usr1 is sld_signaltap:auto_signaltap_0|usr1
C1_usr1 = INPUT();


--C1_ena is sld_signaltap:auto_signaltap_0|ena
C1_ena = INPUT();


--V1L477 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|status_shift_enable~0
V1L477 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--V1_bypass_reg_out is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|bypass_reg_out
--register power-up is low

V1_bypass_reg_out = AMPP_FUNCTION(C1_raw_tck, V1L441, !V1_reset_all);


--V1L534 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~0
V1L534 = AMPP_FUNCTION(!C1_ir_in[4], !C1_ir_in[5]);


--V1L535 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~1
V1L535 = AMPP_FUNCTION(!BB8_dffs[0], !V1L477, !V1_bypass_reg_out, !V1L534);


--P1_WORD_SR[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[0]
--register power-up is low

P1_WORD_SR[0] = AMPP_FUNCTION(C1_raw_tck, P1L21, P1L15);


--V1L536 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~2
V1L536 = AMPP_FUNCTION(!C1_ir_in[4], !C1_ir_in[5], !P1_WORD_SR[0], !BB6_dffs[0]);


--V1L537 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~3
V1L537 = AMPP_FUNCTION(!C1_ir_in[3], !C1_ir_in[7], !C1_ir_in[8]);


--BB4_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[0]
--register power-up is low

BB4_dffs[0] = AMPP_FUNCTION(C1_raw_tck, BB4_dffs[1], !V1_reset_all, V1_trigger_setup_ena);


--V1L538 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~4
V1L538 = AMPP_FUNCTION(!C1_ir_in[3], !C1_ir_in[7], !C1_ir_in[8], !V1_tdo_crc_len_reg[0], !BB4_dffs[0], !BB7_dffs[0]);


--V1L539 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~5
V1L539 = AMPP_FUNCTION(!C1_ir_in[9], !V1_tdo_crc_val_shift_reg[0], !V1L535, !V1L536, !V1L537, !V1L538);


--C1_acq_data_in_reg[0] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[0]
--register power-up is low

C1_acq_data_in_reg[0] = DFFEAS(C1_acq_data_in[0], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[1] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[1]
--register power-up is low

C1_acq_data_in_reg[1] = DFFEAS(C1_acq_data_in[1], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[2] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[2]
--register power-up is low

C1_acq_data_in_reg[2] = DFFEAS(C1_acq_data_in[2], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[3] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[3]
--register power-up is low

C1_acq_data_in_reg[3] = DFFEAS(C1_acq_data_in[3], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[4] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[4]
--register power-up is low

C1_acq_data_in_reg[4] = DFFEAS(C1_acq_data_in[4], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[5] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[5]
--register power-up is low

C1_acq_data_in_reg[5] = DFFEAS(C1_acq_data_in[5], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[6] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[6]
--register power-up is low

C1_acq_data_in_reg[6] = DFFEAS(C1_acq_data_in[6], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[7] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[7]
--register power-up is low

C1_acq_data_in_reg[7] = DFFEAS(C1_acq_data_in[7], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[8] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[8]
--register power-up is low

C1_acq_data_in_reg[8] = DFFEAS(C1_acq_data_in[8], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[9] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[9]
--register power-up is low

C1_acq_data_in_reg[9] = DFFEAS(C1_acq_data_in[9], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[10] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[10]
--register power-up is low

C1_acq_data_in_reg[10] = DFFEAS(C1_acq_data_in[10], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[11] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[11]
--register power-up is low

C1_acq_data_in_reg[11] = DFFEAS(C1_acq_data_in[11], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[12] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[12]
--register power-up is low

C1_acq_data_in_reg[12] = DFFEAS(C1_acq_data_in[12], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[13] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[13]
--register power-up is low

C1_acq_data_in_reg[13] = DFFEAS(C1_acq_data_in[13], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[14] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[14]
--register power-up is low

C1_acq_data_in_reg[14] = DFFEAS(C1_acq_data_in[14], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[15] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[15]
--register power-up is low

C1_acq_data_in_reg[15] = DFFEAS(C1_acq_data_in[15], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[16] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[16]
--register power-up is low

C1_acq_data_in_reg[16] = DFFEAS(C1_acq_data_in[16], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[17] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[17]
--register power-up is low

C1_acq_data_in_reg[17] = DFFEAS(C1_acq_data_in[17], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[18] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[18]
--register power-up is low

C1_acq_data_in_reg[18] = DFFEAS(C1_acq_data_in[18], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[19] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[19]
--register power-up is low

C1_acq_data_in_reg[19] = DFFEAS(C1_acq_data_in[19], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[20] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[20]
--register power-up is low

C1_acq_data_in_reg[20] = DFFEAS(C1_acq_data_in[20], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[21] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[21]
--register power-up is low

C1_acq_data_in_reg[21] = DFFEAS(C1_acq_data_in[21], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[22] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[22]
--register power-up is low

C1_acq_data_in_reg[22] = DFFEAS(C1_acq_data_in[22], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[23] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[23]
--register power-up is low

C1_acq_data_in_reg[23] = DFFEAS(C1_acq_data_in[23], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[24] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[24]
--register power-up is low

C1_acq_data_in_reg[24] = DFFEAS(C1_acq_data_in[24], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[25] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[25]
--register power-up is low

C1_acq_data_in_reg[25] = DFFEAS(C1_acq_data_in[25], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[26] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[26]
--register power-up is low

C1_acq_data_in_reg[26] = DFFEAS(C1_acq_data_in[26], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[27] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[27]
--register power-up is low

C1_acq_data_in_reg[27] = DFFEAS(C1_acq_data_in[27], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[28] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[28]
--register power-up is low

C1_acq_data_in_reg[28] = DFFEAS(C1_acq_data_in[28], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[29] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[29]
--register power-up is low

C1_acq_data_in_reg[29] = DFFEAS(C1_acq_data_in[29], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[30] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[30]
--register power-up is low

C1_acq_data_in_reg[30] = DFFEAS(C1_acq_data_in[30], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[31] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[31]
--register power-up is low

C1_acq_data_in_reg[31] = DFFEAS(C1_acq_data_in[31], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[32] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[32]
--register power-up is low

C1_acq_data_in_reg[32] = DFFEAS(C1_acq_data_in[32], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[33] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[33]
--register power-up is low

C1_acq_data_in_reg[33] = DFFEAS(C1_acq_data_in[33], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[34] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[34]
--register power-up is low

C1_acq_data_in_reg[34] = DFFEAS(C1_acq_data_in[34], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[35] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[35]
--register power-up is low

C1_acq_data_in_reg[35] = DFFEAS(C1_acq_data_in[35], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[36] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[36]
--register power-up is low

C1_acq_data_in_reg[36] = DFFEAS(C1_acq_data_in[36], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[37] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[37]
--register power-up is low

C1_acq_data_in_reg[37] = DFFEAS(C1_acq_data_in[37], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[38] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[38]
--register power-up is low

C1_acq_data_in_reg[38] = DFFEAS(C1_acq_data_in[38], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[39] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[39]
--register power-up is low

C1_acq_data_in_reg[39] = DFFEAS(C1_acq_data_in[39], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[40] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[40]
--register power-up is low

C1_acq_data_in_reg[40] = DFFEAS(C1_acq_data_in[40], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[41] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[41]
--register power-up is low

C1_acq_data_in_reg[41] = DFFEAS(C1_acq_data_in[41], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[42] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[42]
--register power-up is low

C1_acq_data_in_reg[42] = DFFEAS(C1_acq_data_in[42], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[43] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[43]
--register power-up is low

C1_acq_data_in_reg[43] = DFFEAS(C1_acq_data_in[43], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[44] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[44]
--register power-up is low

C1_acq_data_in_reg[44] = DFFEAS(C1_acq_data_in[44], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[45] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[45]
--register power-up is low

C1_acq_data_in_reg[45] = DFFEAS(C1_acq_data_in[45], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[46] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[46]
--register power-up is low

C1_acq_data_in_reg[46] = DFFEAS(C1_acq_data_in[46], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[47] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[47]
--register power-up is low

C1_acq_data_in_reg[47] = DFFEAS(C1_acq_data_in[47], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[48] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[48]
--register power-up is low

C1_acq_data_in_reg[48] = DFFEAS(C1_acq_data_in[48], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[49] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[49]
--register power-up is low

C1_acq_data_in_reg[49] = DFFEAS(C1_acq_data_in[49], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[50] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[50]
--register power-up is low

C1_acq_data_in_reg[50] = DFFEAS(C1_acq_data_in[50], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[51] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[51]
--register power-up is low

C1_acq_data_in_reg[51] = DFFEAS(C1_acq_data_in[51], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[52] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[52]
--register power-up is low

C1_acq_data_in_reg[52] = DFFEAS(C1_acq_data_in[52], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[53] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[53]
--register power-up is low

C1_acq_data_in_reg[53] = DFFEAS(C1_acq_data_in[53], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[54] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[54]
--register power-up is low

C1_acq_data_in_reg[54] = DFFEAS(C1_acq_data_in[54], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[55] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[55]
--register power-up is low

C1_acq_data_in_reg[55] = DFFEAS(C1_acq_data_in[55], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[56] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[56]
--register power-up is low

C1_acq_data_in_reg[56] = DFFEAS(C1_acq_data_in[56], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[57] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[57]
--register power-up is low

C1_acq_data_in_reg[57] = DFFEAS(C1_acq_data_in[57], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[58] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[58]
--register power-up is low

C1_acq_data_in_reg[58] = DFFEAS(C1_acq_data_in[58], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[59] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[59]
--register power-up is low

C1_acq_data_in_reg[59] = DFFEAS(C1_acq_data_in[59], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[60] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[60]
--register power-up is low

C1_acq_data_in_reg[60] = DFFEAS(C1_acq_data_in[60], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[61] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[61]
--register power-up is low

C1_acq_data_in_reg[61] = DFFEAS(C1_acq_data_in[61], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[62] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[62]
--register power-up is low

C1_acq_data_in_reg[62] = DFFEAS(C1_acq_data_in[62], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[63] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[63]
--register power-up is low

C1_acq_data_in_reg[63] = DFFEAS(C1_acq_data_in[63], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[64] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[64]
--register power-up is low

C1_acq_data_in_reg[64] = DFFEAS(C1_acq_data_in[64], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[65] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[65]
--register power-up is low

C1_acq_data_in_reg[65] = DFFEAS(C1_acq_data_in[65], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[66] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[66]
--register power-up is low

C1_acq_data_in_reg[66] = DFFEAS(C1_acq_data_in[66], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[67] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[67]
--register power-up is low

C1_acq_data_in_reg[67] = DFFEAS(C1_acq_data_in[67], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[68] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[68]
--register power-up is low

C1_acq_data_in_reg[68] = DFFEAS(C1_acq_data_in[68], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[69] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[69]
--register power-up is low

C1_acq_data_in_reg[69] = DFFEAS(C1_acq_data_in[69], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[70] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[70]
--register power-up is low

C1_acq_data_in_reg[70] = DFFEAS(C1_acq_data_in[70], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[71] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[71]
--register power-up is low

C1_acq_data_in_reg[71] = DFFEAS(C1_acq_data_in[71], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[72] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[72]
--register power-up is low

C1_acq_data_in_reg[72] = DFFEAS(C1_acq_data_in[72], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[73] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[73]
--register power-up is low

C1_acq_data_in_reg[73] = DFFEAS(C1_acq_data_in[73], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_trigger_in_reg[0] is sld_signaltap:auto_signaltap_0|acq_trigger_in_reg[0]
--register power-up is low

C1_acq_trigger_in_reg[0] = DFFEAS(C1_acq_trigger_in[0], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--V1_trigger_out_ff is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|trigger_out_ff
--register power-up is low

V1_trigger_out_ff = AMPP_FUNCTION(C1_acq_clk, V1L542);


--C1_raw_tck is sld_signaltap:auto_signaltap_0|raw_tck
C1_raw_tck = INPUT();


--V1L442 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|cdr~0
V1L442 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_usr1, !C1_ena);


--V1L515 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[0]~0
V1L515 = AMPP_FUNCTION(!C1_ir_in[9], !C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--CB1_\buffer_manager:collecting_post_data_var is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:collecting_post_data_var
--register power-up is low

CB1_\buffer_manager:collecting_post_data_var = AMPP_FUNCTION(C1_acq_clk, CB1L123, !V1_reset_all, V1_collect_data);


--V1_run is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|run
--register power-up is low

V1_run = AMPP_FUNCTION(C1_acq_clk, C1_ir_in[1]);


--V1L476 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|status_load_on~0
V1L476 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena);


--BB8_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[1]
--register power-up is low

BB8_dffs[1] = AMPP_FUNCTION(C1_raw_tck, BB8L2, V1L477);


--BB8L1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~0
BB8L1 = AMPP_FUNCTION(!CB1_\buffer_manager:collecting_post_data_var, !V1_run, !V1L476, !BB8_dffs[1]);


--C1_tdi is sld_signaltap:auto_signaltap_0|tdi
C1_tdi = INPUT();


--V1L441 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|bypass_reg_out~0
V1L441 = AMPP_FUNCTION(!C1_ena, !V1_bypass_reg_out, !C1_tdi);


--V1_reset_all is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|reset_all
--register power-up is low

V1_reset_all = AMPP_FUNCTION(C1_raw_tck, V1L471);


--C1_crc[0] is sld_signaltap:auto_signaltap_0|crc[0]
C1_crc[0] = INPUT();


--C1_crc[4] is sld_signaltap:auto_signaltap_0|crc[4]
C1_crc[4] = INPUT();


--C1_crc[8] is sld_signaltap:auto_signaltap_0|crc[8]
C1_crc[8] = INPUT();


--C1_crc[12] is sld_signaltap:auto_signaltap_0|crc[12]
C1_crc[12] = INPUT();


--P1_word_counter[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter[0]
--register power-up is low

P1_word_counter[0] = AMPP_FUNCTION(C1_raw_tck, P1L7, !P1L6);


--P1_word_counter[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter[1]
--register power-up is low

P1_word_counter[1] = AMPP_FUNCTION(C1_raw_tck, P1L8, !P1L6);


--P1L19 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~0
P1L19 = AMPP_FUNCTION(!C1_crc[0], !C1_crc[4], !C1_crc[8], !C1_crc[12], !P1_word_counter[0], !P1_word_counter[1]);


--C1_jtag_state_udr is sld_signaltap:auto_signaltap_0|jtag_state_udr
C1_jtag_state_udr = INPUT();


--P1_word_counter[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter[2]
--register power-up is low

P1_word_counter[2] = AMPP_FUNCTION(C1_raw_tck, P1L9, !P1L6);


--P1_word_counter[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter[3]
--register power-up is low

P1_word_counter[3] = AMPP_FUNCTION(C1_raw_tck, P1L10, !P1L6);


--P1L13 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[0]~1
P1L13 = AMPP_FUNCTION(!C1_jtag_state_sdr, !C1_usr1, !C1_jtag_state_udr, !P1_word_counter[2], !P1_word_counter[3]);


--P1L14 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[0]~2
P1L14 = AMPP_FUNCTION(!C1_jtag_state_sdr, !C1_usr1, !C1_jtag_state_udr, !P1_word_counter[2], !P1_word_counter[3]);


--P1_WORD_SR[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[1]
--register power-up is low

P1_WORD_SR[1] = AMPP_FUNCTION(C1_raw_tck, P1L24, P1L15);


--C1_crc[16] is sld_signaltap:auto_signaltap_0|crc[16]
C1_crc[16] = INPUT();


--C1_crc[20] is sld_signaltap:auto_signaltap_0|crc[20]
C1_crc[20] = INPUT();


--C1_crc[24] is sld_signaltap:auto_signaltap_0|crc[24]
C1_crc[24] = INPUT();


--C1_crc[28] is sld_signaltap:auto_signaltap_0|crc[28]
C1_crc[28] = INPUT();


--P1L20 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~3
P1L20 = AMPP_FUNCTION(!C1_crc[16], !C1_crc[20], !C1_crc[24], !C1_crc[28], !P1_word_counter[0], !P1_word_counter[1]);


--P1L21 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~4
P1L21 = AMPP_FUNCTION(!P1L19, !P1L13, !P1L14, !P1_WORD_SR[1], !P1L20);


--P1L15 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[0]~5
P1L15 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !C1_jtag_state_udr);


--CB1_is_buffer_wrapped_once_sig is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|is_buffer_wrapped_once_sig
--register power-up is low

CB1_is_buffer_wrapped_once_sig = AMPP_FUNCTION(C1_acq_clk, CB1L156, !V1_reset_all);


--V1_sdr is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sdr
V1_sdr = AMPP_FUNCTION(!C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--V1L468 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|process_0~0
V1L468 = AMPP_FUNCTION(!C1_ir_in[8], !C1_jtag_state_cdr, !C1_usr1, !C1_ena);


--V1L469 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|process_0~1
V1L469 = AMPP_FUNCTION(!C1_ir_in[8], !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--V1L461 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~0
V1L461 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[28], !V1_tdo_crc_len_reg[27]);


--V1L462 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~1
V1L462 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[0], !V1_tdo_crc_len_reg[8], !V1_tdo_crc_len_reg[23], !V1_tdo_crc_len_reg[31], !V1_tdo_crc_len_reg[30], !V1_tdo_crc_len_reg[29]);


--V1L463 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~2
V1L463 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[1], !V1_tdo_crc_len_reg[6], !V1_tdo_crc_len_reg[5], !V1_tdo_crc_len_reg[4], !V1_tdo_crc_len_reg[3], !V1_tdo_crc_len_reg[2]);


--V1L464 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~3
V1L464 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[13], !V1_tdo_crc_len_reg[12], !V1_tdo_crc_len_reg[11], !V1_tdo_crc_len_reg[10], !V1_tdo_crc_len_reg[9], !V1_tdo_crc_len_reg[7]);


--V1L465 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~4
V1L465 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[26], !V1_tdo_crc_len_reg[25], !V1_tdo_crc_len_reg[24], !V1_tdo_crc_len_reg[22], !V1_tdo_crc_len_reg[21], !V1_tdo_crc_len_reg[20]);


--V1L466 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~5
V1L466 = AMPP_FUNCTION(!V1_tdo_crc_len_reg[19], !V1_tdo_crc_len_reg[18], !V1_tdo_crc_len_reg[17], !V1_tdo_crc_len_reg[16], !V1_tdo_crc_len_reg[15], !V1_tdo_crc_len_reg[14]);


--V1L467 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~6
V1L467 = AMPP_FUNCTION(!V1L461, !V1L462, !V1L463, !V1L464, !V1L465, !V1L466);


--V1L506 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[26]~0
V1L506 = AMPP_FUNCTION(!C1_ir_in[8], !C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !V1L467);


--BB4_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[1]
--register power-up is low

BB4_dffs[1] = AMPP_FUNCTION(C1_raw_tck, BB4_dffs[2], !V1_reset_all, V1_trigger_setup_ena);


--V1_trigger_setup_ena is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|trigger_setup_ena
V1_trigger_setup_ena = AMPP_FUNCTION(!C1_ir_in[3], !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--W1L4 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|Equal3~0
W1L4 = AMPP_FUNCTION(!HB1_counter_reg_bit[4], !HB1_counter_reg_bit[3], !HB1_counter_reg_bit[2], !HB1_counter_reg_bit[1], !HB1_counter_reg_bit[0]);


--W1_status_ram_shift_load is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|status_ram_shift_load
W1_status_ram_shift_load = AMPP_FUNCTION(!C1_ir_in[7], !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !W1L4);


--C1_acq_data_in[0] is sld_signaltap:auto_signaltap_0|acq_data_in[0]
C1_acq_data_in[0] = INPUT();


--C1_acq_clk is sld_signaltap:auto_signaltap_0|acq_clk
C1_acq_clk = INPUT();


--C1_acq_data_in[1] is sld_signaltap:auto_signaltap_0|acq_data_in[1]
C1_acq_data_in[1] = INPUT();


--C1_acq_data_in[2] is sld_signaltap:auto_signaltap_0|acq_data_in[2]
C1_acq_data_in[2] = INPUT();


--C1_acq_data_in[3] is sld_signaltap:auto_signaltap_0|acq_data_in[3]
C1_acq_data_in[3] = INPUT();


--C1_acq_data_in[4] is sld_signaltap:auto_signaltap_0|acq_data_in[4]
C1_acq_data_in[4] = INPUT();


--C1_acq_data_in[5] is sld_signaltap:auto_signaltap_0|acq_data_in[5]
C1_acq_data_in[5] = INPUT();


--C1_acq_data_in[6] is sld_signaltap:auto_signaltap_0|acq_data_in[6]
C1_acq_data_in[6] = INPUT();


--C1_acq_data_in[7] is sld_signaltap:auto_signaltap_0|acq_data_in[7]
C1_acq_data_in[7] = INPUT();


--C1_acq_data_in[8] is sld_signaltap:auto_signaltap_0|acq_data_in[8]
C1_acq_data_in[8] = INPUT();


--C1_acq_data_in[9] is sld_signaltap:auto_signaltap_0|acq_data_in[9]
C1_acq_data_in[9] = INPUT();


--C1_acq_data_in[10] is sld_signaltap:auto_signaltap_0|acq_data_in[10]
C1_acq_data_in[10] = INPUT();


--C1_acq_data_in[11] is sld_signaltap:auto_signaltap_0|acq_data_in[11]
C1_acq_data_in[11] = INPUT();


--C1_acq_data_in[12] is sld_signaltap:auto_signaltap_0|acq_data_in[12]
C1_acq_data_in[12] = INPUT();


--C1_acq_data_in[13] is sld_signaltap:auto_signaltap_0|acq_data_in[13]
C1_acq_data_in[13] = INPUT();


--C1_acq_data_in[14] is sld_signaltap:auto_signaltap_0|acq_data_in[14]
C1_acq_data_in[14] = INPUT();


--C1_acq_data_in[15] is sld_signaltap:auto_signaltap_0|acq_data_in[15]
C1_acq_data_in[15] = INPUT();


--C1_acq_data_in[16] is sld_signaltap:auto_signaltap_0|acq_data_in[16]
C1_acq_data_in[16] = INPUT();


--C1_acq_data_in[17] is sld_signaltap:auto_signaltap_0|acq_data_in[17]
C1_acq_data_in[17] = INPUT();


--C1_acq_data_in[18] is sld_signaltap:auto_signaltap_0|acq_data_in[18]
C1_acq_data_in[18] = INPUT();


--C1_acq_data_in[19] is sld_signaltap:auto_signaltap_0|acq_data_in[19]
C1_acq_data_in[19] = INPUT();


--C1_acq_data_in[20] is sld_signaltap:auto_signaltap_0|acq_data_in[20]
C1_acq_data_in[20] = INPUT();


--C1_acq_data_in[21] is sld_signaltap:auto_signaltap_0|acq_data_in[21]
C1_acq_data_in[21] = INPUT();


--C1_acq_data_in[22] is sld_signaltap:auto_signaltap_0|acq_data_in[22]
C1_acq_data_in[22] = INPUT();


--C1_acq_data_in[23] is sld_signaltap:auto_signaltap_0|acq_data_in[23]
C1_acq_data_in[23] = INPUT();


--C1_acq_data_in[24] is sld_signaltap:auto_signaltap_0|acq_data_in[24]
C1_acq_data_in[24] = INPUT();


--C1_acq_data_in[25] is sld_signaltap:auto_signaltap_0|acq_data_in[25]
C1_acq_data_in[25] = INPUT();


--C1_acq_data_in[26] is sld_signaltap:auto_signaltap_0|acq_data_in[26]
C1_acq_data_in[26] = INPUT();


--C1_acq_data_in[27] is sld_signaltap:auto_signaltap_0|acq_data_in[27]
C1_acq_data_in[27] = INPUT();


--C1_acq_data_in[28] is sld_signaltap:auto_signaltap_0|acq_data_in[28]
C1_acq_data_in[28] = INPUT();


--C1_acq_data_in[29] is sld_signaltap:auto_signaltap_0|acq_data_in[29]
C1_acq_data_in[29] = INPUT();


--C1_acq_data_in[30] is sld_signaltap:auto_signaltap_0|acq_data_in[30]
C1_acq_data_in[30] = INPUT();


--C1_acq_data_in[31] is sld_signaltap:auto_signaltap_0|acq_data_in[31]
C1_acq_data_in[31] = INPUT();


--C1_acq_data_in[32] is sld_signaltap:auto_signaltap_0|acq_data_in[32]
C1_acq_data_in[32] = INPUT();


--C1_acq_data_in[33] is sld_signaltap:auto_signaltap_0|acq_data_in[33]
C1_acq_data_in[33] = INPUT();


--C1_acq_data_in[34] is sld_signaltap:auto_signaltap_0|acq_data_in[34]
C1_acq_data_in[34] = INPUT();


--C1_acq_data_in[35] is sld_signaltap:auto_signaltap_0|acq_data_in[35]
C1_acq_data_in[35] = INPUT();


--C1_acq_data_in[36] is sld_signaltap:auto_signaltap_0|acq_data_in[36]
C1_acq_data_in[36] = INPUT();


--C1_acq_data_in[37] is sld_signaltap:auto_signaltap_0|acq_data_in[37]
C1_acq_data_in[37] = INPUT();


--C1_acq_data_in[38] is sld_signaltap:auto_signaltap_0|acq_data_in[38]
C1_acq_data_in[38] = INPUT();


--C1_acq_data_in[39] is sld_signaltap:auto_signaltap_0|acq_data_in[39]
C1_acq_data_in[39] = INPUT();


--C1_acq_data_in[40] is sld_signaltap:auto_signaltap_0|acq_data_in[40]
C1_acq_data_in[40] = INPUT();


--C1_acq_data_in[41] is sld_signaltap:auto_signaltap_0|acq_data_in[41]
C1_acq_data_in[41] = INPUT();


--C1_acq_data_in[42] is sld_signaltap:auto_signaltap_0|acq_data_in[42]
C1_acq_data_in[42] = INPUT();


--C1_acq_data_in[43] is sld_signaltap:auto_signaltap_0|acq_data_in[43]
C1_acq_data_in[43] = INPUT();


--C1_acq_data_in[44] is sld_signaltap:auto_signaltap_0|acq_data_in[44]
C1_acq_data_in[44] = INPUT();


--C1_acq_data_in[45] is sld_signaltap:auto_signaltap_0|acq_data_in[45]
C1_acq_data_in[45] = INPUT();


--C1_acq_data_in[46] is sld_signaltap:auto_signaltap_0|acq_data_in[46]
C1_acq_data_in[46] = INPUT();


--C1_acq_data_in[47] is sld_signaltap:auto_signaltap_0|acq_data_in[47]
C1_acq_data_in[47] = INPUT();


--C1_acq_data_in[48] is sld_signaltap:auto_signaltap_0|acq_data_in[48]
C1_acq_data_in[48] = INPUT();


--C1_acq_data_in[49] is sld_signaltap:auto_signaltap_0|acq_data_in[49]
C1_acq_data_in[49] = INPUT();


--C1_acq_data_in[50] is sld_signaltap:auto_signaltap_0|acq_data_in[50]
C1_acq_data_in[50] = INPUT();


--C1_acq_data_in[51] is sld_signaltap:auto_signaltap_0|acq_data_in[51]
C1_acq_data_in[51] = INPUT();


--C1_acq_data_in[52] is sld_signaltap:auto_signaltap_0|acq_data_in[52]
C1_acq_data_in[52] = INPUT();


--C1_acq_data_in[53] is sld_signaltap:auto_signaltap_0|acq_data_in[53]
C1_acq_data_in[53] = INPUT();


--C1_acq_data_in[54] is sld_signaltap:auto_signaltap_0|acq_data_in[54]
C1_acq_data_in[54] = INPUT();


--C1_acq_data_in[55] is sld_signaltap:auto_signaltap_0|acq_data_in[55]
C1_acq_data_in[55] = INPUT();


--C1_acq_data_in[56] is sld_signaltap:auto_signaltap_0|acq_data_in[56]
C1_acq_data_in[56] = INPUT();


--C1_acq_data_in[57] is sld_signaltap:auto_signaltap_0|acq_data_in[57]
C1_acq_data_in[57] = INPUT();


--C1_acq_data_in[58] is sld_signaltap:auto_signaltap_0|acq_data_in[58]
C1_acq_data_in[58] = INPUT();


--C1_acq_data_in[59] is sld_signaltap:auto_signaltap_0|acq_data_in[59]
C1_acq_data_in[59] = INPUT();


--C1_acq_data_in[60] is sld_signaltap:auto_signaltap_0|acq_data_in[60]
C1_acq_data_in[60] = INPUT();


--C1_acq_data_in[61] is sld_signaltap:auto_signaltap_0|acq_data_in[61]
C1_acq_data_in[61] = INPUT();


--C1_acq_data_in[62] is sld_signaltap:auto_signaltap_0|acq_data_in[62]
C1_acq_data_in[62] = INPUT();


--C1_acq_data_in[63] is sld_signaltap:auto_signaltap_0|acq_data_in[63]
C1_acq_data_in[63] = INPUT();


--C1_acq_data_in[64] is sld_signaltap:auto_signaltap_0|acq_data_in[64]
C1_acq_data_in[64] = INPUT();


--C1_acq_data_in[65] is sld_signaltap:auto_signaltap_0|acq_data_in[65]
C1_acq_data_in[65] = INPUT();


--C1_acq_data_in[66] is sld_signaltap:auto_signaltap_0|acq_data_in[66]
C1_acq_data_in[66] = INPUT();


--C1_acq_data_in[67] is sld_signaltap:auto_signaltap_0|acq_data_in[67]
C1_acq_data_in[67] = INPUT();


--C1_acq_data_in[68] is sld_signaltap:auto_signaltap_0|acq_data_in[68]
C1_acq_data_in[68] = INPUT();


--C1_acq_data_in[69] is sld_signaltap:auto_signaltap_0|acq_data_in[69]
C1_acq_data_in[69] = INPUT();


--C1_acq_data_in[70] is sld_signaltap:auto_signaltap_0|acq_data_in[70]
C1_acq_data_in[70] = INPUT();


--C1_acq_data_in[71] is sld_signaltap:auto_signaltap_0|acq_data_in[71]
C1_acq_data_in[71] = INPUT();


--C1_acq_data_in[72] is sld_signaltap:auto_signaltap_0|acq_data_in[72]
C1_acq_data_in[72] = INPUT();


--C1_acq_data_in[73] is sld_signaltap:auto_signaltap_0|acq_data_in[73]
C1_acq_data_in[73] = INPUT();


--C1_acq_trigger_in[0] is sld_signaltap:auto_signaltap_0|acq_trigger_in[0]
C1_acq_trigger_in[0] = INPUT();


--V1_trigger_out_mode_ff is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|trigger_out_mode_ff
--register power-up is low

V1_trigger_out_mode_ff = AMPP_FUNCTION(C1_acq_clk, V1L544);


--CB1_\buffer_manager:is_buffer_wrapped is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:is_buffer_wrapped
--register power-up is low

CB1_\buffer_manager:is_buffer_wrapped = AMPP_FUNCTION(C1_acq_clk, CB1L159, !V1_reset_all, V1_collect_data);


--V1_buffer_write_enable_delayed is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_enable_delayed
--register power-up is low

V1_buffer_write_enable_delayed = AMPP_FUNCTION(C1_acq_clk, V1L439);


--CB1_\buffer_manager:done is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:done
--register power-up is low

CB1_\buffer_manager:done = AMPP_FUNCTION(C1_acq_clk, CB1L144, !V1_reset_all, V1_collect_data);


--V1L475 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|state_status[2]~0
V1L475 = AMPP_FUNCTION(!CB1_\buffer_manager:collecting_post_data_var, !V1_run, !CB1_\buffer_manager:is_buffer_wrapped, !V1_buffer_write_enable_delayed, !CB1_\buffer_manager:done);


--TB1_last_level_delayed is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|last_level_delayed
--register power-up is low

TB1_last_level_delayed = AMPP_FUNCTION(C1_acq_clk, TB1L2, !V1_reset_all);


--BB3_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[0]
--register power-up is low

BB3_dffs[0] = AMPP_FUNCTION(C1_raw_tck, BB3_dffs[1], !V1_reset_all, V1_trigger_setup_ena);


--V1L542 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|trigger_out_ff~0
V1L542 = AMPP_FUNCTION(!V1_trigger_out_ff, !V1_trigger_out_mode_ff, !V1L475, !TB1_last_level_delayed, !BB3_dffs[0]);


--V1L540 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~6
V1L540 = AMPP_FUNCTION(!BB8_dffs[0], !V1L477, !V1_bypass_reg_out, !V1L534, !V1L536, !V1L537);


--Z1L16 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr~0
Z1L16 = AMPP_FUNCTION(!C1_ir_in[9], !V1_tdo_crc_val_shift_reg[0], !V1L540, !V1L538, !Z1_lfsr[0], !Z1_lfsr[1]);


--V1_tdo_crc_val_calc_reset is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_calc_reset
V1_tdo_crc_val_calc_reset = AMPP_FUNCTION(!C1_ir_in[9], !C1_jtag_state_cdr, !C1_usr1, !C1_ena);


--Z1L9 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[6]~1
Z1L9 = AMPP_FUNCTION(!C1_ir_in[9], !C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !V1L467);


--CB1_final_trigger_set is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|final_trigger_set
--register power-up is low

CB1_final_trigger_set = AMPP_FUNCTION(C1_acq_clk, GND, !V1_reset_all, CB1L153);


--CB1_modified_post_count[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[6]
--register power-up is low

CB1_modified_post_count[6] = AMPP_FUNCTION(C1_acq_clk, CB1L183, !V1_reset_all, CB1L153);


--CB1_modified_post_count[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[7]
--register power-up is low

CB1_modified_post_count[7] = AMPP_FUNCTION(C1_acq_clk, CB1L185, !V1_reset_all, CB1L153);


--CB1_modified_post_count[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[8]
--register power-up is low

CB1_modified_post_count[8] = AMPP_FUNCTION(C1_acq_clk, CB1L187, !V1_reset_all, CB1L153);


--CB1L148 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal2~0
CB1L148 = AMPP_FUNCTION(!CB1_modified_post_count[6], !CB1_counter[6], !CB1_modified_post_count[7], !CB1_counter[7], !CB1_modified_post_count[8], !CB1_counter[8]);


--CB1_modified_post_count[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[0]
--register power-up is low

CB1_modified_post_count[0] = AMPP_FUNCTION(C1_acq_clk, BB4_dffs[0], !V1_reset_all, CB1L153);


--CB1_modified_post_count[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[1]
--register power-up is low

CB1_modified_post_count[1] = AMPP_FUNCTION(C1_acq_clk, CB1L173, !V1_reset_all, CB1L153);


--CB1_modified_post_count[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[2]
--register power-up is low

CB1_modified_post_count[2] = AMPP_FUNCTION(C1_acq_clk, CB1L175, !V1_reset_all, CB1L153);


--CB1L149 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal2~1
CB1L149 = AMPP_FUNCTION(!CB1_modified_post_count[0], !CB1_counter[0], !CB1_modified_post_count[1], !CB1_counter[1], !CB1_modified_post_count[2], !CB1_counter[2]);


--CB1_modified_post_count[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[3]
--register power-up is low

CB1_modified_post_count[3] = AMPP_FUNCTION(C1_acq_clk, CB1L177, !V1_reset_all, CB1L153);


--CB1_modified_post_count[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[4]
--register power-up is low

CB1_modified_post_count[4] = AMPP_FUNCTION(C1_acq_clk, CB1L179, !V1_reset_all, CB1L153);


--CB1_modified_post_count[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[5]
--register power-up is low

CB1_modified_post_count[5] = AMPP_FUNCTION(C1_acq_clk, CB1L181, !V1_reset_all, CB1L153);


--CB1L150 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal2~2
CB1L150 = AMPP_FUNCTION(!CB1_modified_post_count[3], !CB1_counter[3], !CB1_modified_post_count[4], !CB1_counter[4], !CB1_modified_post_count[5], !CB1_counter[5]);


--CB1L145 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal0~0
CB1L145 = AMPP_FUNCTION(!CB1_counter[3], !CB1_counter[4], !CB1_counter[5], !CB1_counter[6], !CB1_counter[7], !CB1_counter[8]);


--CB1L146 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal0~1
CB1L146 = AMPP_FUNCTION(!CB1_counter[0], !CB1_counter[1], !CB1_counter[2]);


--CB1L147 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal0~2
CB1L147 = AMPP_FUNCTION(!CB1L145, !CB1L146);


--CB1L123 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|collecting_post_data_var~0
CB1L123 = AMPP_FUNCTION(!CB1_\buffer_manager:done, !CB1_final_trigger_set, !CB1L148, !CB1L149, !CB1L150, !CB1L147);


--V1_condition_delay_reg[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|condition_delay_reg[3]
--register power-up is low

V1_condition_delay_reg[3] = AMPP_FUNCTION(C1_acq_clk, V1_condition_delay_reg[2]);


--V1_collect_data is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|collect_data
V1_collect_data = AMPP_FUNCTION(!V1_run, !V1_condition_delay_reg[3]);


--BB8_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[2]
--register power-up is low

BB8_dffs[2] = AMPP_FUNCTION(C1_raw_tck, BB8L3, V1L477);


--BB8L2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~1
BB8L2 = AMPP_FUNCTION(!V1_run, !V1L476, !V1_buffer_write_enable_delayed, !CB1_\buffer_manager:done, !BB8_dffs[2]);


--C1_clr is sld_signaltap:auto_signaltap_0|clr
C1_clr = INPUT();


--V1L471 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|reset_all~0
V1L471 = AMPP_FUNCTION(!C1_ir_in[0], !C1_clr);


--P1L7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter~0
P1L7 = AMPP_FUNCTION(!C1_usr1, !P1_word_counter[0], !P1_word_counter[1], !C1_jtag_state_udr, !P1_word_counter[2], !P1_word_counter[3]);


--P1L6 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter[3]~1
P1L6 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !C1_jtag_state_udr);


--P1L8 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter~2
P1L8 = AMPP_FUNCTION(!C1_usr1, !P1_word_counter[0], !P1_word_counter[1], !C1_jtag_state_udr);


--P1L9 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter~3
P1L9 = AMPP_FUNCTION(!C1_usr1, !P1_word_counter[0], !P1_word_counter[1], !C1_jtag_state_udr, !P1_word_counter[2]);


--P1L10 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter~4
P1L10 = AMPP_FUNCTION(!C1_usr1, !P1_word_counter[0], !P1_word_counter[1], !C1_jtag_state_udr, !P1_word_counter[2], !P1_word_counter[3]);


--C1_crc[1] is sld_signaltap:auto_signaltap_0|crc[1]
C1_crc[1] = INPUT();


--C1_crc[5] is sld_signaltap:auto_signaltap_0|crc[5]
C1_crc[5] = INPUT();


--C1_crc[9] is sld_signaltap:auto_signaltap_0|crc[9]
C1_crc[9] = INPUT();


--C1_crc[13] is sld_signaltap:auto_signaltap_0|crc[13]
C1_crc[13] = INPUT();


--P1L22 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~6
P1L22 = AMPP_FUNCTION(!C1_crc[1], !C1_crc[5], !C1_crc[9], !C1_crc[13], !P1_word_counter[0], !P1_word_counter[1]);


--P1_WORD_SR[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[2]
--register power-up is low

P1_WORD_SR[2] = AMPP_FUNCTION(C1_raw_tck, P1L27, P1L15);


--C1_crc[17] is sld_signaltap:auto_signaltap_0|crc[17]
C1_crc[17] = INPUT();


--C1_crc[21] is sld_signaltap:auto_signaltap_0|crc[21]
C1_crc[21] = INPUT();


--C1_crc[25] is sld_signaltap:auto_signaltap_0|crc[25]
C1_crc[25] = INPUT();


--C1_crc[29] is sld_signaltap:auto_signaltap_0|crc[29]
C1_crc[29] = INPUT();


--P1L23 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~7
P1L23 = AMPP_FUNCTION(!C1_crc[17], !C1_crc[21], !C1_crc[25], !C1_crc[29], !P1_word_counter[0], !P1_word_counter[1]);


--P1L24 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~8
P1L24 = AMPP_FUNCTION(!P1L13, !P1L14, !P1L22, !P1_WORD_SR[2], !P1L23);


--CB1L151 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal2~3
CB1L151 = AMPP_FUNCTION(!CB1L148, !CB1L149, !CB1L150);


--CB1_\buffer_manager:base_address[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:base_address[0]
--register power-up is low

CB1_\buffer_manager:base_address[0] = AMPP_FUNCTION(C1_acq_clk, CB1L122, !V1_reset_all, V1_collect_data);


--CB1L188 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|process_0~0
CB1L188 = AMPP_FUNCTION(!TB1_last_level_delayed, !BB3_dffs[0], !CB1_final_trigger_set, !CB1L145, !CB1L146);


--CB1L155 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|is_buffer_wrapped_once_sig~0
CB1L155 = AMPP_FUNCTION(!CB1_\buffer_manager:done, !V1_collect_data, !CB1_final_trigger_set, !CB1L148, !CB1L149, !CB1L150);


--CB1L156 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|is_buffer_wrapped_once_sig~1
CB1L156 = AMPP_FUNCTION(!CB1_is_buffer_wrapped_once_sig, !CB1_final_trigger_set, !CB1L151, !CB1_\buffer_manager:base_address[0], !CB1L188, !CB1L155);


--BB4_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[2]
--register power-up is low

BB4_dffs[2] = AMPP_FUNCTION(C1_raw_tck, BB4_dffs[3], !V1_reset_all, V1_trigger_setup_ena);


--X1_cells[1][0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][0]
--register power-up is low

X1_cells[1][0] = AMPP_FUNCTION(C1_acq_clk, V1_segment_wrapped_delayed, QB1L2);


--X1_cells[0][0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][0]
--register power-up is low

X1_cells[0][0] = AMPP_FUNCTION(C1_acq_clk, V1_segment_wrapped_delayed, QB1L1);


--X1_xraddr[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xraddr[0]
--register power-up is low

X1_xraddr[0] = AMPP_FUNCTION(C1_raw_tck, KB1_counter_reg_bit[0], C1_ir_in[7]);


--W1_status_offload_shift_ena is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|status_offload_shift_ena
W1_status_offload_shift_ena = AMPP_FUNCTION(!C1_ir_in[7], !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--HB1_cout_actual is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_39i:auto_generated|cout_actual
HB1_cout_actual = AMPP_FUNCTION(!W1L4, !HB1L19);


--BB1_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[0]
--register power-up is low

BB1_dffs[0] = AMPP_FUNCTION(C1_raw_tck, BB1_dffs[1], !V1_reset_all, V1_trigger_setup_ena);


--V1L544 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|trigger_out_mode_ff~0
V1L544 = AMPP_FUNCTION(!C1_ir_in[1], !V1_trigger_out_mode_ff, !BB1_dffs[0]);


--CB1L157 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|is_buffer_wrapped~0
CB1L157 = AMPP_FUNCTION(!CB1L55, !CB1L59, !CB1L63, !CB1L67, !CB1L71, !CB1L75);


--CB1L158 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|is_buffer_wrapped~1
CB1L158 = AMPP_FUNCTION(!CB1_final_trigger_set, !CB1L148, !CB1L149, !CB1L150, !CB1L79, !CB1L83);


--CB1L159 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|is_buffer_wrapped~2
CB1L159 = AMPP_FUNCTION(!CB1_\buffer_manager:is_buffer_wrapped, !CB1_final_trigger_set, !CB1L151, !CB1L188, !CB1L157, !CB1L158);


--CB1L144 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|done~0
CB1L144 = AMPP_FUNCTION(!CB1_\buffer_manager:done, !CB1_final_trigger_set, !CB1L148, !CB1L149, !CB1L150);


--AB1_run is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|run
--register power-up is low

AB1_run = AMPP_FUNCTION(C1_acq_clk, AB1L2, !V1_reset_all);


--VB1_regoutff is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|regoutff
--register power-up is low

VB1_regoutff = AMPP_FUNCTION(C1_acq_clk, VB1L2);


--TB1L2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|last_level_delayed~0
TB1L2 = AMPP_FUNCTION(!TB1_last_level_delayed, !AB1_run, !VB1_regoutff);


--BB3_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[1]
--register power-up is low

BB3_dffs[1] = AMPP_FUNCTION(C1_raw_tck, BB3_dffs[2], !V1_reset_all, V1_trigger_setup_ena);


--CB1L153 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|final_trigger_set~0
CB1L153 = AMPP_FUNCTION(!V1_run, !TB1_last_level_delayed, !BB3_dffs[0], !V1_condition_delay_reg[3], !CB1_final_trigger_set);


--CB1L135 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~0
CB1L135 = AMPP_FUNCTION(!TB1_last_level_delayed, !BB3_dffs[0], !CB1_final_trigger_set, !CB1L145, !CB1L146, !CB1L87);


--CB1L189 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|process_0~1
CB1L189 = AMPP_FUNCTION(!TB1_last_level_delayed, !BB3_dffs[0], !CB1_final_trigger_set);


--CB1L134 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[8]~1
CB1L134 = AMPP_FUNCTION(!CB1L148, !CB1L149, !CB1L150, !CB1L189, !CB1L145, !CB1L146);


--CB1L136 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~2
CB1L136 = AMPP_FUNCTION(!TB1_last_level_delayed, !BB3_dffs[0], !CB1_final_trigger_set, !CB1L145, !CB1L146, !CB1L91);


--CB1L137 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~3
CB1L137 = AMPP_FUNCTION(!TB1_last_level_delayed, !BB3_dffs[0], !CB1_final_trigger_set, !CB1L145, !CB1L146, !CB1L95);


--CB1L138 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~4
CB1L138 = AMPP_FUNCTION(!TB1_last_level_delayed, !BB3_dffs[0], !CB1_final_trigger_set, !CB1L145, !CB1L146, !CB1L99);


--CB1L139 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~5
CB1L139 = AMPP_FUNCTION(!TB1_last_level_delayed, !BB3_dffs[0], !CB1_final_trigger_set, !CB1L145, !CB1L146, !CB1L103);


--CB1L140 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~6
CB1L140 = AMPP_FUNCTION(!TB1_last_level_delayed, !BB3_dffs[0], !CB1_final_trigger_set, !CB1L145, !CB1L146, !CB1L107);


--CB1L141 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~7
CB1L141 = AMPP_FUNCTION(!TB1_last_level_delayed, !BB3_dffs[0], !CB1_final_trigger_set, !CB1L145, !CB1L146, !CB1L111);


--CB1L142 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~8
CB1L142 = AMPP_FUNCTION(!TB1_last_level_delayed, !BB3_dffs[0], !CB1_final_trigger_set, !CB1L145, !CB1L146, !CB1L115);


--CB1L143 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~9
CB1L143 = AMPP_FUNCTION(!TB1_last_level_delayed, !BB3_dffs[0], !CB1_final_trigger_set, !CB1L145, !CB1L146, !CB1L119);


--V1_condition_delay_reg[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|condition_delay_reg[2]
--register power-up is low

V1_condition_delay_reg[2] = AMPP_FUNCTION(C1_acq_clk, V1_condition_delay_reg[1]);


--BB8_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[3]
--register power-up is low

BB8_dffs[3] = AMPP_FUNCTION(C1_raw_tck, BB8L4, V1L477);


--BB8L3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~2
BB8L3 = AMPP_FUNCTION(!V1L476, !V1L475, !BB8_dffs[3]);


--C1_crc[2] is sld_signaltap:auto_signaltap_0|crc[2]
C1_crc[2] = INPUT();


--C1_crc[6] is sld_signaltap:auto_signaltap_0|crc[6]
C1_crc[6] = INPUT();


--C1_crc[10] is sld_signaltap:auto_signaltap_0|crc[10]
C1_crc[10] = INPUT();


--C1_crc[14] is sld_signaltap:auto_signaltap_0|crc[14]
C1_crc[14] = INPUT();


--P1L25 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~9
P1L25 = AMPP_FUNCTION(!C1_crc[2], !C1_crc[6], !C1_crc[10], !C1_crc[14], !P1_word_counter[0], !P1_word_counter[1]);


--P1_WORD_SR[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[3]
--register power-up is low

P1_WORD_SR[3] = AMPP_FUNCTION(C1_raw_tck, P1L30, P1L15);


--C1_crc[18] is sld_signaltap:auto_signaltap_0|crc[18]
C1_crc[18] = INPUT();


--C1_crc[22] is sld_signaltap:auto_signaltap_0|crc[22]
C1_crc[22] = INPUT();


--C1_crc[26] is sld_signaltap:auto_signaltap_0|crc[26]
C1_crc[26] = INPUT();


--C1_crc[30] is sld_signaltap:auto_signaltap_0|crc[30]
C1_crc[30] = INPUT();


--P1L26 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~10
P1L26 = AMPP_FUNCTION(!C1_crc[18], !C1_crc[22], !C1_crc[26], !C1_crc[30], !P1_word_counter[0], !P1_word_counter[1]);


--P1L27 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~11
P1L27 = AMPP_FUNCTION(!P1L13, !P1L14, !P1L25, !P1_WORD_SR[3], !P1L26);


--CB1L190 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|segment_shift_var~0
CB1L190 = AMPP_FUNCTION(!CB1_final_trigger_set, !CB1L148, !CB1L149, !CB1L150, !CB1L188);


--CB1L162 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[0]~0
CB1L162 = AMPP_FUNCTION(!V1_reset_all, !V1_run, !CB1_\buffer_manager:done, !V1_condition_delay_reg[3]);


--CB1L122 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|base_address~0
CB1L122 = AMPP_FUNCTION(!CB1_final_trigger_set, !CB1L148, !CB1L149, !CB1L150, !CB1_\buffer_manager:base_address[0], !CB1L188);


--BB4_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[3]
--register power-up is low

BB4_dffs[3] = AMPP_FUNCTION(C1_raw_tck, BB4_dffs[4], !V1_reset_all, V1_trigger_setup_ena);


--V1_segment_wrapped_delayed is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|segment_wrapped_delayed
--register power-up is low

V1_segment_wrapped_delayed = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:is_buffer_wrapped);


--V1_current_segment_delayed[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|current_segment_delayed[0]
--register power-up is low

V1_current_segment_delayed[0] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:base_address[0]);


--CB1_\buffer_manager:segment_shift_var is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:segment_shift_var
--register power-up is low

CB1_\buffer_manager:segment_shift_var = AMPP_FUNCTION(C1_acq_clk, CB1L190, !V1_reset_all, V1_collect_data);


--QB1L2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|lpm_decode:wdecoder|decode_vnf:auto_generated|eq_node[1]~0
QB1L2 = AMPP_FUNCTION(!C1_ir_in[2], !V1_buffer_write_enable_delayed, !V1_current_segment_delayed[0], !CB1_\buffer_manager:segment_shift_var);


--QB1L1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|lpm_decode:wdecoder|decode_vnf:auto_generated|eq_node[0]~1
QB1L1 = AMPP_FUNCTION(!C1_ir_in[2], !V1_buffer_write_enable_delayed, !V1_current_segment_delayed[0], !CB1_\buffer_manager:segment_shift_var);


--X1_cells[1][1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][1]
--register power-up is low

X1_cells[1][1] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[0], QB1L2);


--X1_cells[0][1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][1]
--register power-up is low

X1_cells[0][1] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[0], QB1L1);


--BB1_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[1]
--register power-up is low

BB1_dffs[1] = AMPP_FUNCTION(C1_raw_tck, BB1_dffs[2], !V1_reset_all, V1_trigger_setup_ena);


--AB1L2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|run~0
AB1L2 = AMPP_FUNCTION(!C1_ir_in[1], !CB1_\buffer_manager:is_buffer_wrapped, !V1_condition_delay_reg[3]);


--BB2_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[1]
--register power-up is low

BB2_dffs[1] = AMPP_FUNCTION(C1_raw_tck, BB2_dffs[2], !V1_reset_all, V1_trigger_setup_ena);


--VB1_holdff is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|holdff
--register power-up is low

VB1_holdff = AMPP_FUNCTION(C1_acq_clk, C1_acq_trigger_in_reg[0]);


--BB2_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[0]
--register power-up is low

BB2_dffs[0] = AMPP_FUNCTION(C1_raw_tck, BB2_dffs[1], !V1_reset_all, V1_trigger_setup_ena);


--BB2_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[2]
--register power-up is low

BB2_dffs[2] = AMPP_FUNCTION(C1_raw_tck, C1_tdi, !V1_reset_all, V1_trigger_setup_ena);


--VB1L2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|p_match_out~0
VB1L2 = AMPP_FUNCTION(!C1_acq_trigger_in_reg[0], !BB2_dffs[1], !VB1_holdff, !BB2_dffs[0], !BB2_dffs[2]);


--BB3_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[2]
--register power-up is low

BB3_dffs[2] = AMPP_FUNCTION(C1_raw_tck, BB3_dffs[3], !V1_reset_all, V1_trigger_setup_ena);


--BB4_dffs[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[6]
--register power-up is low

BB4_dffs[6] = AMPP_FUNCTION(C1_raw_tck, BB4_dffs[7], !V1_reset_all, V1_trigger_setup_ena);


--BB4_dffs[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[7]
--register power-up is low

BB4_dffs[7] = AMPP_FUNCTION(C1_raw_tck, BB1_dffs[0], !V1_reset_all, V1_trigger_setup_ena);


--BB4_dffs[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[4]
--register power-up is low

BB4_dffs[4] = AMPP_FUNCTION(C1_raw_tck, BB4_dffs[5], !V1_reset_all, V1_trigger_setup_ena);


--BB4_dffs[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[5]
--register power-up is low

BB4_dffs[5] = AMPP_FUNCTION(C1_raw_tck, BB4_dffs[6], !V1_reset_all, V1_trigger_setup_ena);


--V1_condition_delay_reg[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|condition_delay_reg[1]
--register power-up is low

V1_condition_delay_reg[1] = AMPP_FUNCTION(C1_acq_clk, V1_condition_delay_reg[0]);


--BB8_dffs[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[4]
--register power-up is low

BB8_dffs[4] = AMPP_FUNCTION(C1_raw_tck, BB8L5, V1L477);


--BB8L4 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~3
BB8L4 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !BB8_dffs[4]);


--C1_crc[3] is sld_signaltap:auto_signaltap_0|crc[3]
C1_crc[3] = INPUT();


--C1_crc[7] is sld_signaltap:auto_signaltap_0|crc[7]
C1_crc[7] = INPUT();


--C1_crc[11] is sld_signaltap:auto_signaltap_0|crc[11]
C1_crc[11] = INPUT();


--C1_crc[15] is sld_signaltap:auto_signaltap_0|crc[15]
C1_crc[15] = INPUT();


--P1L28 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~12
P1L28 = AMPP_FUNCTION(!C1_crc[3], !C1_crc[7], !C1_crc[11], !C1_crc[15], !P1_word_counter[0], !P1_word_counter[1]);


--C1_crc[19] is sld_signaltap:auto_signaltap_0|crc[19]
C1_crc[19] = INPUT();


--C1_crc[23] is sld_signaltap:auto_signaltap_0|crc[23]
C1_crc[23] = INPUT();


--C1_crc[27] is sld_signaltap:auto_signaltap_0|crc[27]
C1_crc[27] = INPUT();


--C1_crc[31] is sld_signaltap:auto_signaltap_0|crc[31]
C1_crc[31] = INPUT();


--P1L29 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~13
P1L29 = AMPP_FUNCTION(!C1_crc[19], !C1_crc[23], !C1_crc[27], !C1_crc[31], !P1_word_counter[0], !P1_word_counter[1]);


--P1L30 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~14
P1L30 = AMPP_FUNCTION(!P1L13, !P1L14, !C1_tdi, !P1L28, !P1L29);


--V1L449 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|crc_rom_sr_ena~0
V1L449 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--W1_status_buf_read_reset is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|status_buf_read_reset
W1_status_buf_read_reset = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[7], !V1L449, !V1_reset_all);


--KB1_cout_actual is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_read_pointer_counter|cntr_kri:auto_generated|cout_actual
KB1_cout_actual = AMPP_FUNCTION(!KB1_counter_reg_bit[0], !KB1L3);


--W1L3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|Equal2~0
W1L3 = AMPP_FUNCTION(!HB1_counter_reg_bit[4], !HB1_counter_reg_bit[3], !HB1_counter_reg_bit[2], !HB1_counter_reg_bit[1], !HB1_counter_reg_bit[0]);


--V1_last_trigger_address_delayed[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[0]
--register power-up is low

V1_last_trigger_address_delayed[0] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:last_trigger_address_var[0]);


--X1_cells[1][2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][2]
--register power-up is low

X1_cells[1][2] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[1], QB1L2);


--X1_cells[0][2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][2]
--register power-up is low

X1_cells[0][2] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[1], QB1L1);


--BB1_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[2]
--register power-up is low

BB1_dffs[2] = AMPP_FUNCTION(C1_raw_tck, BB1_dffs[3], !V1_reset_all, V1_trigger_setup_ena);


--BB3_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[3]
--register power-up is low

BB3_dffs[3] = AMPP_FUNCTION(C1_raw_tck, BB3_dffs[4], !V1_reset_all, V1_trigger_setup_ena);


--V1_condition_delay_reg[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|condition_delay_reg[0]
--register power-up is low

V1_condition_delay_reg[0] = AMPP_FUNCTION(C1_acq_clk, GND);


--BB8_dffs[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[5]
--register power-up is low

BB8_dffs[5] = AMPP_FUNCTION(C1_raw_tck, BB8L6, V1L477);


--BB8L5 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~4
BB8L5 = AMPP_FUNCTION(!V1L476, !V1_current_segment_delayed[0], !BB8_dffs[5]);


--V1_last_trigger_address_delayed[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[1]
--register power-up is low

V1_last_trigger_address_delayed[1] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:last_trigger_address_var[1]);


--X1_cells[1][3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][3]
--register power-up is low

X1_cells[1][3] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[2], QB1L2);


--X1_cells[0][3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][3]
--register power-up is low

X1_cells[0][3] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[2], QB1L1);


--BB1_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[3]
--register power-up is low

BB1_dffs[3] = AMPP_FUNCTION(C1_raw_tck, BB3_dffs[0], !V1_reset_all, V1_trigger_setup_ena);


--BB3_dffs[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[4]
--register power-up is low

BB3_dffs[4] = AMPP_FUNCTION(C1_raw_tck, BB3_dffs[5], !V1_reset_all, V1_trigger_setup_ena);


--BB8_dffs[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[6]
--register power-up is low

BB8_dffs[6] = AMPP_FUNCTION(C1_raw_tck, BB8L7, V1L477);


--BB8L6 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~5
BB8L6 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !BB8_dffs[6]);


--V1_last_trigger_address_delayed[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[2]
--register power-up is low

V1_last_trigger_address_delayed[2] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:last_trigger_address_var[2]);


--X1_cells[1][4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][4]
--register power-up is low

X1_cells[1][4] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[3], QB1L2);


--X1_cells[0][4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][4]
--register power-up is low

X1_cells[0][4] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[3], QB1L1);


--BB3_dffs[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[5]
--register power-up is low

BB3_dffs[5] = AMPP_FUNCTION(C1_raw_tck, BB3_dffs[6], !V1_reset_all, V1_trigger_setup_ena);


--Z1L17 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr~2
Z1L17 = AMPP_FUNCTION(!C1_ir_in[9], !V1_tdo_crc_val_shift_reg[0], !V1L540, !V1L538, !Z1_lfsr[0], !Z1_lfsr[6]);


--BB8_dffs[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[7]
--register power-up is low

BB8_dffs[7] = AMPP_FUNCTION(C1_raw_tck, BB8L8, V1L477);


--BB8L7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~6
BB8L7 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !BB8_dffs[7]);


--V1_last_trigger_address_delayed[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[3]
--register power-up is low

V1_last_trigger_address_delayed[3] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:last_trigger_address_var[3]);


--X1_cells[1][5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][5]
--register power-up is low

X1_cells[1][5] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[4], QB1L2);


--X1_cells[0][5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][5]
--register power-up is low

X1_cells[0][5] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[4], QB1L1);


--BB3_dffs[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[6]
--register power-up is low

BB3_dffs[6] = AMPP_FUNCTION(C1_raw_tck, BB3_dffs[7], !V1_reset_all, V1_trigger_setup_ena);


--BB8_dffs[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[8]
--register power-up is low

BB8_dffs[8] = AMPP_FUNCTION(C1_raw_tck, BB8L9, V1L477);


--BB8L8 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~7
BB8L8 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !BB8_dffs[8]);


--V1_last_trigger_address_delayed[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[4]
--register power-up is low

V1_last_trigger_address_delayed[4] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:last_trigger_address_var[4]);


--X1_cells[1][6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][6]
--register power-up is low

X1_cells[1][6] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[5], QB1L2);


--X1_cells[0][6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][6]
--register power-up is low

X1_cells[0][6] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[5], QB1L1);


--BB3_dffs[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[7]
--register power-up is low

BB3_dffs[7] = AMPP_FUNCTION(C1_raw_tck, BB3_dffs[8], !V1_reset_all, V1_trigger_setup_ena);


--BB8_dffs[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[9]
--register power-up is low

BB8_dffs[9] = AMPP_FUNCTION(C1_raw_tck, BB8L10, V1L477);


--BB8L9 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~8
BB8L9 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !BB8_dffs[9]);


--V1_last_trigger_address_delayed[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[5]
--register power-up is low

V1_last_trigger_address_delayed[5] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:last_trigger_address_var[5]);


--X1_cells[1][7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][7]
--register power-up is low

X1_cells[1][7] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[6], QB1L2);


--X1_cells[0][7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][7]
--register power-up is low

X1_cells[0][7] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[6], QB1L1);


--BB3_dffs[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[8]
--register power-up is low

BB3_dffs[8] = AMPP_FUNCTION(C1_raw_tck, BB3_dffs[9], !V1_reset_all, V1_trigger_setup_ena);


--BB8_dffs[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[10]
--register power-up is low

BB8_dffs[10] = AMPP_FUNCTION(C1_raw_tck, BB8L11, V1L477);


--BB8L10 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~9
BB8L10 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !BB8_dffs[10]);


--V1_last_trigger_address_delayed[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[6]
--register power-up is low

V1_last_trigger_address_delayed[6] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:last_trigger_address_var[6]);


--X1_cells[1][8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][8]
--register power-up is low

X1_cells[1][8] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[7], QB1L2);


--X1_cells[0][8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][8]
--register power-up is low

X1_cells[0][8] = AMPP_FUNCTION(C1_acq_clk, V1_last_trigger_address_delayed[7], QB1L1);


--BB3_dffs[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[9]
--register power-up is low

BB3_dffs[9] = AMPP_FUNCTION(C1_raw_tck, BB2_dffs[0], !V1_reset_all, V1_trigger_setup_ena);


--BB8_dffs[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[11]
--register power-up is low

BB8_dffs[11] = AMPP_FUNCTION(C1_raw_tck, BB8L12, V1L477);


--BB8L11 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~10
BB8L11 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !BB8_dffs[11]);


--V1_last_trigger_address_delayed[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[7]
--register power-up is low

V1_last_trigger_address_delayed[7] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:last_trigger_address_var[7]);


--X1_cells[1][9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][9]
--register power-up is low

X1_cells[1][9] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[0], QB1L2);


--X1_cells[0][9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][9]
--register power-up is low

X1_cells[0][9] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[0], QB1L1);


--BB8_dffs[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[12]
--register power-up is low

BB8_dffs[12] = AMPP_FUNCTION(C1_raw_tck, BB8L13, V1L477);


--BB8L12 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~11
BB8L12 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !BB8_dffs[12]);


--V1_buffer_write_address_delayed[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[0]
--register power-up is low

V1_buffer_write_address_delayed[0] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:next_address[0]);


--X1_cells[1][10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][10]
--register power-up is low

X1_cells[1][10] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[1], QB1L2);


--X1_cells[0][10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][10]
--register power-up is low

X1_cells[0][10] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[1], QB1L1);


--V1_tdo_crc_val_shift_reg[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[13]
--register power-up is low

V1_tdo_crc_val_shift_reg[13] = AMPP_FUNCTION(C1_raw_tck, V1L531, V1L515);


--BB8_dffs[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[13]
--register power-up is low

BB8_dffs[13] = AMPP_FUNCTION(C1_raw_tck, BB8L14, V1L477);


--BB8L13 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~12
BB8L13 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !BB8_dffs[13]);


--V1_buffer_write_address_delayed[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[1]
--register power-up is low

V1_buffer_write_address_delayed[1] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:next_address[1]);


--X1_cells[1][11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][11]
--register power-up is low

X1_cells[1][11] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[2], QB1L2);


--X1_cells[0][11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][11]
--register power-up is low

X1_cells[0][11] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[2], QB1L1);


--Z1L18 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr~3
Z1L18 = AMPP_FUNCTION(!C1_ir_in[9], !V1_tdo_crc_val_shift_reg[0], !V1L540, !V1L538, !Z1_lfsr[0]);


--V1_tdo_crc_val_shift_reg[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[14]
--register power-up is low

V1_tdo_crc_val_shift_reg[14] = AMPP_FUNCTION(C1_raw_tck, V1L532, V1L515);


--V1L531 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg~1
V1L531 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_usr1, !C1_ena, !V1_tdo_crc_val_shift_reg[14]);


--BB8_dffs[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[14]
--register power-up is low

BB8_dffs[14] = AMPP_FUNCTION(C1_raw_tck, BB8L15, V1L477);


--BB8L14 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~13
BB8L14 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !BB8_dffs[14]);


--V1_buffer_write_address_delayed[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[2]
--register power-up is low

V1_buffer_write_address_delayed[2] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:next_address[2]);


--X1_cells[1][12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][12]
--register power-up is low

X1_cells[1][12] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[3], QB1L2);


--X1_cells[0][12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][12]
--register power-up is low

X1_cells[0][12] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[3], QB1L1);


--V1_tdo_crc_val_shift_reg[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[15]
--register power-up is low

V1_tdo_crc_val_shift_reg[15] = AMPP_FUNCTION(C1_raw_tck, V1L533, V1L515);


--V1L532 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg~2
V1L532 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_usr1, !C1_ena, !V1_tdo_crc_val_shift_reg[15]);


--BB8_dffs[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[15]
--register power-up is low

BB8_dffs[15] = AMPP_FUNCTION(C1_raw_tck, BB8L16, V1L477);


--BB8L15 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~14
BB8L15 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !BB8_dffs[15]);


--V1_buffer_write_address_delayed[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[3]
--register power-up is low

V1_buffer_write_address_delayed[3] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:next_address[3]);


--X1_cells[1][13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][13]
--register power-up is low

X1_cells[1][13] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[4], QB1L2);


--X1_cells[0][13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][13]
--register power-up is low

X1_cells[0][13] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[4], QB1L1);


--V1L533 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg~3
V1L533 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_usr1, !C1_ena, !C1_tdi);


--BB8_dffs[16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[16]
--register power-up is low

BB8_dffs[16] = AMPP_FUNCTION(C1_raw_tck, BB8L17, V1L477);


--BB8L16 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~15
BB8L16 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !BB8_dffs[16]);


--V1_buffer_write_address_delayed[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[4]
--register power-up is low

V1_buffer_write_address_delayed[4] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:next_address[4]);


--X1_cells[1][14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][14]
--register power-up is low

X1_cells[1][14] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[5], QB1L2);


--X1_cells[0][14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][14]
--register power-up is low

X1_cells[0][14] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[5], QB1L1);


--BB7_dffs[16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[16]
--register power-up is low

BB7_dffs[16] = AMPP_FUNCTION(C1_raw_tck, BB7L1, !V1_reset_all);


--BB8L17 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~16
BB8L17 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !C1_tdi);


--V1_buffer_write_address_delayed[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[5]
--register power-up is low

V1_buffer_write_address_delayed[5] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:next_address[5]);


--X1_cells[1][15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][15]
--register power-up is low

X1_cells[1][15] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[6], QB1L2);


--X1_cells[0][15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][15]
--register power-up is low

X1_cells[0][15] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[6], QB1L1);


--BB7L1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|_~0
BB7L1 = AMPP_FUNCTION(!C1_ir_in[7], !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !W1L4, !X1_xq[16]);


--W1L2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|Equal0~0
W1L2 = AMPP_FUNCTION(!EB1_counter_reg_bit[6], !EB1_counter_reg_bit[5], !EB1_counter_reg_bit[4], !EB1_counter_reg_bit[3], !EB1_counter_reg_bit[2], !EB1_counter_reg_bit[1]);


--W1_ram_shift_load is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|ram_shift_load
W1_ram_shift_load = AMPP_FUNCTION(!C1_ir_in[4], !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !EB1_counter_reg_bit[0], !W1L2);


--V1_buffer_write_address_delayed[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[6]
--register power-up is low

V1_buffer_write_address_delayed[6] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:next_address[6]);


--X1_cells[1][16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][16]
--register power-up is low

X1_cells[1][16] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[7], QB1L2);


--X1_cells[0][16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][16]
--register power-up is low

X1_cells[0][16] = AMPP_FUNCTION(C1_acq_clk, V1_buffer_write_address_delayed[7], QB1L1);


--V1_acq_data_in_pipe_reg[3][0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][0]
--register power-up is low

V1_acq_data_in_pipe_reg[3][0] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][0]);


--V1_buffer_write_address_delayed[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[7]
--register power-up is low

V1_buffer_write_address_delayed[7] = AMPP_FUNCTION(C1_acq_clk, CB1_\buffer_manager:next_address[7]);


--W1_offload_shift_ena is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|offload_shift_ena
W1_offload_shift_ena = AMPP_FUNCTION(!C1_ir_in[4], !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--EB1_cout_actual is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_89i:auto_generated|cout_actual
EB1_cout_actual = AMPP_FUNCTION(!EB1_counter_reg_bit[0], !W1L2, !EB1L27);


--V1_acq_data_in_pipe_reg[2][0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][0]
--register power-up is low

V1_acq_data_in_pipe_reg[2][0] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][0]);


--W1_acq_buf_read_reset is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|acq_buf_read_reset
W1_acq_buf_read_reset = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[4], !V1L449, !V1_reset_all);


--W1_read_pointer_counter_clk_ena is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|read_pointer_counter_clk_ena
W1_read_pointer_counter_clk_ena = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[4], !V1L449, !V1_reset_all, !EB1_counter_reg_bit[0], !W1L2);


--V1_acq_data_in_pipe_reg[3][1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][1]
--register power-up is low

V1_acq_data_in_pipe_reg[3][1] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][1]);


--V1_acq_data_in_pipe_reg[1][0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][0]
--register power-up is low

V1_acq_data_in_pipe_reg[1][0] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][0]);


--V1_acq_data_in_pipe_reg[2][1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][1]
--register power-up is low

V1_acq_data_in_pipe_reg[2][1] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][1]);


--V1_acq_data_in_pipe_reg[3][2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][2]
--register power-up is low

V1_acq_data_in_pipe_reg[3][2] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][2]);


--V1_acq_data_in_pipe_reg[0][0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][0]
--register power-up is low

V1_acq_data_in_pipe_reg[0][0] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[0]);


--V1_acq_data_in_pipe_reg[1][1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][1]
--register power-up is low

V1_acq_data_in_pipe_reg[1][1] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][1]);


--V1_acq_data_in_pipe_reg[2][2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][2]
--register power-up is low

V1_acq_data_in_pipe_reg[2][2] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][2]);


--V1_acq_data_in_pipe_reg[3][3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][3]
--register power-up is low

V1_acq_data_in_pipe_reg[3][3] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][3]);


--V1_acq_data_in_pipe_reg[0][1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][1]
--register power-up is low

V1_acq_data_in_pipe_reg[0][1] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[1]);


--V1_acq_data_in_pipe_reg[1][2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][2]
--register power-up is low

V1_acq_data_in_pipe_reg[1][2] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][2]);


--V1_acq_data_in_pipe_reg[2][3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][3]
--register power-up is low

V1_acq_data_in_pipe_reg[2][3] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][3]);


--V1_acq_data_in_pipe_reg[3][4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][4]
--register power-up is low

V1_acq_data_in_pipe_reg[3][4] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][4]);


--V1_acq_data_in_pipe_reg[0][2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][2]
--register power-up is low

V1_acq_data_in_pipe_reg[0][2] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[2]);


--V1_acq_data_in_pipe_reg[1][3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][3]
--register power-up is low

V1_acq_data_in_pipe_reg[1][3] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][3]);


--V1_acq_data_in_pipe_reg[2][4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][4]
--register power-up is low

V1_acq_data_in_pipe_reg[2][4] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][4]);


--V1_acq_data_in_pipe_reg[3][5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][5]
--register power-up is low

V1_acq_data_in_pipe_reg[3][5] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][5]);


--V1_acq_data_in_pipe_reg[0][3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][3]
--register power-up is low

V1_acq_data_in_pipe_reg[0][3] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[3]);


--V1_acq_data_in_pipe_reg[1][4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][4]
--register power-up is low

V1_acq_data_in_pipe_reg[1][4] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][4]);


--V1_acq_data_in_pipe_reg[2][5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][5]
--register power-up is low

V1_acq_data_in_pipe_reg[2][5] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][5]);


--V1_acq_data_in_pipe_reg[3][6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][6]
--register power-up is low

V1_acq_data_in_pipe_reg[3][6] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][6]);


--V1_acq_data_in_pipe_reg[0][4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][4]
--register power-up is low

V1_acq_data_in_pipe_reg[0][4] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[4]);


--V1_acq_data_in_pipe_reg[1][5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][5]
--register power-up is low

V1_acq_data_in_pipe_reg[1][5] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][5]);


--V1_acq_data_in_pipe_reg[2][6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][6]
--register power-up is low

V1_acq_data_in_pipe_reg[2][6] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][6]);


--V1_acq_data_in_pipe_reg[3][7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][7]
--register power-up is low

V1_acq_data_in_pipe_reg[3][7] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][7]);


--V1_acq_data_in_pipe_reg[0][5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][5]
--register power-up is low

V1_acq_data_in_pipe_reg[0][5] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[5]);


--V1_acq_data_in_pipe_reg[1][6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][6]
--register power-up is low

V1_acq_data_in_pipe_reg[1][6] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][6]);


--V1_acq_data_in_pipe_reg[2][7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][7]
--register power-up is low

V1_acq_data_in_pipe_reg[2][7] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][7]);


--V1_acq_data_in_pipe_reg[3][8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][8]
--register power-up is low

V1_acq_data_in_pipe_reg[3][8] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][8]);


--V1_acq_data_in_pipe_reg[0][6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][6]
--register power-up is low

V1_acq_data_in_pipe_reg[0][6] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[6]);


--V1_acq_data_in_pipe_reg[1][7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][7]
--register power-up is low

V1_acq_data_in_pipe_reg[1][7] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][7]);


--V1_acq_data_in_pipe_reg[2][8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][8]
--register power-up is low

V1_acq_data_in_pipe_reg[2][8] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][8]);


--V1_acq_data_in_pipe_reg[3][9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][9]
--register power-up is low

V1_acq_data_in_pipe_reg[3][9] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][9]);


--V1_acq_data_in_pipe_reg[0][7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][7]
--register power-up is low

V1_acq_data_in_pipe_reg[0][7] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[7]);


--V1_acq_data_in_pipe_reg[1][8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][8]
--register power-up is low

V1_acq_data_in_pipe_reg[1][8] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][8]);


--V1_acq_data_in_pipe_reg[2][9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][9]
--register power-up is low

V1_acq_data_in_pipe_reg[2][9] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][9]);


--V1_acq_data_in_pipe_reg[3][10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][10]
--register power-up is low

V1_acq_data_in_pipe_reg[3][10] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][10]);


--V1_acq_data_in_pipe_reg[0][8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][8]
--register power-up is low

V1_acq_data_in_pipe_reg[0][8] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[8]);


--V1_acq_data_in_pipe_reg[1][9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][9]
--register power-up is low

V1_acq_data_in_pipe_reg[1][9] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][9]);


--V1_acq_data_in_pipe_reg[2][10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][10]
--register power-up is low

V1_acq_data_in_pipe_reg[2][10] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][10]);


--V1_acq_data_in_pipe_reg[3][11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][11]
--register power-up is low

V1_acq_data_in_pipe_reg[3][11] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][11]);


--V1_acq_data_in_pipe_reg[0][9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][9]
--register power-up is low

V1_acq_data_in_pipe_reg[0][9] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[9]);


--V1_acq_data_in_pipe_reg[1][10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][10]
--register power-up is low

V1_acq_data_in_pipe_reg[1][10] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][10]);


--V1_acq_data_in_pipe_reg[2][11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][11]
--register power-up is low

V1_acq_data_in_pipe_reg[2][11] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][11]);


--V1_acq_data_in_pipe_reg[3][12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][12]
--register power-up is low

V1_acq_data_in_pipe_reg[3][12] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][12]);


--V1_acq_data_in_pipe_reg[0][10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][10]
--register power-up is low

V1_acq_data_in_pipe_reg[0][10] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[10]);


--V1_acq_data_in_pipe_reg[1][11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][11]
--register power-up is low

V1_acq_data_in_pipe_reg[1][11] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][11]);


--V1_acq_data_in_pipe_reg[2][12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][12]
--register power-up is low

V1_acq_data_in_pipe_reg[2][12] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][12]);


--V1_acq_data_in_pipe_reg[3][13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][13]
--register power-up is low

V1_acq_data_in_pipe_reg[3][13] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][13]);


--V1_acq_data_in_pipe_reg[0][11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][11]
--register power-up is low

V1_acq_data_in_pipe_reg[0][11] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[11]);


--V1_acq_data_in_pipe_reg[1][12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][12]
--register power-up is low

V1_acq_data_in_pipe_reg[1][12] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][12]);


--V1_acq_data_in_pipe_reg[2][13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][13]
--register power-up is low

V1_acq_data_in_pipe_reg[2][13] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][13]);


--V1_acq_data_in_pipe_reg[3][14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][14]
--register power-up is low

V1_acq_data_in_pipe_reg[3][14] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][14]);


--V1_acq_data_in_pipe_reg[0][12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][12]
--register power-up is low

V1_acq_data_in_pipe_reg[0][12] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[12]);


--V1_acq_data_in_pipe_reg[1][13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][13]
--register power-up is low

V1_acq_data_in_pipe_reg[1][13] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][13]);


--V1_acq_data_in_pipe_reg[2][14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][14]
--register power-up is low

V1_acq_data_in_pipe_reg[2][14] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][14]);


--V1_acq_data_in_pipe_reg[3][15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][15]
--register power-up is low

V1_acq_data_in_pipe_reg[3][15] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][15]);


--V1_acq_data_in_pipe_reg[0][13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][13]
--register power-up is low

V1_acq_data_in_pipe_reg[0][13] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[13]);


--V1_acq_data_in_pipe_reg[1][14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][14]
--register power-up is low

V1_acq_data_in_pipe_reg[1][14] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][14]);


--V1_acq_data_in_pipe_reg[2][15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][15]
--register power-up is low

V1_acq_data_in_pipe_reg[2][15] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][15]);


--V1_acq_data_in_pipe_reg[3][16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][16]
--register power-up is low

V1_acq_data_in_pipe_reg[3][16] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][16]);


--V1_acq_data_in_pipe_reg[0][14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][14]
--register power-up is low

V1_acq_data_in_pipe_reg[0][14] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[14]);


--V1_acq_data_in_pipe_reg[1][15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][15]
--register power-up is low

V1_acq_data_in_pipe_reg[1][15] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][15]);


--V1_acq_data_in_pipe_reg[2][16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][16]
--register power-up is low

V1_acq_data_in_pipe_reg[2][16] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][16]);


--V1_acq_data_in_pipe_reg[3][17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][17]
--register power-up is low

V1_acq_data_in_pipe_reg[3][17] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][17]);


--V1_acq_data_in_pipe_reg[0][15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][15]
--register power-up is low

V1_acq_data_in_pipe_reg[0][15] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[15]);


--V1_acq_data_in_pipe_reg[1][16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][16]
--register power-up is low

V1_acq_data_in_pipe_reg[1][16] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][16]);


--V1_acq_data_in_pipe_reg[2][17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][17]
--register power-up is low

V1_acq_data_in_pipe_reg[2][17] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][17]);


--V1_acq_data_in_pipe_reg[3][18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][18]
--register power-up is low

V1_acq_data_in_pipe_reg[3][18] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][18]);


--V1_acq_data_in_pipe_reg[0][16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][16]
--register power-up is low

V1_acq_data_in_pipe_reg[0][16] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[16]);


--V1_acq_data_in_pipe_reg[1][17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][17]
--register power-up is low

V1_acq_data_in_pipe_reg[1][17] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][17]);


--V1_acq_data_in_pipe_reg[2][18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][18]
--register power-up is low

V1_acq_data_in_pipe_reg[2][18] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][18]);


--V1_acq_data_in_pipe_reg[3][19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][19]
--register power-up is low

V1_acq_data_in_pipe_reg[3][19] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][19]);


--V1_acq_data_in_pipe_reg[0][17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][17]
--register power-up is low

V1_acq_data_in_pipe_reg[0][17] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[17]);


--V1_acq_data_in_pipe_reg[1][18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][18]
--register power-up is low

V1_acq_data_in_pipe_reg[1][18] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][18]);


--V1_acq_data_in_pipe_reg[2][19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][19]
--register power-up is low

V1_acq_data_in_pipe_reg[2][19] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][19]);


--V1_acq_data_in_pipe_reg[3][20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][20]
--register power-up is low

V1_acq_data_in_pipe_reg[3][20] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][20]);


--V1_acq_data_in_pipe_reg[0][18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][18]
--register power-up is low

V1_acq_data_in_pipe_reg[0][18] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[18]);


--V1_acq_data_in_pipe_reg[1][19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][19]
--register power-up is low

V1_acq_data_in_pipe_reg[1][19] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][19]);


--V1_acq_data_in_pipe_reg[2][20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][20]
--register power-up is low

V1_acq_data_in_pipe_reg[2][20] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][20]);


--V1_acq_data_in_pipe_reg[3][21] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][21]
--register power-up is low

V1_acq_data_in_pipe_reg[3][21] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][21]);


--V1_acq_data_in_pipe_reg[0][19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][19]
--register power-up is low

V1_acq_data_in_pipe_reg[0][19] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[19]);


--V1_acq_data_in_pipe_reg[1][20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][20]
--register power-up is low

V1_acq_data_in_pipe_reg[1][20] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][20]);


--V1_acq_data_in_pipe_reg[2][21] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][21]
--register power-up is low

V1_acq_data_in_pipe_reg[2][21] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][21]);


--V1_acq_data_in_pipe_reg[3][22] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][22]
--register power-up is low

V1_acq_data_in_pipe_reg[3][22] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][22]);


--V1_acq_data_in_pipe_reg[0][20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][20]
--register power-up is low

V1_acq_data_in_pipe_reg[0][20] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[20]);


--V1_acq_data_in_pipe_reg[1][21] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][21]
--register power-up is low

V1_acq_data_in_pipe_reg[1][21] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][21]);


--V1_acq_data_in_pipe_reg[2][22] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][22]
--register power-up is low

V1_acq_data_in_pipe_reg[2][22] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][22]);


--V1_acq_data_in_pipe_reg[3][23] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][23]
--register power-up is low

V1_acq_data_in_pipe_reg[3][23] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][23]);


--V1_acq_data_in_pipe_reg[0][21] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][21]
--register power-up is low

V1_acq_data_in_pipe_reg[0][21] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[21]);


--V1_acq_data_in_pipe_reg[1][22] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][22]
--register power-up is low

V1_acq_data_in_pipe_reg[1][22] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][22]);


--V1_acq_data_in_pipe_reg[2][23] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][23]
--register power-up is low

V1_acq_data_in_pipe_reg[2][23] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][23]);


--V1_acq_data_in_pipe_reg[3][24] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][24]
--register power-up is low

V1_acq_data_in_pipe_reg[3][24] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][24]);


--V1_acq_data_in_pipe_reg[0][22] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][22]
--register power-up is low

V1_acq_data_in_pipe_reg[0][22] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[22]);


--V1_acq_data_in_pipe_reg[1][23] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][23]
--register power-up is low

V1_acq_data_in_pipe_reg[1][23] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][23]);


--V1_acq_data_in_pipe_reg[2][24] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][24]
--register power-up is low

V1_acq_data_in_pipe_reg[2][24] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][24]);


--V1_acq_data_in_pipe_reg[3][25] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][25]
--register power-up is low

V1_acq_data_in_pipe_reg[3][25] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][25]);


--V1_acq_data_in_pipe_reg[0][23] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][23]
--register power-up is low

V1_acq_data_in_pipe_reg[0][23] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[23]);


--V1_acq_data_in_pipe_reg[1][24] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][24]
--register power-up is low

V1_acq_data_in_pipe_reg[1][24] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][24]);


--V1_acq_data_in_pipe_reg[2][25] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][25]
--register power-up is low

V1_acq_data_in_pipe_reg[2][25] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][25]);


--V1_acq_data_in_pipe_reg[3][26] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][26]
--register power-up is low

V1_acq_data_in_pipe_reg[3][26] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][26]);


--V1_acq_data_in_pipe_reg[0][24] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][24]
--register power-up is low

V1_acq_data_in_pipe_reg[0][24] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[24]);


--V1_acq_data_in_pipe_reg[1][25] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][25]
--register power-up is low

V1_acq_data_in_pipe_reg[1][25] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][25]);


--V1_acq_data_in_pipe_reg[2][26] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][26]
--register power-up is low

V1_acq_data_in_pipe_reg[2][26] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][26]);


--V1_acq_data_in_pipe_reg[3][27] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][27]
--register power-up is low

V1_acq_data_in_pipe_reg[3][27] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][27]);


--V1_acq_data_in_pipe_reg[0][25] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][25]
--register power-up is low

V1_acq_data_in_pipe_reg[0][25] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[25]);


--V1_acq_data_in_pipe_reg[1][26] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][26]
--register power-up is low

V1_acq_data_in_pipe_reg[1][26] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][26]);


--V1_acq_data_in_pipe_reg[2][27] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][27]
--register power-up is low

V1_acq_data_in_pipe_reg[2][27] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][27]);


--V1_acq_data_in_pipe_reg[3][28] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][28]
--register power-up is low

V1_acq_data_in_pipe_reg[3][28] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][28]);


--V1_acq_data_in_pipe_reg[0][26] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][26]
--register power-up is low

V1_acq_data_in_pipe_reg[0][26] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[26]);


--V1_acq_data_in_pipe_reg[1][27] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][27]
--register power-up is low

V1_acq_data_in_pipe_reg[1][27] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][27]);


--V1_acq_data_in_pipe_reg[2][28] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][28]
--register power-up is low

V1_acq_data_in_pipe_reg[2][28] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][28]);


--V1_acq_data_in_pipe_reg[3][29] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][29]
--register power-up is low

V1_acq_data_in_pipe_reg[3][29] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][29]);


--V1_acq_data_in_pipe_reg[0][27] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][27]
--register power-up is low

V1_acq_data_in_pipe_reg[0][27] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[27]);


--V1_acq_data_in_pipe_reg[1][28] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][28]
--register power-up is low

V1_acq_data_in_pipe_reg[1][28] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][28]);


--V1_acq_data_in_pipe_reg[2][29] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][29]
--register power-up is low

V1_acq_data_in_pipe_reg[2][29] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][29]);


--V1_acq_data_in_pipe_reg[3][30] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][30]
--register power-up is low

V1_acq_data_in_pipe_reg[3][30] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][30]);


--V1_acq_data_in_pipe_reg[0][28] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][28]
--register power-up is low

V1_acq_data_in_pipe_reg[0][28] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[28]);


--V1_acq_data_in_pipe_reg[1][29] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][29]
--register power-up is low

V1_acq_data_in_pipe_reg[1][29] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][29]);


--V1_acq_data_in_pipe_reg[2][30] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][30]
--register power-up is low

V1_acq_data_in_pipe_reg[2][30] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][30]);


--V1_acq_data_in_pipe_reg[3][31] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][31]
--register power-up is low

V1_acq_data_in_pipe_reg[3][31] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][31]);


--V1_acq_data_in_pipe_reg[0][29] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][29]
--register power-up is low

V1_acq_data_in_pipe_reg[0][29] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[29]);


--V1_acq_data_in_pipe_reg[1][30] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][30]
--register power-up is low

V1_acq_data_in_pipe_reg[1][30] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][30]);


--V1_acq_data_in_pipe_reg[2][31] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][31]
--register power-up is low

V1_acq_data_in_pipe_reg[2][31] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][31]);


--V1_acq_data_in_pipe_reg[3][32] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][32]
--register power-up is low

V1_acq_data_in_pipe_reg[3][32] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][32]);


--V1_acq_data_in_pipe_reg[0][30] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][30]
--register power-up is low

V1_acq_data_in_pipe_reg[0][30] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[30]);


--V1_acq_data_in_pipe_reg[1][31] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][31]
--register power-up is low

V1_acq_data_in_pipe_reg[1][31] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][31]);


--V1_acq_data_in_pipe_reg[2][32] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][32]
--register power-up is low

V1_acq_data_in_pipe_reg[2][32] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][32]);


--V1_acq_data_in_pipe_reg[3][33] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][33]
--register power-up is low

V1_acq_data_in_pipe_reg[3][33] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][33]);


--V1_acq_data_in_pipe_reg[0][31] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][31]
--register power-up is low

V1_acq_data_in_pipe_reg[0][31] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[31]);


--V1_acq_data_in_pipe_reg[1][32] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][32]
--register power-up is low

V1_acq_data_in_pipe_reg[1][32] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][32]);


--V1_acq_data_in_pipe_reg[2][33] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][33]
--register power-up is low

V1_acq_data_in_pipe_reg[2][33] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][33]);


--V1_acq_data_in_pipe_reg[3][34] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][34]
--register power-up is low

V1_acq_data_in_pipe_reg[3][34] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][34]);


--V1_acq_data_in_pipe_reg[0][32] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][32]
--register power-up is low

V1_acq_data_in_pipe_reg[0][32] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[32]);


--V1_acq_data_in_pipe_reg[1][33] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][33]
--register power-up is low

V1_acq_data_in_pipe_reg[1][33] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][33]);


--V1_acq_data_in_pipe_reg[2][34] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][34]
--register power-up is low

V1_acq_data_in_pipe_reg[2][34] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][34]);


--V1_acq_data_in_pipe_reg[3][35] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][35]
--register power-up is low

V1_acq_data_in_pipe_reg[3][35] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][35]);


--V1_acq_data_in_pipe_reg[0][33] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][33]
--register power-up is low

V1_acq_data_in_pipe_reg[0][33] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[33]);


--V1_acq_data_in_pipe_reg[1][34] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][34]
--register power-up is low

V1_acq_data_in_pipe_reg[1][34] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][34]);


--V1_acq_data_in_pipe_reg[2][35] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][35]
--register power-up is low

V1_acq_data_in_pipe_reg[2][35] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][35]);


--V1_acq_data_in_pipe_reg[3][36] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][36]
--register power-up is low

V1_acq_data_in_pipe_reg[3][36] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][36]);


--V1_acq_data_in_pipe_reg[0][34] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][34]
--register power-up is low

V1_acq_data_in_pipe_reg[0][34] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[34]);


--V1_acq_data_in_pipe_reg[1][35] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][35]
--register power-up is low

V1_acq_data_in_pipe_reg[1][35] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][35]);


--V1_acq_data_in_pipe_reg[2][36] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][36]
--register power-up is low

V1_acq_data_in_pipe_reg[2][36] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][36]);


--V1_acq_data_in_pipe_reg[3][37] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][37]
--register power-up is low

V1_acq_data_in_pipe_reg[3][37] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][37]);


--V1_acq_data_in_pipe_reg[0][35] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][35]
--register power-up is low

V1_acq_data_in_pipe_reg[0][35] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[35]);


--V1_acq_data_in_pipe_reg[1][36] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][36]
--register power-up is low

V1_acq_data_in_pipe_reg[1][36] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][36]);


--V1_acq_data_in_pipe_reg[2][37] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][37]
--register power-up is low

V1_acq_data_in_pipe_reg[2][37] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][37]);


--V1_acq_data_in_pipe_reg[3][38] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][38]
--register power-up is low

V1_acq_data_in_pipe_reg[3][38] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][38]);


--V1_acq_data_in_pipe_reg[0][36] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][36]
--register power-up is low

V1_acq_data_in_pipe_reg[0][36] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[36]);


--V1_acq_data_in_pipe_reg[1][37] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][37]
--register power-up is low

V1_acq_data_in_pipe_reg[1][37] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][37]);


--V1_acq_data_in_pipe_reg[2][38] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][38]
--register power-up is low

V1_acq_data_in_pipe_reg[2][38] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][38]);


--V1_acq_data_in_pipe_reg[3][39] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][39]
--register power-up is low

V1_acq_data_in_pipe_reg[3][39] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][39]);


--V1_acq_data_in_pipe_reg[0][37] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][37]
--register power-up is low

V1_acq_data_in_pipe_reg[0][37] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[37]);


--V1_acq_data_in_pipe_reg[1][38] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][38]
--register power-up is low

V1_acq_data_in_pipe_reg[1][38] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][38]);


--V1_acq_data_in_pipe_reg[2][39] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][39]
--register power-up is low

V1_acq_data_in_pipe_reg[2][39] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][39]);


--V1_acq_data_in_pipe_reg[3][40] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][40]
--register power-up is low

V1_acq_data_in_pipe_reg[3][40] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][40]);


--V1_acq_data_in_pipe_reg[0][38] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][38]
--register power-up is low

V1_acq_data_in_pipe_reg[0][38] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[38]);


--V1_acq_data_in_pipe_reg[1][39] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][39]
--register power-up is low

V1_acq_data_in_pipe_reg[1][39] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][39]);


--V1_acq_data_in_pipe_reg[2][40] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][40]
--register power-up is low

V1_acq_data_in_pipe_reg[2][40] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][40]);


--V1_acq_data_in_pipe_reg[3][41] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][41]
--register power-up is low

V1_acq_data_in_pipe_reg[3][41] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][41]);


--V1_acq_data_in_pipe_reg[0][39] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][39]
--register power-up is low

V1_acq_data_in_pipe_reg[0][39] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[39]);


--V1_acq_data_in_pipe_reg[1][40] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][40]
--register power-up is low

V1_acq_data_in_pipe_reg[1][40] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][40]);


--V1_acq_data_in_pipe_reg[2][41] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][41]
--register power-up is low

V1_acq_data_in_pipe_reg[2][41] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][41]);


--V1_acq_data_in_pipe_reg[3][42] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][42]
--register power-up is low

V1_acq_data_in_pipe_reg[3][42] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][42]);


--V1_acq_data_in_pipe_reg[0][40] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][40]
--register power-up is low

V1_acq_data_in_pipe_reg[0][40] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[40]);


--V1_acq_data_in_pipe_reg[1][41] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][41]
--register power-up is low

V1_acq_data_in_pipe_reg[1][41] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][41]);


--V1_acq_data_in_pipe_reg[2][42] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][42]
--register power-up is low

V1_acq_data_in_pipe_reg[2][42] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][42]);


--V1_acq_data_in_pipe_reg[3][43] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][43]
--register power-up is low

V1_acq_data_in_pipe_reg[3][43] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][43]);


--V1_acq_data_in_pipe_reg[0][41] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][41]
--register power-up is low

V1_acq_data_in_pipe_reg[0][41] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[41]);


--V1_acq_data_in_pipe_reg[1][42] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][42]
--register power-up is low

V1_acq_data_in_pipe_reg[1][42] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][42]);


--V1_acq_data_in_pipe_reg[2][43] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][43]
--register power-up is low

V1_acq_data_in_pipe_reg[2][43] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][43]);


--V1_acq_data_in_pipe_reg[3][44] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][44]
--register power-up is low

V1_acq_data_in_pipe_reg[3][44] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][44]);


--V1_acq_data_in_pipe_reg[0][42] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][42]
--register power-up is low

V1_acq_data_in_pipe_reg[0][42] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[42]);


--V1_acq_data_in_pipe_reg[1][43] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][43]
--register power-up is low

V1_acq_data_in_pipe_reg[1][43] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][43]);


--V1_acq_data_in_pipe_reg[2][44] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][44]
--register power-up is low

V1_acq_data_in_pipe_reg[2][44] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][44]);


--V1_acq_data_in_pipe_reg[3][45] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][45]
--register power-up is low

V1_acq_data_in_pipe_reg[3][45] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][45]);


--V1_acq_data_in_pipe_reg[0][43] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][43]
--register power-up is low

V1_acq_data_in_pipe_reg[0][43] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[43]);


--V1_acq_data_in_pipe_reg[1][44] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][44]
--register power-up is low

V1_acq_data_in_pipe_reg[1][44] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][44]);


--V1_acq_data_in_pipe_reg[2][45] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][45]
--register power-up is low

V1_acq_data_in_pipe_reg[2][45] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][45]);


--V1_acq_data_in_pipe_reg[3][46] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][46]
--register power-up is low

V1_acq_data_in_pipe_reg[3][46] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][46]);


--V1_acq_data_in_pipe_reg[0][44] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][44]
--register power-up is low

V1_acq_data_in_pipe_reg[0][44] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[44]);


--V1_acq_data_in_pipe_reg[1][45] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][45]
--register power-up is low

V1_acq_data_in_pipe_reg[1][45] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][45]);


--V1_acq_data_in_pipe_reg[2][46] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][46]
--register power-up is low

V1_acq_data_in_pipe_reg[2][46] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][46]);


--V1_acq_data_in_pipe_reg[3][47] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][47]
--register power-up is low

V1_acq_data_in_pipe_reg[3][47] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][47]);


--V1_acq_data_in_pipe_reg[0][45] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][45]
--register power-up is low

V1_acq_data_in_pipe_reg[0][45] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[45]);


--V1_acq_data_in_pipe_reg[1][46] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][46]
--register power-up is low

V1_acq_data_in_pipe_reg[1][46] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][46]);


--V1_acq_data_in_pipe_reg[2][47] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][47]
--register power-up is low

V1_acq_data_in_pipe_reg[2][47] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][47]);


--V1_acq_data_in_pipe_reg[3][48] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][48]
--register power-up is low

V1_acq_data_in_pipe_reg[3][48] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][48]);


--V1_acq_data_in_pipe_reg[0][46] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][46]
--register power-up is low

V1_acq_data_in_pipe_reg[0][46] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[46]);


--V1_acq_data_in_pipe_reg[1][47] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][47]
--register power-up is low

V1_acq_data_in_pipe_reg[1][47] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][47]);


--V1_acq_data_in_pipe_reg[2][48] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][48]
--register power-up is low

V1_acq_data_in_pipe_reg[2][48] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][48]);


--V1_acq_data_in_pipe_reg[3][49] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][49]
--register power-up is low

V1_acq_data_in_pipe_reg[3][49] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][49]);


--V1_acq_data_in_pipe_reg[0][47] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][47]
--register power-up is low

V1_acq_data_in_pipe_reg[0][47] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[47]);


--V1_acq_data_in_pipe_reg[1][48] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][48]
--register power-up is low

V1_acq_data_in_pipe_reg[1][48] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][48]);


--V1_acq_data_in_pipe_reg[2][49] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][49]
--register power-up is low

V1_acq_data_in_pipe_reg[2][49] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][49]);


--V1_acq_data_in_pipe_reg[3][50] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][50]
--register power-up is low

V1_acq_data_in_pipe_reg[3][50] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][50]);


--V1_acq_data_in_pipe_reg[0][48] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][48]
--register power-up is low

V1_acq_data_in_pipe_reg[0][48] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[48]);


--V1_acq_data_in_pipe_reg[1][49] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][49]
--register power-up is low

V1_acq_data_in_pipe_reg[1][49] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][49]);


--V1_acq_data_in_pipe_reg[2][50] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][50]
--register power-up is low

V1_acq_data_in_pipe_reg[2][50] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][50]);


--V1_acq_data_in_pipe_reg[3][51] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][51]
--register power-up is low

V1_acq_data_in_pipe_reg[3][51] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][51]);


--V1_acq_data_in_pipe_reg[0][49] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][49]
--register power-up is low

V1_acq_data_in_pipe_reg[0][49] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[49]);


--V1_acq_data_in_pipe_reg[1][50] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][50]
--register power-up is low

V1_acq_data_in_pipe_reg[1][50] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][50]);


--V1_acq_data_in_pipe_reg[2][51] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][51]
--register power-up is low

V1_acq_data_in_pipe_reg[2][51] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][51]);


--V1_acq_data_in_pipe_reg[3][52] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][52]
--register power-up is low

V1_acq_data_in_pipe_reg[3][52] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][52]);


--V1_acq_data_in_pipe_reg[0][50] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][50]
--register power-up is low

V1_acq_data_in_pipe_reg[0][50] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[50]);


--V1_acq_data_in_pipe_reg[1][51] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][51]
--register power-up is low

V1_acq_data_in_pipe_reg[1][51] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][51]);


--V1_acq_data_in_pipe_reg[2][52] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][52]
--register power-up is low

V1_acq_data_in_pipe_reg[2][52] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][52]);


--V1_acq_data_in_pipe_reg[3][53] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][53]
--register power-up is low

V1_acq_data_in_pipe_reg[3][53] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][53]);


--V1_acq_data_in_pipe_reg[0][51] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][51]
--register power-up is low

V1_acq_data_in_pipe_reg[0][51] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[51]);


--V1_acq_data_in_pipe_reg[1][52] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][52]
--register power-up is low

V1_acq_data_in_pipe_reg[1][52] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][52]);


--V1_acq_data_in_pipe_reg[2][53] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][53]
--register power-up is low

V1_acq_data_in_pipe_reg[2][53] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][53]);


--V1_acq_data_in_pipe_reg[3][54] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][54]
--register power-up is low

V1_acq_data_in_pipe_reg[3][54] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][54]);


--V1_acq_data_in_pipe_reg[0][52] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][52]
--register power-up is low

V1_acq_data_in_pipe_reg[0][52] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[52]);


--V1_acq_data_in_pipe_reg[1][53] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][53]
--register power-up is low

V1_acq_data_in_pipe_reg[1][53] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][53]);


--V1_acq_data_in_pipe_reg[2][54] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][54]
--register power-up is low

V1_acq_data_in_pipe_reg[2][54] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][54]);


--V1_acq_data_in_pipe_reg[3][55] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][55]
--register power-up is low

V1_acq_data_in_pipe_reg[3][55] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][55]);


--V1_acq_data_in_pipe_reg[0][53] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][53]
--register power-up is low

V1_acq_data_in_pipe_reg[0][53] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[53]);


--V1_acq_data_in_pipe_reg[1][54] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][54]
--register power-up is low

V1_acq_data_in_pipe_reg[1][54] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][54]);


--V1_acq_data_in_pipe_reg[2][55] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][55]
--register power-up is low

V1_acq_data_in_pipe_reg[2][55] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][55]);


--V1_acq_data_in_pipe_reg[3][56] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][56]
--register power-up is low

V1_acq_data_in_pipe_reg[3][56] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][56]);


--V1_acq_data_in_pipe_reg[0][54] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][54]
--register power-up is low

V1_acq_data_in_pipe_reg[0][54] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[54]);


--V1_acq_data_in_pipe_reg[1][55] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][55]
--register power-up is low

V1_acq_data_in_pipe_reg[1][55] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][55]);


--V1_acq_data_in_pipe_reg[2][56] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][56]
--register power-up is low

V1_acq_data_in_pipe_reg[2][56] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][56]);


--V1_acq_data_in_pipe_reg[3][57] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][57]
--register power-up is low

V1_acq_data_in_pipe_reg[3][57] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][57]);


--V1_acq_data_in_pipe_reg[0][55] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][55]
--register power-up is low

V1_acq_data_in_pipe_reg[0][55] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[55]);


--V1_acq_data_in_pipe_reg[1][56] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][56]
--register power-up is low

V1_acq_data_in_pipe_reg[1][56] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][56]);


--V1_acq_data_in_pipe_reg[2][57] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][57]
--register power-up is low

V1_acq_data_in_pipe_reg[2][57] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][57]);


--V1_acq_data_in_pipe_reg[3][58] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][58]
--register power-up is low

V1_acq_data_in_pipe_reg[3][58] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][58]);


--V1_acq_data_in_pipe_reg[0][56] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][56]
--register power-up is low

V1_acq_data_in_pipe_reg[0][56] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[56]);


--V1_acq_data_in_pipe_reg[1][57] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][57]
--register power-up is low

V1_acq_data_in_pipe_reg[1][57] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][57]);


--V1_acq_data_in_pipe_reg[2][58] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][58]
--register power-up is low

V1_acq_data_in_pipe_reg[2][58] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][58]);


--V1_acq_data_in_pipe_reg[3][59] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][59]
--register power-up is low

V1_acq_data_in_pipe_reg[3][59] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][59]);


--V1_acq_data_in_pipe_reg[0][57] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][57]
--register power-up is low

V1_acq_data_in_pipe_reg[0][57] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[57]);


--V1_acq_data_in_pipe_reg[1][58] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][58]
--register power-up is low

V1_acq_data_in_pipe_reg[1][58] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][58]);


--V1_acq_data_in_pipe_reg[2][59] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][59]
--register power-up is low

V1_acq_data_in_pipe_reg[2][59] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][59]);


--V1_acq_data_in_pipe_reg[3][60] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][60]
--register power-up is low

V1_acq_data_in_pipe_reg[3][60] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][60]);


--V1_acq_data_in_pipe_reg[0][58] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][58]
--register power-up is low

V1_acq_data_in_pipe_reg[0][58] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[58]);


--V1_acq_data_in_pipe_reg[1][59] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][59]
--register power-up is low

V1_acq_data_in_pipe_reg[1][59] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][59]);


--V1_acq_data_in_pipe_reg[2][60] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][60]
--register power-up is low

V1_acq_data_in_pipe_reg[2][60] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][60]);


--V1_acq_data_in_pipe_reg[3][61] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][61]
--register power-up is low

V1_acq_data_in_pipe_reg[3][61] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][61]);


--V1_acq_data_in_pipe_reg[0][59] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][59]
--register power-up is low

V1_acq_data_in_pipe_reg[0][59] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[59]);


--V1_acq_data_in_pipe_reg[1][60] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][60]
--register power-up is low

V1_acq_data_in_pipe_reg[1][60] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][60]);


--V1_acq_data_in_pipe_reg[2][61] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][61]
--register power-up is low

V1_acq_data_in_pipe_reg[2][61] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][61]);


--V1_acq_data_in_pipe_reg[3][62] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][62]
--register power-up is low

V1_acq_data_in_pipe_reg[3][62] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][62]);


--V1_acq_data_in_pipe_reg[0][60] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][60]
--register power-up is low

V1_acq_data_in_pipe_reg[0][60] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[60]);


--V1_acq_data_in_pipe_reg[1][61] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][61]
--register power-up is low

V1_acq_data_in_pipe_reg[1][61] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][61]);


--V1_acq_data_in_pipe_reg[2][62] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][62]
--register power-up is low

V1_acq_data_in_pipe_reg[2][62] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][62]);


--V1_acq_data_in_pipe_reg[3][63] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][63]
--register power-up is low

V1_acq_data_in_pipe_reg[3][63] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][63]);


--V1_acq_data_in_pipe_reg[0][61] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][61]
--register power-up is low

V1_acq_data_in_pipe_reg[0][61] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[61]);


--V1_acq_data_in_pipe_reg[1][62] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][62]
--register power-up is low

V1_acq_data_in_pipe_reg[1][62] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][62]);


--V1_acq_data_in_pipe_reg[2][63] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][63]
--register power-up is low

V1_acq_data_in_pipe_reg[2][63] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][63]);


--V1_acq_data_in_pipe_reg[3][64] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][64]
--register power-up is low

V1_acq_data_in_pipe_reg[3][64] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][64]);


--V1_acq_data_in_pipe_reg[0][62] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][62]
--register power-up is low

V1_acq_data_in_pipe_reg[0][62] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[62]);


--V1_acq_data_in_pipe_reg[1][63] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][63]
--register power-up is low

V1_acq_data_in_pipe_reg[1][63] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][63]);


--V1_acq_data_in_pipe_reg[2][64] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][64]
--register power-up is low

V1_acq_data_in_pipe_reg[2][64] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][64]);


--V1_acq_data_in_pipe_reg[3][65] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][65]
--register power-up is low

V1_acq_data_in_pipe_reg[3][65] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][65]);


--V1_acq_data_in_pipe_reg[0][63] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][63]
--register power-up is low

V1_acq_data_in_pipe_reg[0][63] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[63]);


--V1_acq_data_in_pipe_reg[1][64] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][64]
--register power-up is low

V1_acq_data_in_pipe_reg[1][64] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][64]);


--V1_acq_data_in_pipe_reg[2][65] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][65]
--register power-up is low

V1_acq_data_in_pipe_reg[2][65] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][65]);


--V1_acq_data_in_pipe_reg[3][66] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][66]
--register power-up is low

V1_acq_data_in_pipe_reg[3][66] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][66]);


--V1_acq_data_in_pipe_reg[0][64] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][64]
--register power-up is low

V1_acq_data_in_pipe_reg[0][64] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[64]);


--V1_acq_data_in_pipe_reg[1][65] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][65]
--register power-up is low

V1_acq_data_in_pipe_reg[1][65] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][65]);


--V1_acq_data_in_pipe_reg[2][66] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][66]
--register power-up is low

V1_acq_data_in_pipe_reg[2][66] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][66]);


--V1_acq_data_in_pipe_reg[3][67] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][67]
--register power-up is low

V1_acq_data_in_pipe_reg[3][67] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][67]);


--V1_acq_data_in_pipe_reg[0][65] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][65]
--register power-up is low

V1_acq_data_in_pipe_reg[0][65] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[65]);


--V1_acq_data_in_pipe_reg[1][66] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][66]
--register power-up is low

V1_acq_data_in_pipe_reg[1][66] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][66]);


--V1_acq_data_in_pipe_reg[2][67] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][67]
--register power-up is low

V1_acq_data_in_pipe_reg[2][67] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][67]);


--V1_acq_data_in_pipe_reg[3][68] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][68]
--register power-up is low

V1_acq_data_in_pipe_reg[3][68] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][68]);


--V1_acq_data_in_pipe_reg[0][66] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][66]
--register power-up is low

V1_acq_data_in_pipe_reg[0][66] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[66]);


--V1_acq_data_in_pipe_reg[1][67] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][67]
--register power-up is low

V1_acq_data_in_pipe_reg[1][67] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][67]);


--V1_acq_data_in_pipe_reg[2][68] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][68]
--register power-up is low

V1_acq_data_in_pipe_reg[2][68] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][68]);


--V1_acq_data_in_pipe_reg[3][69] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][69]
--register power-up is low

V1_acq_data_in_pipe_reg[3][69] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][69]);


--V1_acq_data_in_pipe_reg[0][67] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][67]
--register power-up is low

V1_acq_data_in_pipe_reg[0][67] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[67]);


--V1_acq_data_in_pipe_reg[1][68] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][68]
--register power-up is low

V1_acq_data_in_pipe_reg[1][68] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][68]);


--V1_acq_data_in_pipe_reg[2][69] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][69]
--register power-up is low

V1_acq_data_in_pipe_reg[2][69] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][69]);


--V1_acq_data_in_pipe_reg[3][70] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][70]
--register power-up is low

V1_acq_data_in_pipe_reg[3][70] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][70]);


--V1_acq_data_in_pipe_reg[0][68] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][68]
--register power-up is low

V1_acq_data_in_pipe_reg[0][68] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[68]);


--V1_acq_data_in_pipe_reg[1][69] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][69]
--register power-up is low

V1_acq_data_in_pipe_reg[1][69] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][69]);


--V1_acq_data_in_pipe_reg[2][70] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][70]
--register power-up is low

V1_acq_data_in_pipe_reg[2][70] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][70]);


--V1_acq_data_in_pipe_reg[3][71] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][71]
--register power-up is low

V1_acq_data_in_pipe_reg[3][71] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][71]);


--BB5_dffs[73] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[73]
--register power-up is low

BB5_dffs[73] = AMPP_FUNCTION(C1_raw_tck, BB5L1, !V1_reset_all);


--V1_acq_data_in_pipe_reg[0][69] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][69]
--register power-up is low

V1_acq_data_in_pipe_reg[0][69] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[69]);


--V1_acq_data_in_pipe_reg[1][70] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][70]
--register power-up is low

V1_acq_data_in_pipe_reg[1][70] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][70]);


--V1_acq_data_in_pipe_reg[2][71] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][71]
--register power-up is low

V1_acq_data_in_pipe_reg[2][71] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][71]);


--V1_acq_data_in_pipe_reg[3][72] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][72]
--register power-up is low

V1_acq_data_in_pipe_reg[3][72] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][72]);


--BB5L1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|_~0
BB5L1 = AMPP_FUNCTION(!W1_offload_shift_ena, !EB1_counter_reg_bit[0], !W1L2, !RB1_ram_block1a73);


--V1_acq_data_in_pipe_reg[0][70] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][70]
--register power-up is low

V1_acq_data_in_pipe_reg[0][70] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[70]);


--V1_acq_data_in_pipe_reg[1][71] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][71]
--register power-up is low

V1_acq_data_in_pipe_reg[1][71] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][71]);


--V1_acq_data_in_pipe_reg[2][72] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][72]
--register power-up is low

V1_acq_data_in_pipe_reg[2][72] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][72]);


--V1_acq_data_in_pipe_reg[3][73] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][73]
--register power-up is low

V1_acq_data_in_pipe_reg[3][73] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[2][73]);


--V1_acq_data_in_pipe_reg[0][71] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][71]
--register power-up is low

V1_acq_data_in_pipe_reg[0][71] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[71]);


--V1_acq_data_in_pipe_reg[1][72] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][72]
--register power-up is low

V1_acq_data_in_pipe_reg[1][72] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][72]);


--V1_acq_data_in_pipe_reg[2][73] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][73]
--register power-up is low

V1_acq_data_in_pipe_reg[2][73] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[1][73]);


--V1_acq_data_in_pipe_reg[0][72] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][72]
--register power-up is low

V1_acq_data_in_pipe_reg[0][72] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[72]);


--V1_acq_data_in_pipe_reg[1][73] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][73]
--register power-up is low

V1_acq_data_in_pipe_reg[1][73] = AMPP_FUNCTION(C1_acq_clk, V1_acq_data_in_pipe_reg[0][73]);


--V1_acq_data_in_pipe_reg[0][73] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][73]
--register power-up is low

V1_acq_data_in_pipe_reg[0][73] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[73]);


--V1L439 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_enable_delayed~0
V1L439 = AMPP_FUNCTION(!CB1_\buffer_manager:done);


--CB1L183 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[6]~0
CB1L183 = AMPP_FUNCTION(!CB1L23);


--CB1L185 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[7]~1
CB1L185 = AMPP_FUNCTION(!CB1L27);


--CB1L187 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[8]~2
CB1L187 = AMPP_FUNCTION(!CB1L31);


--CB1L173 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[1]~3
CB1L173 = AMPP_FUNCTION(!CB1L35);


--CB1L175 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[2]~4
CB1L175 = AMPP_FUNCTION(!CB1L39);


--CB1L177 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[3]~5
CB1L177 = AMPP_FUNCTION(!CB1L43);


--CB1L179 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[4]~6
CB1L179 = AMPP_FUNCTION(!CB1L47);


--CB1L181 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[5]~7
CB1L181 = AMPP_FUNCTION(!CB1L51);


--C1L394 is sld_signaltap:auto_signaltap_0|~GND
C1L394 = GND;


--C1L395 is sld_signaltap:auto_signaltap_0|~VCC
C1L395 = VCC;


