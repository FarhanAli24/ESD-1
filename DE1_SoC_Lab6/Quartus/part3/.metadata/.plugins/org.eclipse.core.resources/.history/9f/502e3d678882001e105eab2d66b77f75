#include "io.h"
#include <stdio.h>
#include <stdlib.h>
#include "system.h"
#include "alt_types.h"
#include "sys/alt_irq.h"

// Create standard embedded type definitions
typedef   signed char   sint8;              // signed 8 bit values
typedef unsigned char   uint8;              // unsigned 8 bit values
typedef   signed short  sint16;             // signed 16 bit values
typedef unsigned short  uint16;             // unsigned 16 bit values
typedef   signed long   sint32;             // signed 32 bit values
typedef unsigned long   uint32;             // unsigned 32 bit values
typedef         float   real32;             // 32 bit real values

// Pointers for peripherals
uint32*	LEDRPtr = (uint32*)LEDS_BASE;
uint32* RAMPtr = (uint32*)INFERRED_RAM_BASE;
volatile uint32* KEYPtr = (uint32*)KEY1_BASE;

void ThirtyTwoBitTest(uint32 address, uint16 bytes_size, uint32 data)
{
	RAMPtr = (uint32)address;
	for(int i = address; i < bytes_size; i++)
	{
		(*RAMPtr+i) = data;
		//RAMPtr += 1;
	}

	RAMPtr = (uint32)address;
	for(int i = address; i < bytes_size; i++)
	{
		if (*RAMPtr != data)
		{
			*LEDRPtr = 0xFFFF;
		}
		else
		{
			*LEDRPtr = 0x0000;
		}
		RAMPtr += 1;
	}
	return;
}

void sixteenBItTest(uint32 address, uint16 bytes_size, uint32 data)
{
	RAMPtr = (uint32)address;
	for(int i = 0; i < bytes_size; i++)
	{
		*RAMPtr = data;
		RAMPtr += 1;
	}

	RAMPtr = (uint32)address;
	for(int i = 0; i < bytes_size; i++)
	{
		if (*RAMPtr != data)
		{
			*LEDRPtr = 0xFFFF;
			printf("ERROR: Data Mismatch at - ");
		}
		else
		{
			*LEDRPtr = 0x0000;
		}
		RAMPtr += 1;
	}
	return;
}

void key_isr (void)
{
	exit(0);
}

int main (void)
{
	*(KEYPtr + 2) = 0x02;
	//alt_ic_isr_register(KEY1_IRQ_INTERRUPT_CONTROLLER_ID,KEY1_IRQ,key_isr,0,0);
	while(1)
		ThirtyTwoBitTest(0,0x4000,0xEF); //0x12345678

	return(0);
}
